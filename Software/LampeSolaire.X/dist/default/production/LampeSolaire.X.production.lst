

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Aug 20 16:47:26 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16LF1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 1.45
    43                           ; Generated 16/11/2017 GMT
    44                           ; 
    45                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16LF1827 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  0111                     	;# 
   125  0112                     	;# 
   126  0113                     	;# 
   127  0114                     	;# 
   128  0115                     	;# 
   129  0116                     	;# 
   130  0117                     	;# 
   131  0118                     	;# 
   132  0119                     	;# 
   133  011A                     	;# 
   134  011B                     	;# 
   135  011D                     	;# 
   136  011E                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0191                     	;# 
   140  0191                     	;# 
   141  0192                     	;# 
   142  0193                     	;# 
   143  0193                     	;# 
   144  0193                     	;# 
   145  0194                     	;# 
   146  0195                     	;# 
   147  0196                     	;# 
   148  0199                     	;# 
   149  019A                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019B                     	;# 
   153  019B                     	;# 
   154  019C                     	;# 
   155  019C                     	;# 
   156  019D                     	;# 
   157  019E                     	;# 
   158  019F                     	;# 
   159  020C                     	;# 
   160  020D                     	;# 
   161  0211                     	;# 
   162  0211                     	;# 
   163  0212                     	;# 
   164  0212                     	;# 
   165  0213                     	;# 
   166  0213                     	;# 
   167  0214                     	;# 
   168  0214                     	;# 
   169  0215                     	;# 
   170  0215                     	;# 
   171  0215                     	;# 
   172  0216                     	;# 
   173  0216                     	;# 
   174  0217                     	;# 
   175  0217                     	;# 
   176  0219                     	;# 
   177  021A                     	;# 
   178  021B                     	;# 
   179  021C                     	;# 
   180  021D                     	;# 
   181  021E                     	;# 
   182  021F                     	;# 
   183  0291                     	;# 
   184  0291                     	;# 
   185  0292                     	;# 
   186  0293                     	;# 
   187  0294                     	;# 
   188  0295                     	;# 
   189  0295                     	;# 
   190  0296                     	;# 
   191  0298                     	;# 
   192  0298                     	;# 
   193  0299                     	;# 
   194  029A                     	;# 
   195  029B                     	;# 
   196  029C                     	;# 
   197  029C                     	;# 
   198  029D                     	;# 
   199  029E                     	;# 
   200  029E                     	;# 
   201  0311                     	;# 
   202  0311                     	;# 
   203  0312                     	;# 
   204  0313                     	;# 
   205  0318                     	;# 
   206  0318                     	;# 
   207  0319                     	;# 
   208  031A                     	;# 
   209  0394                     	;# 
   210  0395                     	;# 
   211  0396                     	;# 
   212  039A                     	;# 
   213  039C                     	;# 
   214  039D                     	;# 
   215  039E                     	;# 
   216  039F                     	;# 
   217  0415                     	;# 
   218  0416                     	;# 
   219  0417                     	;# 
   220  041C                     	;# 
   221  041D                     	;# 
   222  041E                     	;# 
   223  0FE4                     	;# 
   224  0FE5                     	;# 
   225  0FE6                     	;# 
   226  0FE7                     	;# 
   227  0FE8                     	;# 
   228  0FE9                     	;# 
   229  0FEA                     	;# 
   230  0FEB                     	;# 
   231  0FED                     	;# 
   232  0FEE                     	;# 
   233  0FEF                     	;# 
   234  0000                     	;# 
   235  0001                     	;# 
   236  0002                     	;# 
   237  0003                     	;# 
   238  0004                     	;# 
   239  0005                     	;# 
   240  0006                     	;# 
   241  0007                     	;# 
   242  0008                     	;# 
   243  0009                     	;# 
   244  000A                     	;# 
   245  000B                     	;# 
   246  000C                     	;# 
   247  000D                     	;# 
   248  0011                     	;# 
   249  0012                     	;# 
   250  0013                     	;# 
   251  0014                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0016                     	;# 
   255  0017                     	;# 
   256  0018                     	;# 
   257  0019                     	;# 
   258  001A                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0094                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0097                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009A                     	;# 
   275  009B                     	;# 
   276  009B                     	;# 
   277  009C                     	;# 
   278  009D                     	;# 
   279  009E                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  0111                     	;# 
   283  0112                     	;# 
   284  0113                     	;# 
   285  0114                     	;# 
   286  0115                     	;# 
   287  0116                     	;# 
   288  0117                     	;# 
   289  0118                     	;# 
   290  0119                     	;# 
   291  011A                     	;# 
   292  011B                     	;# 
   293  011D                     	;# 
   294  011E                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0191                     	;# 
   298  0191                     	;# 
   299  0192                     	;# 
   300  0193                     	;# 
   301  0193                     	;# 
   302  0193                     	;# 
   303  0194                     	;# 
   304  0195                     	;# 
   305  0196                     	;# 
   306  0199                     	;# 
   307  019A                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019B                     	;# 
   311  019B                     	;# 
   312  019C                     	;# 
   313  019C                     	;# 
   314  019D                     	;# 
   315  019E                     	;# 
   316  019F                     	;# 
   317  020C                     	;# 
   318  020D                     	;# 
   319  0211                     	;# 
   320  0211                     	;# 
   321  0212                     	;# 
   322  0212                     	;# 
   323  0213                     	;# 
   324  0213                     	;# 
   325  0214                     	;# 
   326  0214                     	;# 
   327  0215                     	;# 
   328  0215                     	;# 
   329  0215                     	;# 
   330  0216                     	;# 
   331  0216                     	;# 
   332  0217                     	;# 
   333  0217                     	;# 
   334  0219                     	;# 
   335  021A                     	;# 
   336  021B                     	;# 
   337  021C                     	;# 
   338  021D                     	;# 
   339  021E                     	;# 
   340  021F                     	;# 
   341  0291                     	;# 
   342  0291                     	;# 
   343  0292                     	;# 
   344  0293                     	;# 
   345  0294                     	;# 
   346  0295                     	;# 
   347  0295                     	;# 
   348  0296                     	;# 
   349  0298                     	;# 
   350  0298                     	;# 
   351  0299                     	;# 
   352  029A                     	;# 
   353  029B                     	;# 
   354  029C                     	;# 
   355  029C                     	;# 
   356  029D                     	;# 
   357  029E                     	;# 
   358  029E                     	;# 
   359  0311                     	;# 
   360  0311                     	;# 
   361  0312                     	;# 
   362  0313                     	;# 
   363  0318                     	;# 
   364  0318                     	;# 
   365  0319                     	;# 
   366  031A                     	;# 
   367  0394                     	;# 
   368  0395                     	;# 
   369  0396                     	;# 
   370  039A                     	;# 
   371  039C                     	;# 
   372  039D                     	;# 
   373  039E                     	;# 
   374  039F                     	;# 
   375  0415                     	;# 
   376  0416                     	;# 
   377  0417                     	;# 
   378  041C                     	;# 
   379  041D                     	;# 
   380  041E                     	;# 
   381  0FE4                     	;# 
   382  0FE5                     	;# 
   383  0FE6                     	;# 
   384  0FE7                     	;# 
   385  0FE8                     	;# 
   386  0FE9                     	;# 
   387  0FEA                     	;# 
   388  0FEB                     	;# 
   389  0FED                     	;# 
   390  0FEE                     	;# 
   391  0FEF                     	;# 
   392  0000                     	;# 
   393  0001                     	;# 
   394  0002                     	;# 
   395  0003                     	;# 
   396  0004                     	;# 
   397  0005                     	;# 
   398  0006                     	;# 
   399  0007                     	;# 
   400  0008                     	;# 
   401  0009                     	;# 
   402  000A                     	;# 
   403  000B                     	;# 
   404  000C                     	;# 
   405  000D                     	;# 
   406  0011                     	;# 
   407  0012                     	;# 
   408  0013                     	;# 
   409  0014                     	;# 
   410  0015                     	;# 
   411  0016                     	;# 
   412  0016                     	;# 
   413  0017                     	;# 
   414  0018                     	;# 
   415  0019                     	;# 
   416  001A                     	;# 
   417  001B                     	;# 
   418  001C                     	;# 
   419  001E                     	;# 
   420  001F                     	;# 
   421  008C                     	;# 
   422  008D                     	;# 
   423  0091                     	;# 
   424  0092                     	;# 
   425  0093                     	;# 
   426  0094                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009B                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  010C                     	;# 
   439  010D                     	;# 
   440  0111                     	;# 
   441  0112                     	;# 
   442  0113                     	;# 
   443  0114                     	;# 
   444  0115                     	;# 
   445  0116                     	;# 
   446  0117                     	;# 
   447  0118                     	;# 
   448  0119                     	;# 
   449  011A                     	;# 
   450  011B                     	;# 
   451  011D                     	;# 
   452  011E                     	;# 
   453  018C                     	;# 
   454  018D                     	;# 
   455  0191                     	;# 
   456  0191                     	;# 
   457  0192                     	;# 
   458  0193                     	;# 
   459  0193                     	;# 
   460  0193                     	;# 
   461  0194                     	;# 
   462  0195                     	;# 
   463  0196                     	;# 
   464  0199                     	;# 
   465  019A                     	;# 
   466  019B                     	;# 
   467  019B                     	;# 
   468  019B                     	;# 
   469  019B                     	;# 
   470  019C                     	;# 
   471  019C                     	;# 
   472  019D                     	;# 
   473  019E                     	;# 
   474  019F                     	;# 
   475  020C                     	;# 
   476  020D                     	;# 
   477  0211                     	;# 
   478  0211                     	;# 
   479  0212                     	;# 
   480  0212                     	;# 
   481  0213                     	;# 
   482  0213                     	;# 
   483  0214                     	;# 
   484  0214                     	;# 
   485  0215                     	;# 
   486  0215                     	;# 
   487  0215                     	;# 
   488  0216                     	;# 
   489  0216                     	;# 
   490  0217                     	;# 
   491  0217                     	;# 
   492  0219                     	;# 
   493  021A                     	;# 
   494  021B                     	;# 
   495  021C                     	;# 
   496  021D                     	;# 
   497  021E                     	;# 
   498  021F                     	;# 
   499  0291                     	;# 
   500  0291                     	;# 
   501  0292                     	;# 
   502  0293                     	;# 
   503  0294                     	;# 
   504  0295                     	;# 
   505  0295                     	;# 
   506  0296                     	;# 
   507  0298                     	;# 
   508  0298                     	;# 
   509  0299                     	;# 
   510  029A                     	;# 
   511  029B                     	;# 
   512  029C                     	;# 
   513  029C                     	;# 
   514  029D                     	;# 
   515  029E                     	;# 
   516  029E                     	;# 
   517  0311                     	;# 
   518  0311                     	;# 
   519  0312                     	;# 
   520  0313                     	;# 
   521  0318                     	;# 
   522  0318                     	;# 
   523  0319                     	;# 
   524  031A                     	;# 
   525  0394                     	;# 
   526  0395                     	;# 
   527  0396                     	;# 
   528  039A                     	;# 
   529  039C                     	;# 
   530  039D                     	;# 
   531  039E                     	;# 
   532  039F                     	;# 
   533  0415                     	;# 
   534  0416                     	;# 
   535  0417                     	;# 
   536  041C                     	;# 
   537  041D                     	;# 
   538  041E                     	;# 
   539  0FE4                     	;# 
   540  0FE5                     	;# 
   541  0FE6                     	;# 
   542  0FE7                     	;# 
   543  0FE8                     	;# 
   544  0FE9                     	;# 
   545  0FEA                     	;# 
   546  0FEB                     	;# 
   547  0FED                     	;# 
   548  0FEE                     	;# 
   549  0FEF                     	;# 
   550  0000                     	;# 
   551  0001                     	;# 
   552  0002                     	;# 
   553  0003                     	;# 
   554  0004                     	;# 
   555  0005                     	;# 
   556  0006                     	;# 
   557  0007                     	;# 
   558  0008                     	;# 
   559  0009                     	;# 
   560  000A                     	;# 
   561  000B                     	;# 
   562  000C                     	;# 
   563  000D                     	;# 
   564  0011                     	;# 
   565  0012                     	;# 
   566  0013                     	;# 
   567  0014                     	;# 
   568  0015                     	;# 
   569  0016                     	;# 
   570  0016                     	;# 
   571  0017                     	;# 
   572  0018                     	;# 
   573  0019                     	;# 
   574  001A                     	;# 
   575  001B                     	;# 
   576  001C                     	;# 
   577  001E                     	;# 
   578  001F                     	;# 
   579  008C                     	;# 
   580  008D                     	;# 
   581  0091                     	;# 
   582  0092                     	;# 
   583  0093                     	;# 
   584  0094                     	;# 
   585  0095                     	;# 
   586  0096                     	;# 
   587  0097                     	;# 
   588  0098                     	;# 
   589  0099                     	;# 
   590  009A                     	;# 
   591  009B                     	;# 
   592  009B                     	;# 
   593  009C                     	;# 
   594  009D                     	;# 
   595  009E                     	;# 
   596  010C                     	;# 
   597  010D                     	;# 
   598  0111                     	;# 
   599  0112                     	;# 
   600  0113                     	;# 
   601  0114                     	;# 
   602  0115                     	;# 
   603  0116                     	;# 
   604  0117                     	;# 
   605  0118                     	;# 
   606  0119                     	;# 
   607  011A                     	;# 
   608  011B                     	;# 
   609  011D                     	;# 
   610  011E                     	;# 
   611  018C                     	;# 
   612  018D                     	;# 
   613  0191                     	;# 
   614  0191                     	;# 
   615  0192                     	;# 
   616  0193                     	;# 
   617  0193                     	;# 
   618  0193                     	;# 
   619  0194                     	;# 
   620  0195                     	;# 
   621  0196                     	;# 
   622  0199                     	;# 
   623  019A                     	;# 
   624  019B                     	;# 
   625  019B                     	;# 
   626  019B                     	;# 
   627  019B                     	;# 
   628  019C                     	;# 
   629  019C                     	;# 
   630  019D                     	;# 
   631  019E                     	;# 
   632  019F                     	;# 
   633  020C                     	;# 
   634  020D                     	;# 
   635  0211                     	;# 
   636  0211                     	;# 
   637  0212                     	;# 
   638  0212                     	;# 
   639  0213                     	;# 
   640  0213                     	;# 
   641  0214                     	;# 
   642  0214                     	;# 
   643  0215                     	;# 
   644  0215                     	;# 
   645  0215                     	;# 
   646  0216                     	;# 
   647  0216                     	;# 
   648  0217                     	;# 
   649  0217                     	;# 
   650  0219                     	;# 
   651  021A                     	;# 
   652  021B                     	;# 
   653  021C                     	;# 
   654  021D                     	;# 
   655  021E                     	;# 
   656  021F                     	;# 
   657  0291                     	;# 
   658  0291                     	;# 
   659  0292                     	;# 
   660  0293                     	;# 
   661  0294                     	;# 
   662  0295                     	;# 
   663  0295                     	;# 
   664  0296                     	;# 
   665  0298                     	;# 
   666  0298                     	;# 
   667  0299                     	;# 
   668  029A                     	;# 
   669  029B                     	;# 
   670  029C                     	;# 
   671  029C                     	;# 
   672  029D                     	;# 
   673  029E                     	;# 
   674  029E                     	;# 
   675  0311                     	;# 
   676  0311                     	;# 
   677  0312                     	;# 
   678  0313                     	;# 
   679  0318                     	;# 
   680  0318                     	;# 
   681  0319                     	;# 
   682  031A                     	;# 
   683  0394                     	;# 
   684  0395                     	;# 
   685  0396                     	;# 
   686  039A                     	;# 
   687  039C                     	;# 
   688  039D                     	;# 
   689  039E                     	;# 
   690  039F                     	;# 
   691  0415                     	;# 
   692  0416                     	;# 
   693  0417                     	;# 
   694  041C                     	;# 
   695  041D                     	;# 
   696  041E                     	;# 
   697  0FE4                     	;# 
   698  0FE5                     	;# 
   699  0FE6                     	;# 
   700  0FE7                     	;# 
   701  0FE8                     	;# 
   702  0FE9                     	;# 
   703  0FEA                     	;# 
   704  0FEB                     	;# 
   705  0FED                     	;# 
   706  0FEE                     	;# 
   707  0FEF                     	;# 
   708  0000                     	;# 
   709  0001                     	;# 
   710  0002                     	;# 
   711  0003                     	;# 
   712  0004                     	;# 
   713  0005                     	;# 
   714  0006                     	;# 
   715  0007                     	;# 
   716  0008                     	;# 
   717  0009                     	;# 
   718  000A                     	;# 
   719  000B                     	;# 
   720  000C                     	;# 
   721  000D                     	;# 
   722  0011                     	;# 
   723  0012                     	;# 
   724  0013                     	;# 
   725  0014                     	;# 
   726  0015                     	;# 
   727  0016                     	;# 
   728  0016                     	;# 
   729  0017                     	;# 
   730  0018                     	;# 
   731  0019                     	;# 
   732  001A                     	;# 
   733  001B                     	;# 
   734  001C                     	;# 
   735  001E                     	;# 
   736  001F                     	;# 
   737  008C                     	;# 
   738  008D                     	;# 
   739  0091                     	;# 
   740  0092                     	;# 
   741  0093                     	;# 
   742  0094                     	;# 
   743  0095                     	;# 
   744  0096                     	;# 
   745  0097                     	;# 
   746  0098                     	;# 
   747  0099                     	;# 
   748  009A                     	;# 
   749  009B                     	;# 
   750  009B                     	;# 
   751  009C                     	;# 
   752  009D                     	;# 
   753  009E                     	;# 
   754  010C                     	;# 
   755  010D                     	;# 
   756  0111                     	;# 
   757  0112                     	;# 
   758  0113                     	;# 
   759  0114                     	;# 
   760  0115                     	;# 
   761  0116                     	;# 
   762  0117                     	;# 
   763  0118                     	;# 
   764  0119                     	;# 
   765  011A                     	;# 
   766  011B                     	;# 
   767  011D                     	;# 
   768  011E                     	;# 
   769  018C                     	;# 
   770  018D                     	;# 
   771  0191                     	;# 
   772  0191                     	;# 
   773  0192                     	;# 
   774  0193                     	;# 
   775  0193                     	;# 
   776  0193                     	;# 
   777  0194                     	;# 
   778  0195                     	;# 
   779  0196                     	;# 
   780  0199                     	;# 
   781  019A                     	;# 
   782  019B                     	;# 
   783  019B                     	;# 
   784  019B                     	;# 
   785  019B                     	;# 
   786  019C                     	;# 
   787  019C                     	;# 
   788  019D                     	;# 
   789  019E                     	;# 
   790  019F                     	;# 
   791  020C                     	;# 
   792  020D                     	;# 
   793  0211                     	;# 
   794  0211                     	;# 
   795  0212                     	;# 
   796  0212                     	;# 
   797  0213                     	;# 
   798  0213                     	;# 
   799  0214                     	;# 
   800  0214                     	;# 
   801  0215                     	;# 
   802  0215                     	;# 
   803  0215                     	;# 
   804  0216                     	;# 
   805  0216                     	;# 
   806  0217                     	;# 
   807  0217                     	;# 
   808  0219                     	;# 
   809  021A                     	;# 
   810  021B                     	;# 
   811  021C                     	;# 
   812  021D                     	;# 
   813  021E                     	;# 
   814  021F                     	;# 
   815  0291                     	;# 
   816  0291                     	;# 
   817  0292                     	;# 
   818  0293                     	;# 
   819  0294                     	;# 
   820  0295                     	;# 
   821  0295                     	;# 
   822  0296                     	;# 
   823  0298                     	;# 
   824  0298                     	;# 
   825  0299                     	;# 
   826  029A                     	;# 
   827  029B                     	;# 
   828  029C                     	;# 
   829  029C                     	;# 
   830  029D                     	;# 
   831  029E                     	;# 
   832  029E                     	;# 
   833  0311                     	;# 
   834  0311                     	;# 
   835  0312                     	;# 
   836  0313                     	;# 
   837  0318                     	;# 
   838  0318                     	;# 
   839  0319                     	;# 
   840  031A                     	;# 
   841  0394                     	;# 
   842  0395                     	;# 
   843  0396                     	;# 
   844  039A                     	;# 
   845  039C                     	;# 
   846  039D                     	;# 
   847  039E                     	;# 
   848  039F                     	;# 
   849  0415                     	;# 
   850  0416                     	;# 
   851  0417                     	;# 
   852  041C                     	;# 
   853  041D                     	;# 
   854  041E                     	;# 
   855  0FE4                     	;# 
   856  0FE5                     	;# 
   857  0FE6                     	;# 
   858  0FE7                     	;# 
   859  0FE8                     	;# 
   860  0FE9                     	;# 
   861  0FEA                     	;# 
   862  0FEB                     	;# 
   863  0FED                     	;# 
   864  0FEE                     	;# 
   865  0FEF                     	;# 
   866  0000                     	;# 
   867  0001                     	;# 
   868  0002                     	;# 
   869  0003                     	;# 
   870  0004                     	;# 
   871  0005                     	;# 
   872  0006                     	;# 
   873  0007                     	;# 
   874  0008                     	;# 
   875  0009                     	;# 
   876  000A                     	;# 
   877  000B                     	;# 
   878  000C                     	;# 
   879  000D                     	;# 
   880  0011                     	;# 
   881  0012                     	;# 
   882  0013                     	;# 
   883  0014                     	;# 
   884  0015                     	;# 
   885  0016                     	;# 
   886  0016                     	;# 
   887  0017                     	;# 
   888  0018                     	;# 
   889  0019                     	;# 
   890  001A                     	;# 
   891  001B                     	;# 
   892  001C                     	;# 
   893  001E                     	;# 
   894  001F                     	;# 
   895  008C                     	;# 
   896  008D                     	;# 
   897  0091                     	;# 
   898  0092                     	;# 
   899  0093                     	;# 
   900  0094                     	;# 
   901  0095                     	;# 
   902  0096                     	;# 
   903  0097                     	;# 
   904  0098                     	;# 
   905  0099                     	;# 
   906  009A                     	;# 
   907  009B                     	;# 
   908  009B                     	;# 
   909  009C                     	;# 
   910  009D                     	;# 
   911  009E                     	;# 
   912  010C                     	;# 
   913  010D                     	;# 
   914  0111                     	;# 
   915  0112                     	;# 
   916  0113                     	;# 
   917  0114                     	;# 
   918  0115                     	;# 
   919  0116                     	;# 
   920  0117                     	;# 
   921  0118                     	;# 
   922  0119                     	;# 
   923  011A                     	;# 
   924  011B                     	;# 
   925  011D                     	;# 
   926  011E                     	;# 
   927  018C                     	;# 
   928  018D                     	;# 
   929  0191                     	;# 
   930  0191                     	;# 
   931  0192                     	;# 
   932  0193                     	;# 
   933  0193                     	;# 
   934  0193                     	;# 
   935  0194                     	;# 
   936  0195                     	;# 
   937  0196                     	;# 
   938  0199                     	;# 
   939  019A                     	;# 
   940  019B                     	;# 
   941  019B                     	;# 
   942  019B                     	;# 
   943  019B                     	;# 
   944  019C                     	;# 
   945  019C                     	;# 
   946  019D                     	;# 
   947  019E                     	;# 
   948  019F                     	;# 
   949  020C                     	;# 
   950  020D                     	;# 
   951  0211                     	;# 
   952  0211                     	;# 
   953  0212                     	;# 
   954  0212                     	;# 
   955  0213                     	;# 
   956  0213                     	;# 
   957  0214                     	;# 
   958  0214                     	;# 
   959  0215                     	;# 
   960  0215                     	;# 
   961  0215                     	;# 
   962  0216                     	;# 
   963  0216                     	;# 
   964  0217                     	;# 
   965  0217                     	;# 
   966  0219                     	;# 
   967  021A                     	;# 
   968  021B                     	;# 
   969  021C                     	;# 
   970  021D                     	;# 
   971  021E                     	;# 
   972  021F                     	;# 
   973  0291                     	;# 
   974  0291                     	;# 
   975  0292                     	;# 
   976  0293                     	;# 
   977  0294                     	;# 
   978  0295                     	;# 
   979  0295                     	;# 
   980  0296                     	;# 
   981  0298                     	;# 
   982  0298                     	;# 
   983  0299                     	;# 
   984  029A                     	;# 
   985  029B                     	;# 
   986  029C                     	;# 
   987  029C                     	;# 
   988  029D                     	;# 
   989  029E                     	;# 
   990  029E                     	;# 
   991  0311                     	;# 
   992  0311                     	;# 
   993  0312                     	;# 
   994  0313                     	;# 
   995  0318                     	;# 
   996  0318                     	;# 
   997  0319                     	;# 
   998  031A                     	;# 
   999  0394                     	;# 
  1000  0395                     	;# 
  1001  0396                     	;# 
  1002  039A                     	;# 
  1003  039C                     	;# 
  1004  039D                     	;# 
  1005  039E                     	;# 
  1006  039F                     	;# 
  1007  0415                     	;# 
  1008  0416                     	;# 
  1009  0417                     	;# 
  1010  041C                     	;# 
  1011  041D                     	;# 
  1012  041E                     	;# 
  1013  0FE4                     	;# 
  1014  0FE5                     	;# 
  1015  0FE6                     	;# 
  1016  0FE7                     	;# 
  1017  0FE8                     	;# 
  1018  0FE9                     	;# 
  1019  0FEA                     	;# 
  1020  0FEB                     	;# 
  1021  0FED                     	;# 
  1022  0FEE                     	;# 
  1023  0FEF                     	;# 
  1024  0000                     	;# 
  1025  0001                     	;# 
  1026  0002                     	;# 
  1027  0003                     	;# 
  1028  0004                     	;# 
  1029  0005                     	;# 
  1030  0006                     	;# 
  1031  0007                     	;# 
  1032  0008                     	;# 
  1033  0009                     	;# 
  1034  000A                     	;# 
  1035  000B                     	;# 
  1036  000C                     	;# 
  1037  000D                     	;# 
  1038  0011                     	;# 
  1039  0012                     	;# 
  1040  0013                     	;# 
  1041  0014                     	;# 
  1042  0015                     	;# 
  1043  0016                     	;# 
  1044  0016                     	;# 
  1045  0017                     	;# 
  1046  0018                     	;# 
  1047  0019                     	;# 
  1048  001A                     	;# 
  1049  001B                     	;# 
  1050  001C                     	;# 
  1051  001E                     	;# 
  1052  001F                     	;# 
  1053  008C                     	;# 
  1054  008D                     	;# 
  1055  0091                     	;# 
  1056  0092                     	;# 
  1057  0093                     	;# 
  1058  0094                     	;# 
  1059  0095                     	;# 
  1060  0096                     	;# 
  1061  0097                     	;# 
  1062  0098                     	;# 
  1063  0099                     	;# 
  1064  009A                     	;# 
  1065  009B                     	;# 
  1066  009B                     	;# 
  1067  009C                     	;# 
  1068  009D                     	;# 
  1069  009E                     	;# 
  1070  010C                     	;# 
  1071  010D                     	;# 
  1072  0111                     	;# 
  1073  0112                     	;# 
  1074  0113                     	;# 
  1075  0114                     	;# 
  1076  0115                     	;# 
  1077  0116                     	;# 
  1078  0117                     	;# 
  1079  0118                     	;# 
  1080  0119                     	;# 
  1081  011A                     	;# 
  1082  011B                     	;# 
  1083  011D                     	;# 
  1084  011E                     	;# 
  1085  018C                     	;# 
  1086  018D                     	;# 
  1087  0191                     	;# 
  1088  0191                     	;# 
  1089  0192                     	;# 
  1090  0193                     	;# 
  1091  0193                     	;# 
  1092  0193                     	;# 
  1093  0194                     	;# 
  1094  0195                     	;# 
  1095  0196                     	;# 
  1096  0199                     	;# 
  1097  019A                     	;# 
  1098  019B                     	;# 
  1099  019B                     	;# 
  1100  019B                     	;# 
  1101  019B                     	;# 
  1102  019C                     	;# 
  1103  019C                     	;# 
  1104  019D                     	;# 
  1105  019E                     	;# 
  1106  019F                     	;# 
  1107  020C                     	;# 
  1108  020D                     	;# 
  1109  0211                     	;# 
  1110  0211                     	;# 
  1111  0212                     	;# 
  1112  0212                     	;# 
  1113  0213                     	;# 
  1114  0213                     	;# 
  1115  0214                     	;# 
  1116  0214                     	;# 
  1117  0215                     	;# 
  1118  0215                     	;# 
  1119  0215                     	;# 
  1120  0216                     	;# 
  1121  0216                     	;# 
  1122  0217                     	;# 
  1123  0217                     	;# 
  1124  0219                     	;# 
  1125  021A                     	;# 
  1126  021B                     	;# 
  1127  021C                     	;# 
  1128  021D                     	;# 
  1129  021E                     	;# 
  1130  021F                     	;# 
  1131  0291                     	;# 
  1132  0291                     	;# 
  1133  0292                     	;# 
  1134  0293                     	;# 
  1135  0294                     	;# 
  1136  0295                     	;# 
  1137  0295                     	;# 
  1138  0296                     	;# 
  1139  0298                     	;# 
  1140  0298                     	;# 
  1141  0299                     	;# 
  1142  029A                     	;# 
  1143  029B                     	;# 
  1144  029C                     	;# 
  1145  029C                     	;# 
  1146  029D                     	;# 
  1147  029E                     	;# 
  1148  029E                     	;# 
  1149  0311                     	;# 
  1150  0311                     	;# 
  1151  0312                     	;# 
  1152  0313                     	;# 
  1153  0318                     	;# 
  1154  0318                     	;# 
  1155  0319                     	;# 
  1156  031A                     	;# 
  1157  0394                     	;# 
  1158  0395                     	;# 
  1159  0396                     	;# 
  1160  039A                     	;# 
  1161  039C                     	;# 
  1162  039D                     	;# 
  1163  039E                     	;# 
  1164  039F                     	;# 
  1165  0415                     	;# 
  1166  0416                     	;# 
  1167  0417                     	;# 
  1168  041C                     	;# 
  1169  041D                     	;# 
  1170  041E                     	;# 
  1171  0FE4                     	;# 
  1172  0FE5                     	;# 
  1173  0FE6                     	;# 
  1174  0FE7                     	;# 
  1175  0FE8                     	;# 
  1176  0FE9                     	;# 
  1177  0FEA                     	;# 
  1178  0FEB                     	;# 
  1179  0FED                     	;# 
  1180  0FEE                     	;# 
  1181  0FEF                     	;# 
  1182  0000                     	;# 
  1183  0001                     	;# 
  1184  0002                     	;# 
  1185  0003                     	;# 
  1186  0004                     	;# 
  1187  0005                     	;# 
  1188  0006                     	;# 
  1189  0007                     	;# 
  1190  0008                     	;# 
  1191  0009                     	;# 
  1192  000A                     	;# 
  1193  000B                     	;# 
  1194  000C                     	;# 
  1195  000D                     	;# 
  1196  0011                     	;# 
  1197  0012                     	;# 
  1198  0013                     	;# 
  1199  0014                     	;# 
  1200  0015                     	;# 
  1201  0016                     	;# 
  1202  0016                     	;# 
  1203  0017                     	;# 
  1204  0018                     	;# 
  1205  0019                     	;# 
  1206  001A                     	;# 
  1207  001B                     	;# 
  1208  001C                     	;# 
  1209  001E                     	;# 
  1210  001F                     	;# 
  1211  008C                     	;# 
  1212  008D                     	;# 
  1213  0091                     	;# 
  1214  0092                     	;# 
  1215  0093                     	;# 
  1216  0094                     	;# 
  1217  0095                     	;# 
  1218  0096                     	;# 
  1219  0097                     	;# 
  1220  0098                     	;# 
  1221  0099                     	;# 
  1222  009A                     	;# 
  1223  009B                     	;# 
  1224  009B                     	;# 
  1225  009C                     	;# 
  1226  009D                     	;# 
  1227  009E                     	;# 
  1228  010C                     	;# 
  1229  010D                     	;# 
  1230  0111                     	;# 
  1231  0112                     	;# 
  1232  0113                     	;# 
  1233  0114                     	;# 
  1234  0115                     	;# 
  1235  0116                     	;# 
  1236  0117                     	;# 
  1237  0118                     	;# 
  1238  0119                     	;# 
  1239  011A                     	;# 
  1240  011B                     	;# 
  1241  011D                     	;# 
  1242  011E                     	;# 
  1243  018C                     	;# 
  1244  018D                     	;# 
  1245  0191                     	;# 
  1246  0191                     	;# 
  1247  0192                     	;# 
  1248  0193                     	;# 
  1249  0193                     	;# 
  1250  0193                     	;# 
  1251  0194                     	;# 
  1252  0195                     	;# 
  1253  0196                     	;# 
  1254  0199                     	;# 
  1255  019A                     	;# 
  1256  019B                     	;# 
  1257  019B                     	;# 
  1258  019B                     	;# 
  1259  019B                     	;# 
  1260  019C                     	;# 
  1261  019C                     	;# 
  1262  019D                     	;# 
  1263  019E                     	;# 
  1264  019F                     	;# 
  1265  020C                     	;# 
  1266  020D                     	;# 
  1267  0211                     	;# 
  1268  0211                     	;# 
  1269  0212                     	;# 
  1270  0212                     	;# 
  1271  0213                     	;# 
  1272  0213                     	;# 
  1273  0214                     	;# 
  1274  0214                     	;# 
  1275  0215                     	;# 
  1276  0215                     	;# 
  1277  0215                     	;# 
  1278  0216                     	;# 
  1279  0216                     	;# 
  1280  0217                     	;# 
  1281  0217                     	;# 
  1282  0219                     	;# 
  1283  021A                     	;# 
  1284  021B                     	;# 
  1285  021C                     	;# 
  1286  021D                     	;# 
  1287  021E                     	;# 
  1288  021F                     	;# 
  1289  0291                     	;# 
  1290  0291                     	;# 
  1291  0292                     	;# 
  1292  0293                     	;# 
  1293  0294                     	;# 
  1294  0295                     	;# 
  1295  0295                     	;# 
  1296  0296                     	;# 
  1297  0298                     	;# 
  1298  0298                     	;# 
  1299  0299                     	;# 
  1300  029A                     	;# 
  1301  029B                     	;# 
  1302  029C                     	;# 
  1303  029C                     	;# 
  1304  029D                     	;# 
  1305  029E                     	;# 
  1306  029E                     	;# 
  1307  0311                     	;# 
  1308  0311                     	;# 
  1309  0312                     	;# 
  1310  0313                     	;# 
  1311  0318                     	;# 
  1312  0318                     	;# 
  1313  0319                     	;# 
  1314  031A                     	;# 
  1315  0394                     	;# 
  1316  0395                     	;# 
  1317  0396                     	;# 
  1318  039A                     	;# 
  1319  039C                     	;# 
  1320  039D                     	;# 
  1321  039E                     	;# 
  1322  039F                     	;# 
  1323  0415                     	;# 
  1324  0416                     	;# 
  1325  0417                     	;# 
  1326  041C                     	;# 
  1327  041D                     	;# 
  1328  041E                     	;# 
  1329  0FE4                     	;# 
  1330  0FE5                     	;# 
  1331  0FE6                     	;# 
  1332  0FE7                     	;# 
  1333  0FE8                     	;# 
  1334  0FE9                     	;# 
  1335  0FEA                     	;# 
  1336  0FEB                     	;# 
  1337  0FED                     	;# 
  1338  0FEE                     	;# 
  1339  0FEF                     	;# 
  1340                           
  1341                           	psect	idataCOMMON
  1342  022D                     __pidataCOMMON:	
  1343                           
  1344                           ;initializer for _TMR4_INTERRUPT_TICKER_FACTOR
  1345  022D  3402               	retlw	2
  1346                           
  1347                           	psect	stringtext1
  1348  022E                     __pstringtext1:	
  1349  022E                     _TurnOffTimeout:	
  1350  022E  34B4               	retlw	180
  1351  022F                     __end_of_TurnOffTimeout:	
  1352                           
  1353                           	psect	nvBANK0
  1354  0028                     __pnvBANK0:	
  1355  0028                     _TMR2_InterruptHandler:	
  1356  0028                     	ds	2
  1357  002A                     _INT_InterruptHandler:	
  1358  002A                     	ds	2
  1359  000D                     _PORTBbits	set	13
  1360  001C                     _T2CONbits	set	28
  1361  001C                     _T2CON	set	28
  1362  001A                     _TMR2	set	26
  1363  001B                     _PR2	set	27
  1364  0011                     _PIR1bits	set	17
  1365  0013                     _PIR3bits	set	19
  1366  000B                     _INTCONbits	set	11
  1367  000C                     _PORTA	set	12
  1368  005F                     _GIE	set	95
  1369  0018                     _CARRY	set	24
  1370  009D                     _ADCON0bits	set	157
  1371  009C                     _ADRESH	set	156
  1372  009B                     _ADRESL	set	155
  1373  009E                     _ADCON1	set	158
  1374  009D                     _ADCON0	set	157
  1375  0097                     _WDTCON	set	151
  1376  0098                     _OSCTUNE	set	152
  1377  0099                     _OSCCON	set	153
  1378  0091                     _PIE1bits	set	145
  1379  0093                     _PIE3bits	set	147
  1380  008D                     _TRISB	set	141
  1381  008C                     _TRISA	set	140
  1382  0095                     _OPTION_REGbits	set	149
  1383  04B8                     _SWDTEN	set	1208
  1384  010D                     _LATBbits	set	269
  1385  010C                     _LATAbits	set	268
  1386  0116                     _BORCON	set	278
  1387  011E                     _APFCON1	set	286
  1388  011D                     _APFCON0	set	285
  1389  010D                     _LATB	set	269
  1390  010C                     _LATA	set	268
  1391  0191                     _EEADR	set	401
  1392  0196                     _EECON2	set	406
  1393  0195                     _EECON1	set	405
  1394  0193                     _EEDATA	set	403
  1395  018C                     _ANSELA	set	396
  1396  018D                     _ANSELB	set	397
  1397  0CAA                     _WREN	set	3242
  1398  0CA9                     _WR	set	3241
  1399  020C                     _WPUA	set	524
  1400  020D                     _WPUB	set	525
  1401  0417                     _T4CONbits	set	1047
  1402  0417                     _T4CON	set	1047
  1403  0415                     _TMR4	set	1045
  1404  0416                     _PR4	set	1046
  1405                           
  1406                           ; #config settings
  1407  0000                     
  1408                           	psect	cinit
  1409  0035                     start_initialization:	
  1410  0035                     __initialization:	
  1411                           
  1412                           ; Initialize objects allocated to COMMON
  1413  0035  3182  222D         	fcall	__pidataCOMMON	;fetch initializer
  1414  0037  00FA               	movwf	__pdataCOMMON& (0+127)
  1415                           
  1416                           ; Clear objects allocated to COMMON
  1417  0038  01F8               	clrf	__pbssCOMMON& (0+127)
  1418  0039  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1419                           
  1420                           ; Clear objects allocated to BANK0
  1421  003A  01A0               	clrf	__pbssBANK0& (0+127)
  1422  003B  01A1               	clrf	(__pbssBANK0+1)& (0+127)
  1423  003C  01A2               	clrf	(__pbssBANK0+2)& (0+127)
  1424  003D  01A3               	clrf	(__pbssBANK0+3)& (0+127)
  1425  003E  01A4               	clrf	(__pbssBANK0+4)& (0+127)
  1426  003F  01A5               	clrf	(__pbssBANK0+5)& (0+127)
  1427  0040  01A6               	clrf	(__pbssBANK0+6)& (0+127)
  1428  0041  01A7               	clrf	(__pbssBANK0+7)& (0+127)
  1429  0042                     end_of_initialization:	
  1430                           ;End of C runtime variable initialization code
  1431                           
  1432  0042                     __end_of__initialization:	
  1433  0042  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1434  0043  0020               	movlb	0
  1435  0044  3180  28B7         	ljmp	_main	;jump to C main() function
  1436                           
  1437                           	psect	bssCOMMON
  1438  0078                     __pbssCOMMON:	
  1439  0078                     _DATA_RECEIVED:	
  1440  0078                     	ds	1
  1441  0079                     _PORTA_Saved:	
  1442  0079                     	ds	1
  1443                           
  1444                           	psect	dataCOMMON
  1445  007A                     __pdataCOMMON:	
  1446  007A                     _TMR4_INTERRUPT_TICKER_FACTOR:	
  1447  007A                     	ds	1
  1448                           
  1449                           	psect	bssBANK0
  1450  0020                     __pbssBANK0:	
  1451  0020                     TMR4_ISR@CountCallBack:	
  1452  0020                     	ds	2
  1453  0022                     _TMR4_InterruptHandler:	
  1454  0022                     	ds	2
  1455  0024                     _TimeoutCounter:	
  1456  0024                     	ds	1
  1457  0025                     _LedState:	
  1458  0025                     	ds	1
  1459  0026                     _TMR2_INT_FLAG:	
  1460  0026                     	ds	1
  1461  0027                     _TMR4_INT_FLAG:	
  1462  0027                     	ds	1
  1463                           
  1464                           	psect	cstackCOMMON
  1465  0070                     __pcstackCOMMON:	
  1466  0070                     ?_INT_CallBack:	
  1467  0070                     ??_INT_CallBack:	
  1468                           ; 1 bytes @ 0x0
  1469                           
  1470  0070                     ?_TMR4_ISR:	
  1471                           ; 1 bytes @ 0x0
  1472                           
  1473  0070                     ??_TMR4_ISR:	
  1474                           ; 1 bytes @ 0x0
  1475                           
  1476  0070                     ?_TMR2_ISR:	
  1477                           ; 1 bytes @ 0x0
  1478                           
  1479  0070                     ??_TMR2_ISR:	
  1480                           ; 1 bytes @ 0x0
  1481                           
  1482  0070                     ?_ADC_ISR:	
  1483                           ; 1 bytes @ 0x0
  1484                           
  1485  0070                     ??_ADC_ISR:	
  1486                           ; 1 bytes @ 0x0
  1487                           
  1488  0070                     ?_OSCILLATOR_Initialize:	
  1489                           ; 1 bytes @ 0x0
  1490                           
  1491  0070                     ?_WDT_Initialize:	
  1492                           ; 1 bytes @ 0x0
  1493                           
  1494  0070                     ?_TMR2_Initialize:	
  1495                           ; 1 bytes @ 0x0
  1496                           
  1497  0070                     ?_TMR2_DefaultInterruptHandler:	
  1498                           ; 1 bytes @ 0x0
  1499                           
  1500  0070                     ??_TMR2_DefaultInterruptHandler:	
  1501                           ; 1 bytes @ 0x0
  1502                           
  1503  0070                     ?_TMR2_CallBack:	
  1504                           ; 1 bytes @ 0x0
  1505                           
  1506  0070                     ??_TMR2_CallBack:	
  1507                           ; 1 bytes @ 0x0
  1508                           
  1509  0070                     ?_TMR4_DefaultInterruptHandler:	
  1510                           ; 1 bytes @ 0x0
  1511                           
  1512  0070                     ??_TMR4_DefaultInterruptHandler:	
  1513                           ; 1 bytes @ 0x0
  1514                           
  1515  0070                     ?_TMR4_CallBack:	
  1516                           ; 1 bytes @ 0x0
  1517                           
  1518  0070                     ??_TMR4_CallBack:	
  1519                           ; 1 bytes @ 0x0
  1520                           
  1521  0070                     ?_INT_ISR:	
  1522                           ; 1 bytes @ 0x0
  1523                           
  1524  0070                     ??_INT_ISR:	
  1525                           ; 1 bytes @ 0x0
  1526                           
  1527  0070                     ?_INT_DefaultInterruptHandler:	
  1528                           ; 1 bytes @ 0x0
  1529                           
  1530  0070                     ??_INT_DefaultInterruptHandler:	
  1531                           ; 1 bytes @ 0x0
  1532                           
  1533  0070                     ?_EXT_INT_Initialize:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536  0070                     ?_PIN_MANAGER_Initialize:	
  1537                           ; 1 bytes @ 0x0
  1538                           
  1539  0070                     ?_INTERRUPT_InterruptManager:	
  1540                           ; 1 bytes @ 0x0
  1541                           
  1542  0070                     ?_SYSTEM_Initialize:	
  1543                           ; 1 bytes @ 0x0
  1544                           
  1545  0070                     ?_POWER_LED_ON:	
  1546                           ; 1 bytes @ 0x0
  1547                           
  1548  0070                     ?_POWER_LED_OFF:	
  1549                           ; 1 bytes @ 0x0
  1550                           
  1551  0070                     ?_POWER_LED_TOGGLE:	
  1552                           ; 1 bytes @ 0x0
  1553                           
  1554  0070                     ?_WaitLoop:	
  1555                           ; 1 bytes @ 0x0
  1556                           
  1557  0070                     ?_RunCode:	
  1558                           ; 1 bytes @ 0x0
  1559                           
  1560  0070                     ?_Code_exec:	
  1561                           ; 1 bytes @ 0x0
  1562                           
  1563  0070                     ?_main:	
  1564                           ; 1 bytes @ 0x0
  1565                           
  1566                           
  1567                           ; 1 bytes @ 0x0
  1568  0070                     	ds	2
  1569  0072                     ??_INTERRUPT_InterruptManager:	
  1570                           
  1571                           ; 1 bytes @ 0x2
  1572  0072                     	ds	1
  1573  0073                     ??_OSCILLATOR_Initialize:	
  1574  0073                     ??_WDT_Initialize:	
  1575                           ; 1 bytes @ 0x3
  1576                           
  1577  0073                     ?_TMR2_SetInterruptHandler:	
  1578                           ; 1 bytes @ 0x3
  1579                           
  1580  0073                     ?_eeprom_write:	
  1581                           ; 1 bytes @ 0x3
  1582                           
  1583  0073                     ?_INT_SetInterruptHandler:	
  1584                           ; 1 bytes @ 0x3
  1585                           
  1586  0073                     ??_PIN_MANAGER_Initialize:	
  1587                           ; 1 bytes @ 0x3
  1588                           
  1589  0073                     ??_POWER_LED_ON:	
  1590                           ; 1 bytes @ 0x3
  1591                           
  1592  0073                     ??_POWER_LED_OFF:	
  1593                           ; 1 bytes @ 0x3
  1594                           
  1595  0073                     ??_POWER_LED_TOGGLE:	
  1596                           ; 1 bytes @ 0x3
  1597                           
  1598  0073                     ??_WaitLoop:	
  1599                           ; 1 bytes @ 0x3
  1600                           
  1601  0073                     ??_RunCode:	
  1602                           ; 1 bytes @ 0x3
  1603                           
  1604  0073                     RunCode@Code:	
  1605                           ; 1 bytes @ 0x3
  1606                           
  1607  0073                     eeprom_write@value:	
  1608                           ; 1 bytes @ 0x3
  1609                           
  1610  0073                     INT_SetInterruptHandler@InterruptHandler:	
  1611                           ; 1 bytes @ 0x3
  1612                           
  1613  0073                     TMR2_SetInterruptHandler@InterruptHandler:	
  1614                           ; 2 bytes @ 0x3
  1615                           
  1616                           
  1617                           ; 2 bytes @ 0x3
  1618  0073                     	ds	1
  1619  0074                     ??_eeprom_write:	
  1620                           
  1621                           ; 1 bytes @ 0x4
  1622  0074                     	ds	1
  1623  0075                     ??_TMR2_Initialize:	
  1624  0075                     ??_TMR2_SetInterruptHandler:	
  1625                           ; 1 bytes @ 0x5
  1626                           
  1627  0075                     ??_INT_SetInterruptHandler:	
  1628                           ; 1 bytes @ 0x5
  1629                           
  1630  0075                     ??_EXT_INT_Initialize:	
  1631                           ; 1 bytes @ 0x5
  1632                           
  1633  0075                     ??_SYSTEM_Initialize:	
  1634                           ; 1 bytes @ 0x5
  1635                           
  1636                           
  1637                           ; 1 bytes @ 0x5
  1638  0075                     	ds	1
  1639  0076                     eeprom_write@addr:	
  1640                           
  1641                           ; 1 bytes @ 0x6
  1642  0076                     	ds	1
  1643  0077                     ??_Code_exec:	
  1644                           
  1645                           ; 1 bytes @ 0x7
  1646  0077                     	ds	1
  1647                           
  1648                           	psect	cstackBANK0
  1649  002C                     __pcstackBANK0:	
  1650  002C                     Code_exec@data:	
  1651                           
  1652                           ; 1 bytes @ 0x0
  1653  002C                     	ds	1
  1654  002D                     ??_main:	
  1655                           
  1656                           ; 1 bytes @ 0x1
  1657  002D                     	ds	2
  1658                           
  1659                           	psect	maintext
  1660  00B7                     __pmaintext:	
  1661 ;;
  1662 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1663 ;;
  1664 ;; *************** function _main *****************
  1665 ;; Defined at:
  1666 ;;		line 137 in file "main.c"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;		None
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;		None
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  1    wreg      void 
  1673 ;; Registers used:
  1674 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1675 ;; Tracked objects:
  1676 ;;		On entry : B1F/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1680 ;;      Params:         0       0       0       0       0       0
  1681 ;;      Locals:         0       0       0       0       0       0
  1682 ;;      Temps:          0       2       0       0       0       0
  1683 ;;      Totals:         0       2       0       0       0       0
  1684 ;;Total ram usage:        2 bytes
  1685 ;; Hardware stack levels required when called:    8
  1686 ;; This function calls:
  1687 ;;		_Code_exec
  1688 ;;		_POWER_LED_OFF
  1689 ;;		_POWER_LED_ON
  1690 ;;		_SYSTEM_Initialize
  1691 ;; This function is called by:
  1692 ;;		Startup code after reset
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           
  1697                           ;psect for function _main
  1698  00B7                     _main:	
  1699                           
  1700                           ;main.c: 139: SYSTEM_Initialize();
  1701                           
  1702                           ;incstack = 0
  1703                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1704  00B7  3181  21AB  3180   	fcall	_SYSTEM_Initialize
  1705                           
  1706                           ;main.c: 145: (INTCONbits.GIE = 1);
  1707  00BA  178B               	bsf	11,7	;volatile
  1708                           
  1709                           ;main.c: 148: (INTCONbits.PEIE = 1);
  1710  00BB  170B               	bsf	11,6	;volatile
  1711                           
  1712                           ;main.c: 157: POWER_LED_ON();
  1713  00BC  3181  215B  3180   	fcall	_POWER_LED_ON
  1714                           
  1715                           ;main.c: 158: _delay((unsigned long)((50)*(31000/4000.0)));
  1716  00BF  3081               	movlw	129
  1717  00C0                     u1037:	
  1718  00C0  0B89               	decfsz	9,f
  1719  00C1  28C0               	goto	u1037
  1720                           
  1721                           ;main.c: 159: POWER_LED_OFF();
  1722  00C2  3181  2171  3180   	fcall	_POWER_LED_OFF
  1723                           
  1724                           ;main.c: 160: _delay((unsigned long)((50)*(31000/4000.0)));
  1725  00C5  3081               	movlw	129
  1726  00C6                     u1047:	
  1727  00C6  0B89               	decfsz	9,f
  1728  00C7  28C6               	goto	u1047
  1729                           
  1730                           ;main.c: 161: POWER_LED_ON();
  1731  00C8  3181  215B  3180   	fcall	_POWER_LED_ON
  1732                           
  1733                           ;main.c: 162: _delay((unsigned long)((50)*(31000/4000.0)));
  1734  00CB  3081               	movlw	129
  1735  00CC                     u1057:	
  1736  00CC  0B89               	decfsz	9,f
  1737  00CD  28CC               	goto	u1057
  1738                           
  1739                           ;main.c: 163: POWER_LED_OFF();
  1740  00CE  3181  2171  3180   	fcall	_POWER_LED_OFF
  1741                           
  1742                           ;main.c: 164: _delay((unsigned long)((50)*(31000/4000.0)));
  1743  00D1  3081               	movlw	129
  1744  00D2                     u1067:	
  1745  00D2  0B89               	decfsz	9,f
  1746  00D3  28D2               	goto	u1067
  1747  00D4                     l1585:	
  1748                           ;main.c: 174: while (1) {
  1749                           
  1750                           
  1751                           ;main.c: 176: _delay((unsigned long)((50)*(31000/4000.0)));
  1752  00D4  3081               	movlw	129
  1753  00D5                     u1077:	
  1754  00D5  0B89               	decfsz	9,f
  1755  00D6  28D5               	goto	u1077
  1756                           
  1757                           ;main.c: 178: SWDTEN = 0;
  1758  00D7  0021               	movlb	1	; select bank1
  1759  00D8  1017               	bcf	23,0	;volatile
  1760  00D9  0000               	nop	;# 
  1761  00DA  0000               	nop	;# 
  1762  00DB  0000               	nop	;# 
  1763  00DC  0000               	nop	;# 
  1764  00DD  0000               	nop	;# 
  1765                           
  1766                           ;main.c: 185: SWDTEN = 1;
  1767  00DE  0021               	movlb	1	; select bank1
  1768  00DF  1417               	bsf	23,0	;volatile
  1769  00E0  0064               	clrwdt	;# 
  1770                           
  1771                           ;main.c: 188: LATBbits.LATB1 = !PORTBbits.RB3;
  1772  00E1  1003               	clrc
  1773  00E2  0020               	movlb	0	; select bank0
  1774  00E3  1D8D               	btfss	13,3	;volatile
  1775  00E4  1403               	setc
  1776  00E5  1C03               	btfss	3,0
  1777  00E6  28EA               	goto	u980
  1778  00E7  0022               	movlb	2	; select bank2
  1779  00E8  148D               	bsf	13,1	;volatile
  1780  00E9  28EC               	goto	l1593
  1781  00EA                     u980:	
  1782  00EA  0022               	movlb	2	; select bank2
  1783  00EB  108D               	bcf	13,1	;volatile
  1784  00EC                     l1593:	
  1785                           
  1786                           ;main.c: 190: if (DATA_RECEIVED) {
  1787  00EC  0878               	movf	_DATA_RECEIVED,w
  1788  00ED  1903               	btfsc	3,2
  1789  00EE  28F3               	goto	l1599
  1790                           
  1791                           ;main.c: 191: DATA_RECEIVED = 0;
  1792  00EF  01F8               	clrf	_DATA_RECEIVED
  1793                           
  1794                           ;main.c: 192: Code_exec();
  1795  00F0  3180  2046  3180   	fcall	_Code_exec
  1796  00F3                     l1599:	
  1797                           
  1798                           ;main.c: 193: }
  1799                           ;main.c: 195: if (TMR2_INT_FLAG) {
  1800  00F3  0020               	movlb	0	; select bank0
  1801  00F4  0826               	movf	_TMR2_INT_FLAG,w
  1802  00F5  1903               	btfsc	3,2
  1803  00F6  28D4               	goto	l1585
  1804                           
  1805                           ;main.c: 196: TMR2_INT_FLAG = 0;
  1806  00F7  01A6               	clrf	_TMR2_INT_FLAG
  1807                           
  1808                           ;main.c: 200: if (TimeoutCounter++ >= TurnOffTimeout) {
  1809  00F8  302E               	movlw	low (_TurnOffTimeout| (0+32768))
  1810  00F9  0084               	movwf	4
  1811  00FA  3082               	movlw	high (_TurnOffTimeout| (0+32768))
  1812  00FB  0085               	movwf	5
  1813  00FC  0800               	movf	0,w	;code access
  1814  00FD  00AD               	movwf	??_main
  1815  00FE  0824               	movf	_TimeoutCounter,w
  1816  00FF  0AA4               	incf	_TimeoutCounter,f
  1817  0100  00AE               	movwf	??_main+1
  1818  0101  082D               	movf	??_main,w
  1819  0102  022E               	subwf	??_main+1,w
  1820  0103  1C03               	skipc
  1821  0104  28D4               	goto	l1585
  1822                           
  1823                           ;main.c: 201: POWER_LED_OFF();
  1824  0105  3181  2171  3180   	fcall	_POWER_LED_OFF
  1825  0108  28D4               	goto	l1585
  1826  0109                     __end_of_main:	
  1827                           
  1828                           	psect	text1
  1829  01AB                     __ptext1:	
  1830 ;; *************** function _SYSTEM_Initialize *****************
  1831 ;; Defined at:
  1832 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1833 ;; Parameters:    Size  Location     Type
  1834 ;;		None
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;		None
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  1    wreg      void 
  1839 ;; Registers used:
  1840 ;;		wreg, status,2, status,0, pclath, cstack
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1846 ;;      Params:         0       0       0       0       0       0
  1847 ;;      Locals:         0       0       0       0       0       0
  1848 ;;      Temps:          0       0       0       0       0       0
  1849 ;;      Totals:         0       0       0       0       0       0
  1850 ;;Total ram usage:        0 bytes
  1851 ;; Hardware stack levels used:    1
  1852 ;; Hardware stack levels required when called:    6
  1853 ;; This function calls:
  1854 ;;		_EXT_INT_Initialize
  1855 ;;		_OSCILLATOR_Initialize
  1856 ;;		_PIN_MANAGER_Initialize
  1857 ;;		_TMR2_Initialize
  1858 ;;		_WDT_Initialize
  1859 ;; This function is called by:
  1860 ;;		_main
  1861 ;; This function uses a non-reentrant model
  1862 ;;
  1863                           
  1864                           
  1865                           ;psect for function _SYSTEM_Initialize
  1866  01AB                     _SYSTEM_Initialize:	
  1867                           
  1868                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  1869                           
  1870                           ;incstack = 0
  1871                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1872  01AB  3181  212C  3181   	fcall	_PIN_MANAGER_Initialize
  1873                           
  1874                           ;mcc.c: 54: OSCILLATOR_Initialize();
  1875  01AE  3182  220D  3181   	fcall	_OSCILLATOR_Initialize
  1876                           
  1877                           ;mcc.c: 55: WDT_Initialize();
  1878  01B1  3182  221E  3181   	fcall	_WDT_Initialize
  1879                           
  1880                           ;mcc.c: 57: TMR2_Initialize();
  1881  01B4  3181  219A  3181   	fcall	_TMR2_Initialize
  1882                           
  1883                           ;mcc.c: 58: EXT_INT_Initialize();
  1884  01B7  3181  21C6         	fcall	_EXT_INT_Initialize
  1885  01B9  0008               	return
  1886  01BA                     __end_of_SYSTEM_Initialize:	
  1887                           
  1888                           	psect	text2
  1889  021E                     __ptext2:	
  1890 ;; *************** function _WDT_Initialize *****************
  1891 ;; Defined at:
  1892 ;;		line 71 in file "mcc_generated_files/mcc.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;		None
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;		None
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      void 
  1899 ;; Registers used:
  1900 ;;		wreg
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1906 ;;      Params:         0       0       0       0       0       0
  1907 ;;      Locals:         0       0       0       0       0       0
  1908 ;;      Temps:          0       0       0       0       0       0
  1909 ;;      Totals:         0       0       0       0       0       0
  1910 ;;Total ram usage:        0 bytes
  1911 ;; Hardware stack levels used:    1
  1912 ;; Hardware stack levels required when called:    4
  1913 ;; This function calls:
  1914 ;;		Nothing
  1915 ;; This function is called by:
  1916 ;;		_SYSTEM_Initialize
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           
  1921                           ;psect for function _WDT_Initialize
  1922  021E                     _WDT_Initialize:	
  1923                           
  1924                           ;mcc.c: 74: WDTCON = 0x1C;
  1925                           
  1926                           ;incstack = 0
  1927                           ; Regs used in _WDT_Initialize: [wreg]
  1928  021E  301C               	movlw	28
  1929  021F  0021               	movlb	1	; select bank1
  1930  0220  0097               	movwf	23	;volatile
  1931  0221  0008               	return
  1932  0222                     __end_of_WDT_Initialize:	
  1933                           
  1934                           	psect	text3
  1935  019A                     __ptext3:	
  1936 ;; *************** function _TMR2_Initialize *****************
  1937 ;; Defined at:
  1938 ;;		line 65 in file "mcc_generated_files/tmr2.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;		None
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;		None
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  1    wreg      void 
  1945 ;; Registers used:
  1946 ;;		wreg, status,2, status,0, pclath, cstack
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1952 ;;      Params:         0       0       0       0       0       0
  1953 ;;      Locals:         0       0       0       0       0       0
  1954 ;;      Temps:          0       0       0       0       0       0
  1955 ;;      Totals:         0       0       0       0       0       0
  1956 ;;Total ram usage:        0 bytes
  1957 ;; Hardware stack levels used:    1
  1958 ;; Hardware stack levels required when called:    5
  1959 ;; This function calls:
  1960 ;;		_TMR2_SetInterruptHandler
  1961 ;; This function is called by:
  1962 ;;		_SYSTEM_Initialize
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966                           
  1967                           ;psect for function _TMR2_Initialize
  1968  019A                     _TMR2_Initialize:	
  1969                           
  1970                           ;tmr2.c: 69: PR2 = 0xAC;
  1971                           
  1972                           ;incstack = 0
  1973                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1974  019A  30AC               	movlw	172
  1975  019B  0020               	movlb	0	; select bank0
  1976  019C  009B               	movwf	27	;volatile
  1977                           
  1978                           ;tmr2.c: 72: TMR2 = 0x00;
  1979  019D  019A               	clrf	26	;volatile
  1980                           
  1981                           ;tmr2.c: 75: PIR1bits.TMR2IF = 0;
  1982  019E  1091               	bcf	17,1	;volatile
  1983                           
  1984                           ;tmr2.c: 78: PIE1bits.TMR2IE = 1;
  1985  019F  0021               	movlb	1	; select bank1
  1986  01A0  1491               	bsf	17,1	;volatile
  1987                           
  1988                           ;tmr2.c: 81: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  1989  01A1  3026               	movlw	low _TMR2_DefaultInterruptHandler
  1990  01A2  00F3               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  1991  01A3  3002               	movlw	high _TMR2_DefaultInterruptHandler
  1992  01A4  00F4               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  1993  01A5  3182  2207         	fcall	_TMR2_SetInterruptHandler
  1994                           
  1995                           ;tmr2.c: 84: T2CON = 0x37;
  1996  01A7  3037               	movlw	55
  1997  01A8  0020               	movlb	0	; select bank0
  1998  01A9  009C               	movwf	28	;volatile
  1999  01AA  0008               	return
  2000  01AB                     __end_of_TMR2_Initialize:	
  2001                           
  2002                           	psect	text4
  2003  0207                     __ptext4:	
  2004 ;; *************** function _TMR2_SetInterruptHandler *****************
  2005 ;; Defined at:
  2006 ;;		line 132 in file "mcc_generated_files/tmr2.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
  2009 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;		None
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  1    wreg      void 
  2014 ;; Registers used:
  2015 ;;		wreg
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2021 ;;      Params:         2       0       0       0       0       0
  2022 ;;      Locals:         0       0       0       0       0       0
  2023 ;;      Temps:          0       0       0       0       0       0
  2024 ;;      Totals:         2       0       0       0       0       0
  2025 ;;Total ram usage:        2 bytes
  2026 ;; Hardware stack levels used:    1
  2027 ;; Hardware stack levels required when called:    4
  2028 ;; This function calls:
  2029 ;;		Nothing
  2030 ;; This function is called by:
  2031 ;;		_TMR2_Initialize
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           
  2036                           ;psect for function _TMR2_SetInterruptHandler
  2037  0207                     _TMR2_SetInterruptHandler:	
  2038                           
  2039                           ;tmr2.c: 133: TMR2_InterruptHandler = InterruptHandler;
  2040                           
  2041                           ;incstack = 0
  2042                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  2043  0207  0874               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  2044  0208  0020               	movlb	0	; select bank0
  2045  0209  00A9               	movwf	_TMR2_InterruptHandler+1
  2046  020A  0873               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  2047  020B  00A8               	movwf	_TMR2_InterruptHandler
  2048  020C  0008               	return
  2049  020D                     __end_of_TMR2_SetInterruptHandler:	
  2050                           
  2051                           	psect	text5
  2052  012C                     __ptext5:	
  2053 ;; *************** function _PIN_MANAGER_Initialize *****************
  2054 ;; Defined at:
  2055 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  2056 ;; Parameters:    Size  Location     Type
  2057 ;;		None
  2058 ;; Auto vars:     Size  Location     Type
  2059 ;;		None
  2060 ;; Return value:  Size  Location     Type
  2061 ;;                  1    wreg      void 
  2062 ;; Registers used:
  2063 ;;		wreg, status,2
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/0
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2069 ;;      Params:         0       0       0       0       0       0
  2070 ;;      Locals:         0       0       0       0       0       0
  2071 ;;      Temps:          0       0       0       0       0       0
  2072 ;;      Totals:         0       0       0       0       0       0
  2073 ;;Total ram usage:        0 bytes
  2074 ;; Hardware stack levels used:    1
  2075 ;; Hardware stack levels required when called:    4
  2076 ;; This function calls:
  2077 ;;		Nothing
  2078 ;; This function is called by:
  2079 ;;		_SYSTEM_Initialize
  2080 ;; This function uses a non-reentrant model
  2081 ;;
  2082                           
  2083                           
  2084                           ;psect for function _PIN_MANAGER_Initialize
  2085  012C                     _PIN_MANAGER_Initialize:	
  2086                           
  2087                           ;pin_manager.c: 62: LATA = 0x80;
  2088                           
  2089                           ;incstack = 0
  2090                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2091  012C  3080               	movlw	128
  2092  012D  0022               	movlb	2	; select bank2
  2093  012E  008C               	movwf	12	;volatile
  2094                           
  2095                           ;pin_manager.c: 63: LATB = 0x02;
  2096  012F  3002               	movlw	2
  2097  0130  008D               	movwf	13	;volatile
  2098                           
  2099                           ;pin_manager.c: 68: TRISA = 0x3F;
  2100  0131  303F               	movlw	63
  2101  0132  0021               	movlb	1	; select bank1
  2102  0133  008C               	movwf	12	;volatile
  2103                           
  2104                           ;pin_manager.c: 69: TRISB = 0xFD;
  2105  0134  30FD               	movlw	253
  2106  0135  008D               	movwf	13	;volatile
  2107                           
  2108                           ;pin_manager.c: 74: ANSELB = 0xE4;
  2109  0136  30E4               	movlw	228
  2110  0137  0023               	movlb	3	; select bank3
  2111  0138  008D               	movwf	13	;volatile
  2112                           
  2113                           ;pin_manager.c: 75: ANSELA = 0x10;
  2114  0139  3010               	movlw	16
  2115  013A  008C               	movwf	12	;volatile
  2116                           
  2117                           ;pin_manager.c: 80: WPUB = 0x00;
  2118  013B  0024               	movlb	4	; select bank4
  2119  013C  018D               	clrf	13	;volatile
  2120                           
  2121                           ;pin_manager.c: 81: WPUA = 0x00;
  2122  013D  018C               	clrf	12	;volatile
  2123                           
  2124                           ;pin_manager.c: 82: OPTION_REGbits.nWPUEN = 1;
  2125  013E  0021               	movlb	1	; select bank1
  2126  013F  1795               	bsf	21,7	;volatile
  2127                           
  2128                           ;pin_manager.c: 91: APFCON0 = 0x00;
  2129  0140  0022               	movlb	2	; select bank2
  2130  0141  019D               	clrf	29	;volatile
  2131                           
  2132                           ;pin_manager.c: 92: APFCON1 = 0x00;
  2133  0142  019E               	clrf	30	;volatile
  2134  0143  0008               	return
  2135  0144                     __end_of_PIN_MANAGER_Initialize:	
  2136                           
  2137                           	psect	text6
  2138  020D                     __ptext6:	
  2139 ;; *************** function _OSCILLATOR_Initialize *****************
  2140 ;; Defined at:
  2141 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;		None
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;		None
  2146 ;; Return value:  Size  Location     Type
  2147 ;;                  1    wreg      void 
  2148 ;; Registers used:
  2149 ;;		status,2
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2155 ;;      Params:         0       0       0       0       0       0
  2156 ;;      Locals:         0       0       0       0       0       0
  2157 ;;      Temps:          0       0       0       0       0       0
  2158 ;;      Totals:         0       0       0       0       0       0
  2159 ;;Total ram usage:        0 bytes
  2160 ;; Hardware stack levels used:    1
  2161 ;; Hardware stack levels required when called:    4
  2162 ;; This function calls:
  2163 ;;		Nothing
  2164 ;; This function is called by:
  2165 ;;		_SYSTEM_Initialize
  2166 ;; This function uses a non-reentrant model
  2167 ;;
  2168                           
  2169                           
  2170                           ;psect for function _OSCILLATOR_Initialize
  2171  020D                     _OSCILLATOR_Initialize:	
  2172                           
  2173                           ;mcc.c: 64: OSCCON = 0x00;
  2174                           
  2175                           ;incstack = 0
  2176                           ; Regs used in _OSCILLATOR_Initialize: [status,2]
  2177  020D  0021               	movlb	1	; select bank1
  2178  020E  0199               	clrf	25	;volatile
  2179                           
  2180                           ;mcc.c: 66: OSCTUNE = 0x00;
  2181  020F  0198               	clrf	24	;volatile
  2182                           
  2183                           ;mcc.c: 68: BORCON = 0x00;
  2184  0210  0022               	movlb	2	; select bank2
  2185  0211  0196               	clrf	22	;volatile
  2186  0212  0008               	return
  2187  0213                     __end_of_OSCILLATOR_Initialize:	
  2188                           
  2189                           	psect	text7
  2190  01C6                     __ptext7:	
  2191 ;; *************** function _EXT_INT_Initialize *****************
  2192 ;; Defined at:
  2193 ;;		line 59 in file "mcc_generated_files/ext_int.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;		None
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;		None
  2198 ;; Return value:  Size  Location     Type
  2199 ;;                  1    wreg      void 
  2200 ;; Registers used:
  2201 ;;		wreg, status,2, status,0, pclath, cstack
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2207 ;;      Params:         0       0       0       0       0       0
  2208 ;;      Locals:         0       0       0       0       0       0
  2209 ;;      Temps:          0       0       0       0       0       0
  2210 ;;      Totals:         0       0       0       0       0       0
  2211 ;;Total ram usage:        0 bytes
  2212 ;; Hardware stack levels used:    1
  2213 ;; Hardware stack levels required when called:    5
  2214 ;; This function calls:
  2215 ;;		_INT_SetInterruptHandler
  2216 ;; This function is called by:
  2217 ;;		_SYSTEM_Initialize
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           
  2222                           ;psect for function _EXT_INT_Initialize
  2223  01C6                     _EXT_INT_Initialize:	
  2224                           
  2225                           ;ext_int.c: 63: (INTCONbits.INTF = 0);
  2226                           
  2227                           ;incstack = 0
  2228                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2229  01C6  108B               	bcf	11,1	;volatile
  2230                           
  2231                           ;ext_int.c: 64: (OPTION_REGbits.INTEDG = 1);
  2232  01C7  0021               	movlb	1	; select bank1
  2233  01C8  1715               	bsf	21,6	;volatile
  2234                           
  2235                           ;ext_int.c: 66: INT_SetInterruptHandler(INT_DefaultInterruptHandler);
  2236  01C9  302F               	movlw	low _INT_DefaultInterruptHandler
  2237  01CA  00F3               	movwf	INT_SetInterruptHandler@InterruptHandler
  2238  01CB  3002               	movlw	high _INT_DefaultInterruptHandler
  2239  01CC  00F4               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  2240  01CD  3182  2213         	fcall	_INT_SetInterruptHandler
  2241                           
  2242                           ;ext_int.c: 67: (INTCONbits.INTE = 1);
  2243  01CF  160B               	bsf	11,4	;volatile
  2244  01D0  0008               	return
  2245  01D1                     __end_of_EXT_INT_Initialize:	
  2246                           
  2247                           	psect	text8
  2248  0213                     __ptext8:	
  2249 ;; *************** function _INT_SetInterruptHandler *****************
  2250 ;; Defined at:
  2251 ;;		line 50 in file "mcc_generated_files/ext_int.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
  2254 ;;		 -> INT_DefaultInterruptHandler(1), 
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;		None
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  1    wreg      void 
  2259 ;; Registers used:
  2260 ;;		wreg
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2266 ;;      Params:         2       0       0       0       0       0
  2267 ;;      Locals:         0       0       0       0       0       0
  2268 ;;      Temps:          0       0       0       0       0       0
  2269 ;;      Totals:         2       0       0       0       0       0
  2270 ;;Total ram usage:        2 bytes
  2271 ;; Hardware stack levels used:    1
  2272 ;; Hardware stack levels required when called:    4
  2273 ;; This function calls:
  2274 ;;		Nothing
  2275 ;; This function is called by:
  2276 ;;		_EXT_INT_Initialize
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           
  2281                           ;psect for function _INT_SetInterruptHandler
  2282  0213                     _INT_SetInterruptHandler:	
  2283                           
  2284                           ;ext_int.c: 51: INT_InterruptHandler = InterruptHandler;
  2285                           
  2286                           ;incstack = 0
  2287                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  2288  0213  0874               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  2289  0214  0020               	movlb	0	; select bank0
  2290  0215  00AB               	movwf	_INT_InterruptHandler+1
  2291  0216  0873               	movf	INT_SetInterruptHandler@InterruptHandler,w
  2292  0217  00AA               	movwf	_INT_InterruptHandler
  2293  0218  0008               	return
  2294  0219                     __end_of_INT_SetInterruptHandler:	
  2295                           
  2296                           	psect	text9
  2297  0046                     __ptext9:	
  2298 ;; *************** function _Code_exec *****************
  2299 ;; Defined at:
  2300 ;;		line 80 in file "main.c"
  2301 ;; Parameters:    Size  Location     Type
  2302 ;;		None
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;  data            1    0[BANK0 ] unsigned char 
  2305 ;; Return value:  Size  Location     Type
  2306 ;;                  1    wreg      void 
  2307 ;; Registers used:
  2308 ;;		wreg, status,2, status,0, pclath, cstack
  2309 ;; Tracked objects:
  2310 ;;		On entry : 0/0
  2311 ;;		On exit  : 0/0
  2312 ;;		Unchanged: 0/0
  2313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2314 ;;      Params:         0       0       0       0       0       0
  2315 ;;      Locals:         0       1       0       0       0       0
  2316 ;;      Temps:          1       0       0       0       0       0
  2317 ;;      Totals:         1       1       0       0       0       0
  2318 ;;Total ram usage:        2 bytes
  2319 ;; Hardware stack levels used:    1
  2320 ;; Hardware stack levels required when called:    7
  2321 ;; This function calls:
  2322 ;;		_POWER_LED_OFF
  2323 ;;		_POWER_LED_ON
  2324 ;;		_RunCode
  2325 ;;		_WaitLoop
  2326 ;;		_eeprom_write
  2327 ;; This function is called by:
  2328 ;;		_main
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332                           
  2333                           ;psect for function _Code_exec
  2334  0046                     _Code_exec:	
  2335                           
  2336                           ;main.c: 82: unsigned char data = PORTA_Saved & 0x0F;
  2337                           
  2338                           ;incstack = 0
  2339                           ; Regs used in _Code_exec: [wreg+status,2+status,0+pclath+cstack]
  2340  0046  0879               	movf	_PORTA_Saved,w
  2341  0047  390F               	andlw	15
  2342  0048  00F7               	movwf	??_Code_exec
  2343  0049  0877               	movf	??_Code_exec,w
  2344  004A  0020               	movlb	0	; select bank0
  2345  004B  00AC               	movwf	Code_exec@data
  2346                           
  2347                           ;main.c: 84: if (data & 0b0100 && data & 0b0001) {
  2348  004C  1D2C               	btfss	Code_exec@data,2
  2349  004D  287C               	goto	l1543
  2350  004E  182C               	btfsc	Code_exec@data,0
  2351  004F  2865               	goto	l1539
  2352  0050  287C               	goto	l1543
  2353  0051                     l1533:	
  2354                           ;main.c: 85: while (PORTA & 0x0F) {
  2355                           
  2356                           
  2357                           ;main.c: 86: POWER_LED_ON();
  2358  0051  3181  215B  3180   	fcall	_POWER_LED_ON
  2359                           
  2360                           ;main.c: 87: _delay((unsigned long)((500)*(31000/4000.0)));
  2361  0054  3006               	movlw	6
  2362  0055  00F7               	movwf	??_Code_exec
  2363  0056  3007               	movlw	7
  2364  0057                     u1087:	
  2365  0057  0B89               	decfsz	9,f
  2366  0058  2857               	goto	u1087
  2367  0059  0BF7               	decfsz	??_Code_exec,f
  2368  005A  2857               	goto	u1087
  2369                           
  2370                           ;main.c: 88: POWER_LED_OFF();
  2371  005B  3181  2171  3180   	fcall	_POWER_LED_OFF
  2372                           
  2373                           ;main.c: 89: _delay((unsigned long)((500)*(31000/4000.0)));
  2374  005E  3006               	movlw	6
  2375  005F  00F7               	movwf	??_Code_exec
  2376  0060  3007               	movlw	7
  2377  0061                     u1097:	
  2378  0061  0B89               	decfsz	9,f
  2379  0062  2861               	goto	u1097
  2380  0063  0BF7               	decfsz	??_Code_exec,f
  2381  0064  2861               	goto	u1097
  2382  0065                     l1539:	
  2383  0065  0020               	movlb	0	; select bank0
  2384  0066  080C               	movf	12,w	;volatile
  2385  0067  390F               	andlw	15
  2386  0068  1D03               	btfss	3,2
  2387  0069  2851               	goto	l1533
  2388                           
  2389                           ;main.c: 90: }
  2390                           ;main.c: 91: eeprom_write(SLOT_MODE, 0);
  2391  006A  01F3               	clrf	eeprom_write@value
  2392  006B  3000               	movlw	0
  2393  006C  3181  2109  3180   	fcall	_eeprom_write
  2394                           
  2395                           ;main.c: 92: eeprom_write(SLOT_THRESHOLD, 1);
  2396  006F  01F3               	clrf	eeprom_write@value
  2397  0070  0AF3               	incf	eeprom_write@value,f
  2398  0071  3001               	movlw	1
  2399  0072  3181  2109  3180   	fcall	_eeprom_write
  2400                           
  2401                           ;main.c: 93: eeprom_write(SLOT_FREQUENCY, 1);
  2402  0075  01F3               	clrf	eeprom_write@value
  2403  0076  0AF3               	incf	eeprom_write@value,f
  2404  0077  3002               	movlw	2
  2405  0078  3181  2109  3180   	fcall	_eeprom_write
  2406  007B  0001               	reset	;# 
  2407  007C                     l1543:	
  2408                           
  2409                           ;main.c: 95: }
  2410                           ;main.c: 97: if (data & 0b0100) {
  2411  007C  0020               	movlb	0	; select bank0
  2412  007D  1D2C               	btfss	Code_exec@data,2
  2413  007E  288C               	goto	l375
  2414                           
  2415                           ;main.c: 100: RunCode(Code_A);
  2416  007F  3000               	movlw	0
  2417  0080  3181  2186  3180   	fcall	_RunCode
  2418  0083                     l1549:	
  2419                           ;main.c: 103: while (PORTA & 0x0F)
  2420                           
  2421  0083  0020               	movlb	0	; select bank0
  2422  0084  080C               	movf	12,w	;volatile
  2423  0085  390F               	andlw	15
  2424  0086  1903               	btfsc	3,2
  2425  0087  0008               	return
  2426                           
  2427                           ;main.c: 104: WaitLoop();
  2428  0088  3181  21BA  3180   	fcall	_WaitLoop
  2429  008B  2883               	goto	l1549
  2430  008C                     l375:	
  2431                           ;main.c: 106: } else if (data & 0b0001) {
  2432                           
  2433  008C  1C2C               	btfss	Code_exec@data,0
  2434  008D  289B               	goto	l380
  2435                           
  2436                           ;main.c: 109: RunCode(Code_B);
  2437  008E  3001               	movlw	1
  2438  008F  3181  2186  3180   	fcall	_RunCode
  2439  0092                     l1555:	
  2440                           ;main.c: 112: while (PORTA & 0x0F)
  2441                           
  2442  0092  0020               	movlb	0	; select bank0
  2443  0093  080C               	movf	12,w	;volatile
  2444  0094  390F               	andlw	15
  2445  0095  1903               	btfsc	3,2
  2446  0096  0008               	return
  2447                           
  2448                           ;main.c: 113: WaitLoop();
  2449  0097  3181  21BA  3180   	fcall	_WaitLoop
  2450  009A  2892               	goto	l1555
  2451  009B                     l380:	
  2452                           ;main.c: 115: } else if (data & 0b1000) {
  2453                           
  2454  009B  1DAC               	btfss	Code_exec@data,3
  2455  009C  28AA               	goto	l385
  2456                           
  2457                           ;main.c: 118: RunCode(Code_C);
  2458  009D  3002               	movlw	2
  2459  009E  3181  2186  3180   	fcall	_RunCode
  2460  00A1                     l1561:	
  2461                           ;main.c: 121: while (PORTA & 0x0F)
  2462                           
  2463  00A1  0020               	movlb	0	; select bank0
  2464  00A2  080C               	movf	12,w	;volatile
  2465  00A3  390F               	andlw	15
  2466  00A4  1903               	btfsc	3,2
  2467  00A5  0008               	return
  2468                           
  2469                           ;main.c: 122: WaitLoop();
  2470  00A6  3181  21BA  3180   	fcall	_WaitLoop
  2471  00A9  28A1               	goto	l1561
  2472  00AA                     l385:	
  2473                           ;main.c: 124: } else if (data & 0b0010) {
  2474                           
  2475  00AA  1CAC               	btfss	Code_exec@data,1
  2476  00AB  0008               	return
  2477  00AC                     l1567:	
  2478  00AC  0020               	movlb	0	; select bank0
  2479  00AD  080C               	movf	12,w	;volatile
  2480  00AE  390F               	andlw	15
  2481  00AF  1903               	btfsc	3,2
  2482  00B0  28B5               	goto	l393
  2483                           
  2484                           ;main.c: 130: WaitLoop();
  2485                           
  2486                           ;main.c: 129: while (PORTA & 0x0F)
  2487  00B1  3181  21BA  3180   	fcall	_WaitLoop
  2488  00B4  28AC               	goto	l1567
  2489  00B5                     l393:	
  2490  00B5  0001               	reset	;# 
  2491  00B6  0008               	return
  2492  00B7                     __end_of_Code_exec:	
  2493                           
  2494                           	psect	text10
  2495  0109                     __ptext10:	
  2496 ;; *************** function _eeprom_write *****************
  2497 ;; Defined at:
  2498 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic\eewrite.c"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;  addr            1    wreg     unsigned char 
  2501 ;;  value           1    3[COMMON] unsigned char 
  2502 ;; Auto vars:     Size  Location     Type
  2503 ;;  addr            1    6[COMMON] unsigned char 
  2504 ;; Return value:  Size  Location     Type
  2505 ;;                  1    wreg      void 
  2506 ;; Registers used:
  2507 ;;		wreg, status,2, status,0
  2508 ;; Tracked objects:
  2509 ;;		On entry : 0/0
  2510 ;;		On exit  : 0/0
  2511 ;;		Unchanged: 0/0
  2512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2513 ;;      Params:         1       0       0       0       0       0
  2514 ;;      Locals:         1       0       0       0       0       0
  2515 ;;      Temps:          2       0       0       0       0       0
  2516 ;;      Totals:         4       0       0       0       0       0
  2517 ;;Total ram usage:        4 bytes
  2518 ;; Hardware stack levels used:    1
  2519 ;; Hardware stack levels required when called:    4
  2520 ;; This function calls:
  2521 ;;		Nothing
  2522 ;; This function is called by:
  2523 ;;		_Code_exec
  2524 ;; This function uses a non-reentrant model
  2525 ;;
  2526                           
  2527                           
  2528                           ;psect for function _eeprom_write
  2529  0109                     _eeprom_write:	
  2530                           
  2531                           ;incstack = 0
  2532                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  2533                           ;eeprom_write@addr stored from wreg
  2534  0109  00F6               	movwf	eeprom_write@addr
  2535  010A                     l425:	
  2536  010A  0023               	movlb	3	; select bank3
  2537  010B  1895               	btfsc	21,1	;volsfr
  2538  010C  290A               	goto	l425
  2539  010D  0876               	movf	eeprom_write@addr,w
  2540  010E  00F4               	movwf	??_eeprom_write
  2541  010F  01F5               	clrf	??_eeprom_write+1
  2542  0110  0874               	movf	??_eeprom_write,w
  2543  0111  0091               	movwf	17	;volatile
  2544  0112  0875               	movf	??_eeprom_write+1,w
  2545  0113  0092               	movwf	18	;volatile
  2546  0114  0873               	movf	eeprom_write@value,w
  2547  0115  0093               	movwf	19	;volatile
  2548  0116  303F               	movlw	63
  2549  0117  00F4               	movwf	??_eeprom_write
  2550  0118  0874               	movf	??_eeprom_write,w
  2551  0119  0595               	andwf	21,f	;volsfr
  2552  011A  0020               	movlb	0	; select bank0
  2553  011B  1003               	bcf	3,0	;volatile
  2554  011C  1B8B               	btfsc	11,7	;volatile
  2555  011D  1403               	bsf	3,0	;volatile
  2556  011E  138B               	bcf	11,7	;volatile
  2557  011F  0023               	movlb	3	; select bank3
  2558  0120  1515               	bsf	21,2	;volsfr
  2559  0121  3055               	movlw	85
  2560  0122  0096               	movwf	22	;volsfr
  2561  0123  30AA               	movlw	170
  2562  0124  0096               	movwf	22	;volsfr
  2563  0125  1495               	bsf	21,1	;volsfr
  2564  0126  1115               	bcf	21,2	;volsfr
  2565  0127  0020               	movlb	0	; select bank0
  2566  0128  1C03               	btfss	3,0	;volatile
  2567  0129  0008               	return
  2568  012A  178B               	bsf	11,7	;volatile
  2569  012B  0008               	return
  2570  012C                     __end_of_eeprom_write:	
  2571                           
  2572                           	psect	text11
  2573  01BA                     __ptext11:	
  2574 ;; *************** function _WaitLoop *****************
  2575 ;; Defined at:
  2576 ;;		line 67 in file "main.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;		None
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;		None
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1    wreg      void 
  2583 ;; Registers used:
  2584 ;;		status,0
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2590 ;;      Params:         0       0       0       0       0       0
  2591 ;;      Locals:         0       0       0       0       0       0
  2592 ;;      Temps:          0       0       0       0       0       0
  2593 ;;      Totals:         0       0       0       0       0       0
  2594 ;;Total ram usage:        0 bytes
  2595 ;; Hardware stack levels used:    1
  2596 ;; Hardware stack levels required when called:    4
  2597 ;; This function calls:
  2598 ;;		Nothing
  2599 ;; This function is called by:
  2600 ;;		_Code_exec
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           
  2605                           ;psect for function _WaitLoop
  2606  01BA                     _WaitLoop:	
  2607                           
  2608                           ;main.c: 68: LATBbits.LATB1 = !PORTBbits.RB3;
  2609                           
  2610                           ;incstack = 0
  2611                           ; Regs used in _WaitLoop: [status,0]
  2612  01BA  1003               	clrc
  2613  01BB  0020               	movlb	0	; select bank0
  2614  01BC  1D8D               	btfss	13,3	;volatile
  2615  01BD  1403               	setc
  2616  01BE  1C03               	btfss	3,0
  2617  01BF  29C3               	goto	u790
  2618  01C0  0022               	movlb	2	; select bank2
  2619  01C1  148D               	bsf	13,1	;volatile
  2620  01C2  0008               	return
  2621  01C3                     u790:	
  2622  01C3  0022               	movlb	2	; select bank2
  2623  01C4  108D               	bcf	13,1	;volatile
  2624  01C5  0008               	return
  2625  01C6                     __end_of_WaitLoop:	
  2626                           
  2627                           	psect	text12
  2628  0186                     __ptext12:	
  2629 ;; *************** function _RunCode *****************
  2630 ;; Defined at:
  2631 ;;		line 71 in file "main.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;  Code            1    wreg     unsigned char 
  2634 ;; Auto vars:     Size  Location     Type
  2635 ;;  Code            1    3[COMMON] unsigned char 
  2636 ;; Return value:  Size  Location     Type
  2637 ;;                  1    wreg      void 
  2638 ;; Registers used:
  2639 ;;		wreg, status,2, status,0, pclath, cstack
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2645 ;;      Params:         0       0       0       0       0       0
  2646 ;;      Locals:         1       0       0       0       0       0
  2647 ;;      Temps:          0       0       0       0       0       0
  2648 ;;      Totals:         1       0       0       0       0       0
  2649 ;;Total ram usage:        1 bytes
  2650 ;; Hardware stack levels used:    1
  2651 ;; Hardware stack levels required when called:    6
  2652 ;; This function calls:
  2653 ;;		_POWER_LED_OFF
  2654 ;;		_POWER_LED_ON
  2655 ;;		_POWER_LED_TOGGLE
  2656 ;; This function is called by:
  2657 ;;		_Code_exec
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661                           
  2662                           ;psect for function _RunCode
  2663  0186                     _RunCode:	
  2664                           
  2665                           ;incstack = 0
  2666                           ; Regs used in _RunCode: [wreg+status,2+status,0+pclath+cstack]
  2667                           ;RunCode@Code stored from wreg
  2668  0186  00F3               	movwf	RunCode@Code
  2669                           
  2670                           ;main.c: 72: if (Code == Code_A)
  2671  0187  0873               	movf	RunCode@Code,w
  2672  0188  1D03               	btfss	3,2
  2673  0189  298D               	goto	l1497
  2674                           
  2675                           ;main.c: 73: POWER_LED_ON();
  2676  018A  3181  215B         	fcall	_POWER_LED_ON
  2677  018C  0008               	return
  2678  018D                     l1497:	
  2679                           
  2680                           ;main.c: 74: else if (Code == Code_B)
  2681  018D  0373               	decf	RunCode@Code,w
  2682  018E  1D03               	btfss	3,2
  2683  018F  2993               	goto	l1501
  2684                           
  2685                           ;main.c: 75: POWER_LED_OFF();
  2686  0190  3181  2171         	fcall	_POWER_LED_OFF
  2687  0192  0008               	return
  2688  0193                     l1501:	
  2689                           
  2690                           ;main.c: 76: else if (Code == Code_C)
  2691  0193  3002               	movlw	2
  2692  0194  0673               	xorwf	RunCode@Code,w
  2693  0195  1D03               	btfss	3,2
  2694  0196  0008               	return
  2695                           
  2696                           ;main.c: 77: POWER_LED_TOGGLE();
  2697  0197  3181  21FD         	fcall	_POWER_LED_TOGGLE
  2698  0199  0008               	return
  2699  019A                     __end_of_RunCode:	
  2700                           
  2701                           	psect	text13
  2702  01FD                     __ptext13:	
  2703 ;; *************** function _POWER_LED_TOGGLE *****************
  2704 ;; Defined at:
  2705 ;;		line 60 in file "main.c"
  2706 ;; Parameters:    Size  Location     Type
  2707 ;;		None
  2708 ;; Auto vars:     Size  Location     Type
  2709 ;;		None
  2710 ;; Return value:  Size  Location     Type
  2711 ;;                  1    wreg      void 
  2712 ;; Registers used:
  2713 ;;		wreg, status,2, status,0, pclath, cstack
  2714 ;; Tracked objects:
  2715 ;;		On entry : 0/0
  2716 ;;		On exit  : 0/0
  2717 ;;		Unchanged: 0/0
  2718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2719 ;;      Params:         0       0       0       0       0       0
  2720 ;;      Locals:         0       0       0       0       0       0
  2721 ;;      Temps:          0       0       0       0       0       0
  2722 ;;      Totals:         0       0       0       0       0       0
  2723 ;;Total ram usage:        0 bytes
  2724 ;; Hardware stack levels used:    1
  2725 ;; Hardware stack levels required when called:    5
  2726 ;; This function calls:
  2727 ;;		_POWER_LED_OFF
  2728 ;;		_POWER_LED_ON
  2729 ;; This function is called by:
  2730 ;;		_RunCode
  2731 ;; This function uses a non-reentrant model
  2732 ;;
  2733                           
  2734                           
  2735                           ;psect for function _POWER_LED_TOGGLE
  2736  01FD                     _POWER_LED_TOGGLE:	
  2737                           
  2738                           ;main.c: 61: if (LedState)
  2739                           
  2740                           ;incstack = 0
  2741                           ; Regs used in _POWER_LED_TOGGLE: [wreg+status,2+status,0+pclath+cstack]
  2742  01FD  0020               	movlb	0	; select bank0
  2743  01FE  0825               	movf	_LedState,w
  2744  01FF  1903               	btfsc	3,2
  2745  0200  2A04               	goto	l1489
  2746                           
  2747                           ;main.c: 62: POWER_LED_OFF();
  2748  0201  3181  2171         	fcall	_POWER_LED_OFF
  2749  0203  0008               	return
  2750  0204                     l1489:	
  2751                           
  2752                           ;main.c: 63: else
  2753                           ;main.c: 64: POWER_LED_ON();
  2754  0204  3181  215B         	fcall	_POWER_LED_ON
  2755  0206  0008               	return
  2756  0207                     __end_of_POWER_LED_TOGGLE:	
  2757                           
  2758                           	psect	text14
  2759  015B                     __ptext14:	
  2760 ;; *************** function _POWER_LED_ON *****************
  2761 ;; Defined at:
  2762 ;;		line 40 in file "main.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;		None
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;		None
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  1    wreg      void 
  2769 ;; Registers used:
  2770 ;;		wreg
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2776 ;;      Params:         0       0       0       0       0       0
  2777 ;;      Locals:         0       0       0       0       0       0
  2778 ;;      Temps:          0       0       0       0       0       0
  2779 ;;      Totals:         0       0       0       0       0       0
  2780 ;;Total ram usage:        0 bytes
  2781 ;; Hardware stack levels used:    1
  2782 ;; Hardware stack levels required when called:    4
  2783 ;; This function calls:
  2784 ;;		Nothing
  2785 ;; This function is called by:
  2786 ;;		_POWER_LED_TOGGLE
  2787 ;;		_RunCode
  2788 ;;		_Code_exec
  2789 ;;		_main
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           
  2794                           ;psect for function _POWER_LED_ON
  2795  015B                     _POWER_LED_ON:	
  2796                           
  2797                           ;incstack = 0
  2798                           ; Regs used in _POWER_LED_ON: [wreg]
  2799                           ;main.c: 41: do { LATAbits.LATA6 = 0; } while(0);
  2800  015B  0022               	movlb	2	; select bank2
  2801  015C  130C               	bcf	12,6	;volatile
  2802                           
  2803                           ;main.c: 42: _delay((unsigned long)((10)*(31000/4000.0)));
  2804  015D  3019               	movlw	25
  2805  015E                     u1107:	
  2806  015E  0B89               	decfsz	9,f
  2807  015F  295E               	goto	u1107
  2808  0160  3200               	nop2
  2809                           
  2810                           ;main.c: 43: do { LATAbits.LATA7 = 1; } while(0);
  2811  0161  0022               	movlb	2	; select bank2
  2812  0162  178C               	bsf	12,7	;volatile
  2813                           
  2814                           ;main.c: 44: _delay((unsigned long)((10)*(31000/4000.0)));
  2815  0163  3019               	movlw	25
  2816  0164                     u1117:	
  2817  0164  0B89               	decfsz	9,f
  2818  0165  2964               	goto	u1117
  2819  0166  3200               	nop2
  2820                           
  2821                           ;main.c: 45: do { LATAbits.LATA7 = 0; } while(0);
  2822  0167  0022               	movlb	2	; select bank2
  2823  0168  138C               	bcf	12,7	;volatile
  2824                           
  2825                           ;main.c: 46: _delay((unsigned long)((10)*(31000/4000.0)));
  2826  0169  3019               	movlw	25
  2827  016A                     u1127:	
  2828  016A  0B89               	decfsz	9,f
  2829  016B  296A               	goto	u1127
  2830  016C  3200               	nop2
  2831                           
  2832                           ;main.c: 47: LedState = 1;
  2833  016D  0020               	movlb	0	; select bank0
  2834  016E  01A5               	clrf	_LedState
  2835  016F  0AA5               	incf	_LedState,f
  2836  0170  0008               	return
  2837  0171                     __end_of_POWER_LED_ON:	
  2838                           
  2839                           	psect	text15
  2840  0171                     __ptext15:	
  2841 ;; *************** function _POWER_LED_OFF *****************
  2842 ;; Defined at:
  2843 ;;		line 50 in file "main.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;		None
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;		None
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1    wreg      void 
  2850 ;; Registers used:
  2851 ;;		wreg, status,2
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2857 ;;      Params:         0       0       0       0       0       0
  2858 ;;      Locals:         0       0       0       0       0       0
  2859 ;;      Temps:          0       0       0       0       0       0
  2860 ;;      Totals:         0       0       0       0       0       0
  2861 ;;Total ram usage:        0 bytes
  2862 ;; Hardware stack levels used:    1
  2863 ;; Hardware stack levels required when called:    4
  2864 ;; This function calls:
  2865 ;;		Nothing
  2866 ;; This function is called by:
  2867 ;;		_POWER_LED_TOGGLE
  2868 ;;		_RunCode
  2869 ;;		_Code_exec
  2870 ;;		_main
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           
  2875                           ;psect for function _POWER_LED_OFF
  2876  0171                     _POWER_LED_OFF:	
  2877                           
  2878                           ;incstack = 0
  2879                           ; Regs used in _POWER_LED_OFF: [wreg+status,2]
  2880                           ;main.c: 51: do { LATAbits.LATA7 = 0; } while(0);
  2881  0171  0022               	movlb	2	; select bank2
  2882  0172  138C               	bcf	12,7	;volatile
  2883                           
  2884                           ;main.c: 52: _delay((unsigned long)((10)*(31000/4000.0)));
  2885  0173  3019               	movlw	25
  2886  0174                     u1137:	
  2887  0174  0B89               	decfsz	9,f
  2888  0175  2974               	goto	u1137
  2889  0176  3200               	nop2
  2890                           
  2891                           ;main.c: 53: do { LATAbits.LATA6 = 1; } while(0);
  2892  0177  0022               	movlb	2	; select bank2
  2893  0178  170C               	bsf	12,6	;volatile
  2894                           
  2895                           ;main.c: 54: _delay((unsigned long)((10)*(31000/4000.0)));
  2896  0179  3019               	movlw	25
  2897  017A                     u1147:	
  2898  017A  0B89               	decfsz	9,f
  2899  017B  297A               	goto	u1147
  2900  017C  3200               	nop2
  2901                           
  2902                           ;main.c: 55: do { LATAbits.LATA6 = 0; } while(0);
  2903  017D  0022               	movlb	2	; select bank2
  2904  017E  130C               	bcf	12,6	;volatile
  2905                           
  2906                           ;main.c: 56: _delay((unsigned long)((10)*(31000/4000.0)));
  2907  017F  3019               	movlw	25
  2908  0180                     u1157:	
  2909  0180  0B89               	decfsz	9,f
  2910  0181  2980               	goto	u1157
  2911  0182  3200               	nop2
  2912                           
  2913                           ;main.c: 57: LedState = 0;
  2914  0183  0020               	movlb	0	; select bank0
  2915  0184  01A5               	clrf	_LedState
  2916  0185  0008               	return
  2917  0186                     __end_of_POWER_LED_OFF:	
  2918                           
  2919                           	psect	intentry
  2920  0004                     __pintentry:	
  2921 ;; *************** function _INTERRUPT_InterruptManager *****************
  2922 ;; Defined at:
  2923 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;		None
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;		None
  2928 ;; Return value:  Size  Location     Type
  2929 ;;                  1    wreg      void 
  2930 ;; Registers used:
  2931 ;;		wreg, status,2, status,0, pclath, cstack
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2937 ;;      Params:         0       0       0       0       0       0
  2938 ;;      Locals:         0       0       0       0       0       0
  2939 ;;      Temps:          1       0       0       0       0       0
  2940 ;;      Totals:         1       0       0       0       0       0
  2941 ;;Total ram usage:        1 bytes
  2942 ;; Hardware stack levels used:    1
  2943 ;; Hardware stack levels required when called:    3
  2944 ;; This function calls:
  2945 ;;		_ADC_ISR
  2946 ;;		_INT_ISR
  2947 ;;		_TMR2_ISR
  2948 ;;		_TMR4_ISR
  2949 ;; This function is called by:
  2950 ;;		Interrupt level 1
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954  0004                     _INTERRUPT_InterruptManager:	
  2955                           
  2956                           ;incstack = 0
  2957  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2958                           
  2959                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  2960  0005  3180               	pagesel	$
  2961  0006  0020               	movlb	0	; select bank0
  2962  0007  087F               	movf	127,w
  2963  0008  00F2               	movwf	??_INTERRUPT_InterruptManager
  2964                           
  2965                           ;interrupt_manager.c: 55: if(INTCONbits.INTE == 1 && INTCONbits.INTF == 1)
  2966  0009  1A0B               	btfsc	11,4	;volatile
  2967  000A  1C8B               	btfss	11,1	;volatile
  2968  000B  2810               	goto	i1l91
  2969                           
  2970                           ;interrupt_manager.c: 56: {
  2971                           ;interrupt_manager.c: 57: INT_ISR();
  2972  000C  3181  21E7  3180   	fcall	_INT_ISR
  2973                           
  2974                           ;interrupt_manager.c: 58: }
  2975  000F  282E               	goto	i1l99
  2976  0010                     i1l91:	
  2977                           
  2978                           ;interrupt_manager.c: 59: else if(INTCONbits.PEIE == 1)
  2979  0010  1F0B               	btfss	11,6	;volatile
  2980  0011  282E               	goto	i1l99
  2981                           
  2982                           ;interrupt_manager.c: 60: {
  2983                           ;interrupt_manager.c: 61: if(PIE3bits.TMR4IE == 1 && PIR3bits.TMR4IF == 1)
  2984  0012  0021               	movlb	1	; select bank1
  2985  0013  1C93               	btfss	19,1	;volatile
  2986  0014  281C               	goto	i1l94
  2987  0015  0020               	movlb	0	; select bank0
  2988  0016  1C93               	btfss	19,1	;volatile
  2989  0017  281C               	goto	i1l94
  2990                           
  2991                           ;interrupt_manager.c: 62: {
  2992                           ;interrupt_manager.c: 63: TMR4_ISR();
  2993  0018  3181  2144  3180   	fcall	_TMR4_ISR
  2994                           
  2995                           ;interrupt_manager.c: 64: }
  2996  001B  282E               	goto	i1l99
  2997  001C                     i1l94:	
  2998                           
  2999                           ;interrupt_manager.c: 65: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  3000  001C  0021               	movlb	1	; select bank1
  3001  001D  1C91               	btfss	17,1	;volatile
  3002  001E  2826               	goto	i1l96
  3003  001F  0020               	movlb	0	; select bank0
  3004  0020  1C91               	btfss	17,1	;volatile
  3005  0021  2826               	goto	i1l96
  3006                           
  3007                           ;interrupt_manager.c: 66: {
  3008                           ;interrupt_manager.c: 67: TMR2_ISR();
  3009  0022  3182  2219  3180   	fcall	_TMR2_ISR
  3010                           
  3011                           ;interrupt_manager.c: 68: }
  3012  0025  282E               	goto	i1l99
  3013  0026                     i1l96:	
  3014                           
  3015                           ;interrupt_manager.c: 69: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  3016  0026  0021               	movlb	1	; select bank1
  3017  0027  1F11               	btfss	17,6	;volatile
  3018  0028  282E               	goto	i1l99
  3019  0029  0020               	movlb	0	; select bank0
  3020  002A  1F11               	btfss	17,6	;volatile
  3021  002B  282E               	goto	i1l99
  3022                           
  3023                           ;interrupt_manager.c: 70: {
  3024                           ;interrupt_manager.c: 71: ADC_ISR();
  3025  002C  3182  222A         	fcall	_ADC_ISR
  3026  002E                     i1l99:	
  3027  002E  0872               	movf	??_INTERRUPT_InterruptManager,w
  3028  002F  0020               	movlb	0	; select bank0
  3029  0030  00FF               	movwf	127
  3030  0031  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3031  0032  0009               	retfie
  3032  0033                     __end_of_INTERRUPT_InterruptManager:	
  3033                           
  3034                           	psect	text17
  3035  0144                     __ptext17:	
  3036 ;; *************** function _TMR4_ISR *****************
  3037 ;; Defined at:
  3038 ;;		line 120 in file "mcc_generated_files/tmr4.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;		None
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;		None
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  1    wreg      void 
  3045 ;; Registers used:
  3046 ;;		wreg, status,2, status,0, pclath, cstack
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3052 ;;      Params:         0       0       0       0       0       0
  3053 ;;      Locals:         0       0       0       0       0       0
  3054 ;;      Temps:          2       0       0       0       0       0
  3055 ;;      Totals:         2       0       0       0       0       0
  3056 ;;Total ram usage:        2 bytes
  3057 ;; Hardware stack levels used:    1
  3058 ;; Hardware stack levels required when called:    2
  3059 ;; This function calls:
  3060 ;;		_TMR4_CallBack
  3061 ;; This function is called by:
  3062 ;;		_INTERRUPT_InterruptManager
  3063 ;; This function uses a non-reentrant model
  3064 ;;
  3065                           
  3066                           
  3067                           ;psect for function _TMR4_ISR
  3068  0144                     _TMR4_ISR:	
  3069                           
  3070                           ;tmr4.c: 122: static volatile unsigned int CountCallBack = 0;
  3071                           ;tmr4.c: 125: PIR3bits.TMR4IF = 0;
  3072                           
  3073                           ;incstack = 0
  3074                           ; Regs used in _TMR4_ISR: [wreg+status,2+status,0+pclath+cstack]
  3075  0144  0020               	movlb	0	; select bank0
  3076  0145  1093               	bcf	19,1	;volatile
  3077                           
  3078                           ;tmr4.c: 128: if (++CountCallBack >= TMR4_INTERRUPT_TICKER_FACTOR)
  3079  0146  087A               	movf	_TMR4_INTERRUPT_TICKER_FACTOR,w
  3080  0147  00F0               	movwf	??_TMR4_ISR
  3081  0148  01F1               	clrf	??_TMR4_ISR+1
  3082  0149  3001               	movlw	1
  3083  014A  07A0               	addwf	TMR4_ISR@CountCallBack,f	;volatile
  3084  014B  3000               	movlw	0
  3085  014C  3DA1               	addwfc	TMR4_ISR@CountCallBack+1,f	;volatile
  3086  014D  0871               	movf	??_TMR4_ISR+1,w
  3087  014E  0221               	subwf	TMR4_ISR@CountCallBack+1,w	;volatile
  3088  014F  1D03               	skipz
  3089  0150  2953               	goto	u52_25
  3090  0151  0870               	movf	??_TMR4_ISR,w
  3091  0152  0220               	subwf	TMR4_ISR@CountCallBack,w	;volatile
  3092  0153                     u52_25:	
  3093  0153  1C03               	skipc
  3094  0154  0008               	return
  3095                           
  3096                           ;tmr4.c: 129: {
  3097                           ;tmr4.c: 131: TMR4_CallBack();
  3098  0155  3181  21D1         	fcall	_TMR4_CallBack
  3099                           
  3100                           ;tmr4.c: 134: CountCallBack = 0;
  3101  0157  0020               	movlb	0	; select bank0
  3102  0158  01A0               	clrf	TMR4_ISR@CountCallBack	;volatile
  3103  0159  01A1               	clrf	TMR4_ISR@CountCallBack+1	;volatile
  3104  015A  0008               	return
  3105  015B                     __end_of_TMR4_ISR:	
  3106                           
  3107                           	psect	text18
  3108  01D1                     __ptext18:	
  3109 ;; *************** function _TMR4_CallBack *****************
  3110 ;; Defined at:
  3111 ;;		line 138 in file "mcc_generated_files/tmr4.c"
  3112 ;; Parameters:    Size  Location     Type
  3113 ;;		None
  3114 ;; Auto vars:     Size  Location     Type
  3115 ;;		None
  3116 ;; Return value:  Size  Location     Type
  3117 ;;                  1    wreg      void 
  3118 ;; Registers used:
  3119 ;;		wreg, status,2, status,0, pclath, cstack
  3120 ;; Tracked objects:
  3121 ;;		On entry : 0/0
  3122 ;;		On exit  : 0/0
  3123 ;;		Unchanged: 0/0
  3124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3125 ;;      Params:         0       0       0       0       0       0
  3126 ;;      Locals:         0       0       0       0       0       0
  3127 ;;      Temps:          0       0       0       0       0       0
  3128 ;;      Totals:         0       0       0       0       0       0
  3129 ;;Total ram usage:        0 bytes
  3130 ;; Hardware stack levels used:    1
  3131 ;; Hardware stack levels required when called:    1
  3132 ;; This function calls:
  3133 ;;		Absolute function
  3134 ;;		_TMR4_DefaultInterruptHandler
  3135 ;; This function is called by:
  3136 ;;		_TMR4_ISR
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140                           
  3141                           ;psect for function _TMR4_CallBack
  3142  01D1                     _TMR4_CallBack:	
  3143                           
  3144                           ;tmr4.c: 142: if(TMR4_InterruptHandler)
  3145                           
  3146                           ;incstack = 0
  3147                           ; Regs used in _TMR4_CallBack: [wreg+status,2+status,0+pclath+cstack]
  3148  01D1  0020               	movlb	0	; select bank0
  3149  01D2  0822               	movf	_TMR4_InterruptHandler,w
  3150  01D3  0423               	iorwf	_TMR4_InterruptHandler+1,w
  3151  01D4  1903               	btfsc	3,2
  3152  01D5  0008               	return
  3153                           
  3154                           ;tmr4.c: 143: {
  3155                           ;tmr4.c: 144: TMR4_InterruptHandler();
  3156  01D6  0823               	movf	_TMR4_InterruptHandler+1,w
  3157  01D7  008A               	movwf	10
  3158  01D8  0822               	movf	_TMR4_InterruptHandler,w
  3159  01D9  000A               	callw
  3160  01DA  3181               	pagesel	$
  3161  01DB  0008               	return
  3162  01DC                     __end_of_TMR4_CallBack:	
  3163                           
  3164                           	psect	text19
  3165  0222                     __ptext19:	
  3166 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  3167 ;; Defined at:
  3168 ;;		line 152 in file "mcc_generated_files/tmr4.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;		None
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;		None
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  1    wreg      void 
  3175 ;; Registers used:
  3176 ;;		None
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3182 ;;      Params:         0       0       0       0       0       0
  3183 ;;      Locals:         0       0       0       0       0       0
  3184 ;;      Temps:          0       0       0       0       0       0
  3185 ;;      Totals:         0       0       0       0       0       0
  3186 ;;Total ram usage:        0 bytes
  3187 ;; Hardware stack levels used:    1
  3188 ;; This function calls:
  3189 ;;		Nothing
  3190 ;; This function is called by:
  3191 ;;		_TMR4_Initialize
  3192 ;;		_TMR4_CallBack
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           
  3196                           
  3197                           ;psect for function _TMR4_DefaultInterruptHandler
  3198  0222                     _TMR4_DefaultInterruptHandler:	
  3199                           
  3200                           ;tmr4.c: 155: TMR4_INT_FLAG = 1;
  3201                           
  3202                           ;incstack = 0
  3203                           ; Regs used in _TMR4_DefaultInterruptHandler: []
  3204  0222  0020               	movlb	0	; select bank0
  3205  0223  01A7               	clrf	_TMR4_INT_FLAG
  3206  0224  0AA7               	incf	_TMR4_INT_FLAG,f
  3207  0225  0008               	return
  3208  0226                     __end_of_TMR4_DefaultInterruptHandler:	
  3209                           
  3210                           	psect	text20
  3211  0219                     __ptext20:	
  3212 ;; *************** function _TMR2_ISR *****************
  3213 ;; Defined at:
  3214 ;;		line 114 in file "mcc_generated_files/tmr2.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;		None
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;		None
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  1    wreg      void 
  3221 ;; Registers used:
  3222 ;;		wreg, status,2, status,0, pclath, cstack
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3228 ;;      Params:         0       0       0       0       0       0
  3229 ;;      Locals:         0       0       0       0       0       0
  3230 ;;      Temps:          0       0       0       0       0       0
  3231 ;;      Totals:         0       0       0       0       0       0
  3232 ;;Total ram usage:        0 bytes
  3233 ;; Hardware stack levels used:    1
  3234 ;; Hardware stack levels required when called:    2
  3235 ;; This function calls:
  3236 ;;		_TMR2_CallBack
  3237 ;; This function is called by:
  3238 ;;		_INTERRUPT_InterruptManager
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241                           
  3242                           
  3243                           ;psect for function _TMR2_ISR
  3244  0219                     _TMR2_ISR:	
  3245                           
  3246                           ;tmr2.c: 117: PIR1bits.TMR2IF = 0;
  3247                           
  3248                           ;incstack = 0
  3249                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  3250  0219  0020               	movlb	0	; select bank0
  3251  021A  1091               	bcf	17,1	;volatile
  3252                           
  3253                           ;tmr2.c: 121: TMR2_CallBack();
  3254  021B  3181  21DC         	fcall	_TMR2_CallBack
  3255  021D  0008               	return
  3256  021E                     __end_of_TMR2_ISR:	
  3257                           
  3258                           	psect	text21
  3259  01DC                     __ptext21:	
  3260 ;; *************** function _TMR2_CallBack *****************
  3261 ;; Defined at:
  3262 ;;		line 124 in file "mcc_generated_files/tmr2.c"
  3263 ;; Parameters:    Size  Location     Type
  3264 ;;		None
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;		None
  3267 ;; Return value:  Size  Location     Type
  3268 ;;                  1    wreg      void 
  3269 ;; Registers used:
  3270 ;;		wreg, status,2, status,0, pclath, cstack
  3271 ;; Tracked objects:
  3272 ;;		On entry : 0/0
  3273 ;;		On exit  : 0/0
  3274 ;;		Unchanged: 0/0
  3275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3276 ;;      Params:         0       0       0       0       0       0
  3277 ;;      Locals:         0       0       0       0       0       0
  3278 ;;      Temps:          0       0       0       0       0       0
  3279 ;;      Totals:         0       0       0       0       0       0
  3280 ;;Total ram usage:        0 bytes
  3281 ;; Hardware stack levels used:    1
  3282 ;; Hardware stack levels required when called:    1
  3283 ;; This function calls:
  3284 ;;		Absolute function
  3285 ;;		_TMR2_DefaultInterruptHandler
  3286 ;; This function is called by:
  3287 ;;		_TMR2_ISR
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           
  3292                           ;psect for function _TMR2_CallBack
  3293  01DC                     _TMR2_CallBack:	
  3294                           
  3295                           ;tmr2.c: 127: if (TMR2_InterruptHandler) {
  3296                           
  3297                           ;incstack = 0
  3298                           ; Regs used in _TMR2_CallBack: [wreg+status,2+status,0+pclath+cstack]
  3299  01DC  0020               	movlb	0	; select bank0
  3300  01DD  0828               	movf	_TMR2_InterruptHandler,w
  3301  01DE  0429               	iorwf	_TMR2_InterruptHandler+1,w
  3302  01DF  1903               	btfsc	3,2
  3303  01E0  0008               	return
  3304                           
  3305                           ;tmr2.c: 128: TMR2_InterruptHandler();
  3306  01E1  0829               	movf	_TMR2_InterruptHandler+1,w
  3307  01E2  008A               	movwf	10
  3308  01E3  0828               	movf	_TMR2_InterruptHandler,w
  3309  01E4  000A               	callw
  3310  01E5  3181               	pagesel	$
  3311  01E6  0008               	return
  3312  01E7                     __end_of_TMR2_CallBack:	
  3313                           
  3314                           	psect	text22
  3315  0226                     __ptext22:	
  3316 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  3317 ;; Defined at:
  3318 ;;		line 136 in file "mcc_generated_files/tmr2.c"
  3319 ;; Parameters:    Size  Location     Type
  3320 ;;		None
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;		None
  3323 ;; Return value:  Size  Location     Type
  3324 ;;                  1    wreg      void 
  3325 ;; Registers used:
  3326 ;;		None
  3327 ;; Tracked objects:
  3328 ;;		On entry : 0/0
  3329 ;;		On exit  : 0/0
  3330 ;;		Unchanged: 0/0
  3331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3332 ;;      Params:         0       0       0       0       0       0
  3333 ;;      Locals:         0       0       0       0       0       0
  3334 ;;      Temps:          0       0       0       0       0       0
  3335 ;;      Totals:         0       0       0       0       0       0
  3336 ;;Total ram usage:        0 bytes
  3337 ;; Hardware stack levels used:    1
  3338 ;; This function calls:
  3339 ;;		Nothing
  3340 ;; This function is called by:
  3341 ;;		_TMR2_Initialize
  3342 ;;		_TMR2_CallBack
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345                           
  3346                           
  3347                           ;psect for function _TMR2_DefaultInterruptHandler
  3348  0226                     _TMR2_DefaultInterruptHandler:	
  3349                           
  3350                           ;tmr2.c: 139: TMR2_INT_FLAG = 1;
  3351                           
  3352                           ;incstack = 0
  3353                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  3354  0226  0020               	movlb	0	; select bank0
  3355  0227  01A6               	clrf	_TMR2_INT_FLAG
  3356  0228  0AA6               	incf	_TMR2_INT_FLAG,f
  3357  0229  0008               	return
  3358  022A                     __end_of_TMR2_DefaultInterruptHandler:	
  3359                           
  3360                           	psect	text23
  3361  01E7                     __ptext23:	
  3362 ;; *************** function _INT_ISR *****************
  3363 ;; Defined at:
  3364 ;;		line 32 in file "mcc_generated_files/ext_int.c"
  3365 ;; Parameters:    Size  Location     Type
  3366 ;;		None
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;		None
  3369 ;; Return value:  Size  Location     Type
  3370 ;;                  1    wreg      void 
  3371 ;; Registers used:
  3372 ;;		wreg, status,2, status,0, pclath, cstack
  3373 ;; Tracked objects:
  3374 ;;		On entry : 0/0
  3375 ;;		On exit  : 0/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3378 ;;      Params:         0       0       0       0       0       0
  3379 ;;      Locals:         0       0       0       0       0       0
  3380 ;;      Temps:          1       0       0       0       0       0
  3381 ;;      Totals:         1       0       0       0       0       0
  3382 ;;Total ram usage:        1 bytes
  3383 ;; Hardware stack levels used:    1
  3384 ;; Hardware stack levels required when called:    2
  3385 ;; This function calls:
  3386 ;;		_INT_CallBack
  3387 ;; This function is called by:
  3388 ;;		_INTERRUPT_InterruptManager
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           
  3393                           ;psect for function _INT_ISR
  3394  01E7                     _INT_ISR:	
  3395                           
  3396                           ;ext_int.c: 34: PORTA_Saved = PORTA;
  3397                           
  3398                           ;incstack = 0
  3399                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
  3400  01E7  0020               	movlb	0	; select bank0
  3401  01E8  080C               	movf	12,w	;volatile
  3402  01E9  00F0               	movwf	??_INT_ISR
  3403  01EA  0870               	movf	??_INT_ISR,w
  3404  01EB  00F9               	movwf	_PORTA_Saved
  3405                           
  3406                           ;ext_int.c: 35: DATA_RECEIVED = 1;
  3407  01EC  01F8               	clrf	_DATA_RECEIVED
  3408  01ED  0AF8               	incf	_DATA_RECEIVED,f
  3409                           
  3410                           ;ext_int.c: 37: (INTCONbits.INTF = 0);
  3411  01EE  108B               	bcf	11,1	;volatile
  3412                           
  3413                           ;ext_int.c: 40: INT_CallBack();
  3414  01EF  3181  21F2         	fcall	_INT_CallBack
  3415  01F1  0008               	return
  3416  01F2                     __end_of_INT_ISR:	
  3417                           
  3418                           	psect	text24
  3419  01F2                     __ptext24:	
  3420 ;; *************** function _INT_CallBack *****************
  3421 ;; Defined at:
  3422 ;;		line 43 in file "mcc_generated_files/ext_int.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;		None
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;		None
  3427 ;; Return value:  Size  Location     Type
  3428 ;;                  1    wreg      void 
  3429 ;; Registers used:
  3430 ;;		wreg, status,2, status,0, pclath, cstack
  3431 ;; Tracked objects:
  3432 ;;		On entry : 0/0
  3433 ;;		On exit  : 0/0
  3434 ;;		Unchanged: 0/0
  3435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3436 ;;      Params:         0       0       0       0       0       0
  3437 ;;      Locals:         0       0       0       0       0       0
  3438 ;;      Temps:          0       0       0       0       0       0
  3439 ;;      Totals:         0       0       0       0       0       0
  3440 ;;Total ram usage:        0 bytes
  3441 ;; Hardware stack levels used:    1
  3442 ;; Hardware stack levels required when called:    1
  3443 ;; This function calls:
  3444 ;;		Absolute function
  3445 ;;		_INT_DefaultInterruptHandler
  3446 ;; This function is called by:
  3447 ;;		_INT_ISR
  3448 ;; This function uses a non-reentrant model
  3449 ;;
  3450                           
  3451                           
  3452                           ;psect for function _INT_CallBack
  3453  01F2                     _INT_CallBack:	
  3454                           
  3455                           ;ext_int.c: 45: if (INT_InterruptHandler) {
  3456                           
  3457                           ;incstack = 0
  3458                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
  3459  01F2  0020               	movlb	0	; select bank0
  3460  01F3  082A               	movf	_INT_InterruptHandler,w
  3461  01F4  042B               	iorwf	_INT_InterruptHandler+1,w
  3462  01F5  1903               	btfsc	3,2
  3463  01F6  0008               	return
  3464                           
  3465                           ;ext_int.c: 46: INT_InterruptHandler();
  3466  01F7  082B               	movf	_INT_InterruptHandler+1,w
  3467  01F8  008A               	movwf	10
  3468  01F9  082A               	movf	_INT_InterruptHandler,w
  3469  01FA  000A               	callw
  3470  01FB  3181               	pagesel	$
  3471  01FC  0008               	return
  3472  01FD                     __end_of_INT_CallBack:	
  3473                           
  3474                           	psect	text25
  3475  022F                     __ptext25:	
  3476 ;; *************** function _INT_DefaultInterruptHandler *****************
  3477 ;; Defined at:
  3478 ;;		line 54 in file "mcc_generated_files/ext_int.c"
  3479 ;; Parameters:    Size  Location     Type
  3480 ;;		None
  3481 ;; Auto vars:     Size  Location     Type
  3482 ;;		None
  3483 ;; Return value:  Size  Location     Type
  3484 ;;                  1    wreg      void 
  3485 ;; Registers used:
  3486 ;;		None
  3487 ;; Tracked objects:
  3488 ;;		On entry : 0/0
  3489 ;;		On exit  : 0/0
  3490 ;;		Unchanged: 0/0
  3491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3492 ;;      Params:         0       0       0       0       0       0
  3493 ;;      Locals:         0       0       0       0       0       0
  3494 ;;      Temps:          0       0       0       0       0       0
  3495 ;;      Totals:         0       0       0       0       0       0
  3496 ;;Total ram usage:        0 bytes
  3497 ;; Hardware stack levels used:    1
  3498 ;; This function calls:
  3499 ;;		Nothing
  3500 ;; This function is called by:
  3501 ;;		_EXT_INT_Initialize
  3502 ;;		_INT_CallBack
  3503 ;; This function uses a non-reentrant model
  3504 ;;
  3505                           
  3506                           
  3507                           ;psect for function _INT_DefaultInterruptHandler
  3508  022F                     _INT_DefaultInterruptHandler:	
  3509                           
  3510                           ;incstack = 0
  3511                           ; Regs used in _INT_DefaultInterruptHandler: []
  3512  022F  0008               	return
  3513  0230                     __end_of_INT_DefaultInterruptHandler:	
  3514                           
  3515                           	psect	text26
  3516  022A                     __ptext26:	
  3517 ;; *************** function _ADC_ISR *****************
  3518 ;; Defined at:
  3519 ;;		line 141 in file "mcc_generated_files/adc.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;		None
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;		None
  3524 ;; Return value:  Size  Location     Type
  3525 ;;                  1    wreg      void 
  3526 ;; Registers used:
  3527 ;;		None
  3528 ;; Tracked objects:
  3529 ;;		On entry : 0/0
  3530 ;;		On exit  : 0/0
  3531 ;;		Unchanged: 0/0
  3532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3533 ;;      Params:         0       0       0       0       0       0
  3534 ;;      Locals:         0       0       0       0       0       0
  3535 ;;      Temps:          0       0       0       0       0       0
  3536 ;;      Totals:         0       0       0       0       0       0
  3537 ;;Total ram usage:        0 bytes
  3538 ;; Hardware stack levels used:    1
  3539 ;; This function calls:
  3540 ;;		Nothing
  3541 ;; This function is called by:
  3542 ;;		_INTERRUPT_InterruptManager
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545                           
  3546                           
  3547                           ;psect for function _ADC_ISR
  3548  022A                     _ADC_ISR:	
  3549                           
  3550                           ;adc.c: 144: PIR1bits.ADIF = 0;
  3551                           
  3552                           ;incstack = 0
  3553                           ; Regs used in _ADC_ISR: []
  3554  022A  0020               	movlb	0	; select bank0
  3555  022B  1311               	bcf	17,6	;volatile
  3556  022C  0008               	return
  3557  022D                     __end_of_ADC_ISR:	
  3558  007E                     btemp	set	126	;btemp
  3559  007E                     int$flags	set	126
  3560  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    1
    Data        1
    BSS         10
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80      3      15
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMMON

    _main->_Code_exec
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _Code_exec->_eeprom_write

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_TMR4_ISR

Critical Paths under _main in BANK0

    _main->_Code_exec

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     747
                                              1 BANK0      2     2      0
                          _Code_exec
                      _POWER_LED_OFF
                       _POWER_LED_ON
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     172
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      86
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      86
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Code_exec                                            2     2      0     575
                                              7 COMMON     1     1      0
                                              0 BANK0      1     1      0
                      _POWER_LED_OFF
                       _POWER_LED_ON
                            _RunCode
                           _WaitLoop
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (2) _eeprom_write                                         4     3      1     293
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _WaitLoop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RunCode                                              1     1      0      93
                                              3 COMMON     1     1      0
                      _POWER_LED_OFF
                       _POWER_LED_ON
                   _POWER_LED_TOGGLE
 ---------------------------------------------------------------------------------
 (3) _POWER_LED_TOGGLE                                     0     0      0       0
                      _POWER_LED_OFF
                       _POWER_LED_ON
 ---------------------------------------------------------------------------------
 (1) _POWER_LED_ON                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POWER_LED_OFF                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           1     1      0       0
                                              2 COMMON     1     1      0
                            _ADC_ISR
                            _INT_ISR
                           _TMR2_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR4_ISR                                             2     2      0       0
                                              0 COMMON     2     2      0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR4_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR2_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT_ISR                                              1     1      0       0
                                              0 COMMON     1     1      0
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (7) _INT_CallBack                                         0     0      0       0
                   Absolute function *
        _INT_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Code_exec
     _POWER_LED_OFF
     _POWER_LED_ON
     _RunCode
       _POWER_LED_OFF
       _POWER_LED_ON
       _POWER_LED_TOGGLE
         _POWER_LED_OFF
         _POWER_LED_ON
     _WaitLoop
     _eeprom_write
   _POWER_LED_OFF
   _POWER_LED_ON
   _SYSTEM_Initialize
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _INT_ISR
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
   _TMR4_ISR
     _TMR4_CallBack
       Absolute function(Fake) *
       _TMR4_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      1A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      3       F       6       18.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      1A      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Aug 20 16:47:26 2018

        __end_of_TMR2_SetInterruptHandler 020D                               __CFG_CP$OFF 0000  
                                      _WR 0CA9                               __CFG_LVP$ON 0000  
                                     l425 010A                                       l380 009B  
                                     l375 008C                                       l393 00B5  
                                     l385 00AA                                       _GIE 005F  
                                     _PR2 001B                                       _PR4 0416  
                            __CFG_CPD$OFF 0000                                       u790 01C3  
                                     u980 00EA                           __end_of_ADC_ISR 022D  
                         _TMR2_Initialize 019A                              __CFG_BORV$LO 0000  
                                     wreg 0009                              __CFG_IESO$ON 0000  
                                    l1501 0193                                      l1533 0051  
                                    l1543 007C                                      l1561 00A1  
                                    l1555 0092                                      l1539 0065  
                                    l1549 0083                                      l1567 00AC  
                                    l1489 0204                                      l1497 018D  
                                    l1593 00EC                                      l1585 00D4  
                                    l1599 00F3                                      u1107 015E  
                                    u1117 0164                                      u1037 00C0  
                                    u1127 016A                                      u1047 00C6  
                                    u1137 0174                                      u1057 00CC  
                                    u1147 017A                                      u1067 00D2  
                                    u1157 0180                                      u1077 00D5  
                                    _LATA 010C                                      _LATB 010D  
                         __end_of_INT_ISR 01F2                                      u1087 0057  
                                    u1097 0061                                      i1l91 0010  
                                    i1l94 001C                                      i1l96 0026  
                                    i1l99 002E                                      _TMR2 001A  
                                    _TMR4 0415                                      _WREN 0CAA  
                                    _WPUA 020C                                      _WPUB 020D  
                          ??_eeprom_write 0074                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000                                      _main 00B7  
                                    fsr0h 0005                                      indf0 0000  
                                    fsr0l 0004                                      btemp 007E  
                           __CFG_BOREN$ON 0000       __end_of_INT_DefaultInterruptHandler 0230  
             _INT_DefaultInterruptHandler 022F                                      start 0033  
         __end_of_INT_SetInterruptHandler 0219                             __CFG_MCLRE$ON 0000  
                         __end_of_RunCode 019A            __size_of_OSCILLATOR_Initialize 0006  
           __end_of_OSCILLATOR_Initialize 0213                                     ?_main 0070  
                                   _EEADR 0191                             __CFG_WDTE$OFF 0000  
                                   _CARRY 0018                                     _T2CON 001C  
                                   _T4CON 0417                                     _PORTA 000C  
                                   u52_25 0153                                     _TRISA 008C  
                                   _TRISB 008D                          __end_of_TMR2_ISR 021E  
                        __end_of_TMR4_ISR 015B                            _WDT_Initialize 021E  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                           __initialization 0035  
                            __end_of_main 0109                   __end_of_TMR2_Initialize 01AB  
                               ??_ADC_ISR 0070               ?_INTERRUPT_InterruptManager 0070  
                _TMR2_SetInterruptHandler 0207                                    ??_main 002D  
                      __size_of_Code_exec 0071                            __CFG_PLLEN$OFF 0000  
                        __end_of_WaitLoop 01C6                    __end_of_WDT_Initialize 0222  
                               ??_INT_ISR 0070                                    _ADCON0 009D  
                                  _ADCON1 009E                                    _ADRESH 009C  
                                  _ADRESL 009B                                    _EEDATA 0193  
                                  _EECON1 0195                                    _EECON2 0196  
                                  _ANSELA 018C                                    _ANSELB 018D  
                                  _BORCON 0116                                    _OSCCON 0099  
                                  _WDTCON 0097                                    _SWDTEN 04B8  
                          __CFG_PWRTE$OFF 0000                                 ??_RunCode 0073  
                          __CFG_STVREN$ON 0000                      __end_of_eeprom_write 012C  
                           ?_INT_CallBack 0070              _TMR4_INTERRUPT_TICKER_FACTOR 007A  
    __end_of_TMR4_DefaultInterruptHandler 0226     __size_of_TMR4_DefaultInterruptHandler 0004  
            _TMR4_DefaultInterruptHandler 0222                              __pdataCOMMON 007A  
                         ?_WDT_Initialize 0070          __size_of_INT_SetInterruptHandler 0006  
TMR2_SetInterruptHandler@InterruptHandler 0073   INT_SetInterruptHandler@InterruptHandler 0073  
                   __end_of_POWER_LED_OFF 0186                         _SYSTEM_Initialize 01AB  
                 __end_of__initialization 0042                     __end_of_TMR2_CallBack 01E7  
                       __end_of_Code_exec 00B7                        ?_SYSTEM_Initialize 0070  
                       ?_POWER_LED_TOGGLE 0070                        ??_POWER_LED_TOGGLE 0073  
                          _TurnOffTimeout 022E                            __pcstackCOMMON 0070  
                   __end_of_TMR4_CallBack 01DC                       ??_SYSTEM_Initialize 0075  
                               ?_TMR2_ISR 0070                                 ?_TMR4_ISR 0070  
                        ?_TMR2_Initialize 0070                            ??_INT_CallBack 0070  
             __size_of_EXT_INT_Initialize 000B                            _OPTION_REGbits 0095  
           ?_TMR4_DefaultInterruptHandler 0070                         eeprom_write@value 0073  
               __end_of_SYSTEM_Initialize 01BA                                __pbssBANK0 0020  
                   _TMR4_InterruptHandler 0022                    __end_of_TurnOffTimeout 022F  
                               ?_WaitLoop 0070                                __pmaintext 00B7  
                              ??_TMR2_ISR 0070                                ??_TMR4_ISR 0070  
                              __pintentry 0004                                   _ADC_ISR 022A  
                                 _APFCON0 011D                                   _APFCON1 011E  
                           _DATA_RECEIVED 0078                                   _INT_ISR 01E7  
                                 _OSCTUNE 0098                             Code_exec@data 002C  
                           ?_POWER_LED_ON 0070                                ??_WaitLoop 0073  
              ??_TMR2_SetInterruptHandler 0075                                   _RunCode 0186  
                   __size_of_eeprom_write 0023                               RunCode@Code 0073  
                                 __ptext1 01AB                                   __ptext2 021E  
                                 __ptext3 019A                                   __ptext4 0207  
                                 __ptext5 012C                                   __ptext6 020D  
                                 __ptext7 01C6                                   __ptext8 0213  
                                 __ptext9 0046                     _OSCILLATOR_Initialize 020D  
                               _T2CONbits 001C                                 _T4CONbits 0417  
                ??_PIN_MANAGER_Initialize 0073                   _INT_SetInterruptHandler 0213  
              __size_of_SYSTEM_Initialize 000F                      end_of_initialization 0042  
          ??_TMR4_DefaultInterruptHandler 0070                              _eeprom_write 0109  
                    __end_of_INT_CallBack 01FD                            ??_POWER_LED_ON 0073  
                        ??_WDT_Initialize 0073                            _TimeoutCounter 0024  
                               _PORTBbits 000D                          __CFG_FOSC$INTOSC 0000  
                               _Code_exec 0046      __end_of_TMR2_DefaultInterruptHandler 022A  
   __size_of_TMR2_DefaultInterruptHandler 0004              _TMR2_DefaultInterruptHandler 0226  
                           __pidataCOMMON 022D                         __size_of_TMR2_ISR 0005  
                       __size_of_TMR4_ISR 0017                    ?_OSCILLATOR_Initialize 0070  
               __size_of_POWER_LED_TOGGLE 000A                 ??_INT_SetInterruptHandler 0075  
                     start_initialization 0035           __size_of_PIN_MANAGER_Initialize 0018  
            ?_INT_DefaultInterruptHandler 0070                                ?_Code_exec 0070  
                       __size_of_WaitLoop 000C                                  ?_ADC_ISR 0070  
              __end_of_EXT_INT_Initialize 01D1             ?_TMR2_DefaultInterruptHandler 0070  
                  __size_of_POWER_LED_OFF 0015                      __end_of_POWER_LED_ON 0171  
                  __size_of_TMR2_CallBack 000B                     TMR4_ISR@CountCallBack 0020  
                             __pbssCOMMON 0078                                 ___latbits 0001  
                                ?_INT_ISR 0070                             __pcstackBANK0 002C  
                __size_of_TMR2_Initialize 0011                     __size_of_INT_CallBack 000B  
                  __size_of_TMR4_CallBack 000B                          eeprom_write@addr 0076  
                               __pnvBANK0 0028                    _PIN_MANAGER_Initialize 012C  
           ??_INT_DefaultInterruptHandler 0070                                  ?_RunCode 0070  
            ??_INTERRUPT_InterruptManager 0072                              _INT_CallBack 01F2  
                           _TMR2_INT_FLAG 0026                             _TMR4_INT_FLAG 0027  
                           _POWER_LED_OFF 0171                                  _LATAbits 010C  
                                _LATBbits 010D                             _TMR2_CallBack 01DC  
                                _PIE1bits 0091                                  _PIE3bits 0093  
     __size_of_INTERRUPT_InterruptManager 002F                                  _PIR1bits 0011  
                                _PIR3bits 0013                               ??_Code_exec 0077  
                                _TMR2_ISR 0219                                  _TMR4_ISR 0144  
                           _TMR4_CallBack 01D1                          __size_of_ADC_ISR 0003  
                              _ADCON0bits 009D                          _POWER_LED_TOGGLE 01FD  
    __size_of_INT_DefaultInterruptHandler 0001            ??_TMR2_DefaultInterruptHandler 0070  
       __size_of_TMR2_SetInterruptHandler 0006                 ?_TMR2_SetInterruptHandler 0073  
                        __size_of_INT_ISR 000B                                  _LedState 0025  
                          ?_POWER_LED_OFF 0070                         ??_TMR2_Initialize 0075  
                          ?_TMR2_CallBack 0070                                  _WaitLoop 01BA  
                          ?_TMR4_CallBack 0070                          __size_of_RunCode 0014  
                 ??_OSCILLATOR_Initialize 0073                     __size_of_POWER_LED_ON 0016  
                                __ptext10 0109                                  __ptext11 01BA  
                                __ptext20 0219                                  __ptext12 0186  
                                __ptext21 01DC                                  __ptext13 01FD  
                                __ptext22 0226                                  __ptext14 015B  
                                __ptext23 01E7                                  __ptext15 0171  
                                __ptext24 01F2                                  __ptext25 022F  
                                __ptext17 0144                                  __ptext26 022A  
                                __ptext18 01D1                                  __ptext19 0222  
                           __size_of_main 0052                              _POWER_LED_ON 015B  
                                int$flags 007E        __end_of_INTERRUPT_InterruptManager 0033  
              _INTERRUPT_InterruptManager 0004                                _INTCONbits 000B  
                    _INT_InterruptHandler 002A                        _EXT_INT_Initialize 01C6  
                         ??_POWER_LED_OFF 0073                   __size_of_WDT_Initialize 0004  
                                intlevel1 0000                           ??_TMR2_CallBack 0070  
                 ?_PIN_MANAGER_Initialize 0070                         __CFG_CLKOUTEN$OFF 0000  
                     ?_EXT_INT_Initialize 0070                           ??_TMR4_CallBack 0070  
                             _PORTA_Saved 0079                  ?_INT_SetInterruptHandler 0073  
                           __pstringtext1 022E                      ??_EXT_INT_Initialize 0075  
          __end_of_PIN_MANAGER_Initialize 0144                             ?_eeprom_write 0073  
                __end_of_POWER_LED_TOGGLE 0207                     _TMR2_InterruptHandler 0028  
