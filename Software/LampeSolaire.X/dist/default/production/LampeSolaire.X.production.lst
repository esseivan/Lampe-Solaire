

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Aug 08 16:25:45 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16LF1827
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,inline,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	text43,local,class=CODE,merge=1,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	psect	text47,local,class=CODE,merge=1,delta=2
    64                           	psect	text48,local,class=CODE,merge=1,delta=2
    65                           	psect	text49,local,class=CODE,merge=1,delta=2
    66                           	dabs	1,0x220,48
    67                           	dabs	1,0x1A0,80
    68                           	dabs	1,0x120,80
    69                           	dabs	1,0xC0,48
    70                           	dabs	1,0x2070,0,_rxB
    71                           	dabs	1,0x7E,2
    72  0000                     
    73                           ; Version 2.05
    74                           ; Generated 20/12/2018 GMT
    75                           ; 
    76                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC16LF1827 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  0011                     	;# 
   122  0012                     	;# 
   123  0013                     	;# 
   124  0014                     	;# 
   125  0015                     	;# 
   126  0016                     	;# 
   127  0016                     	;# 
   128  0017                     	;# 
   129  0018                     	;# 
   130  0019                     	;# 
   131  001A                     	;# 
   132  001B                     	;# 
   133  001C                     	;# 
   134  001E                     	;# 
   135  001F                     	;# 
   136  008C                     	;# 
   137  008D                     	;# 
   138  0091                     	;# 
   139  0092                     	;# 
   140  0093                     	;# 
   141  0094                     	;# 
   142  0095                     	;# 
   143  0096                     	;# 
   144  0097                     	;# 
   145  0098                     	;# 
   146  0099                     	;# 
   147  009A                     	;# 
   148  009B                     	;# 
   149  009B                     	;# 
   150  009C                     	;# 
   151  009D                     	;# 
   152  009E                     	;# 
   153  010C                     	;# 
   154  010D                     	;# 
   155  0111                     	;# 
   156  0112                     	;# 
   157  0113                     	;# 
   158  0114                     	;# 
   159  0115                     	;# 
   160  0116                     	;# 
   161  0117                     	;# 
   162  0118                     	;# 
   163  0119                     	;# 
   164  011A                     	;# 
   165  011B                     	;# 
   166  011D                     	;# 
   167  011E                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  0191                     	;# 
   171  0191                     	;# 
   172  0192                     	;# 
   173  0193                     	;# 
   174  0193                     	;# 
   175  0193                     	;# 
   176  0194                     	;# 
   177  0195                     	;# 
   178  0196                     	;# 
   179  0199                     	;# 
   180  019A                     	;# 
   181  019B                     	;# 
   182  019B                     	;# 
   183  019B                     	;# 
   184  019B                     	;# 
   185  019C                     	;# 
   186  019C                     	;# 
   187  019D                     	;# 
   188  019E                     	;# 
   189  019F                     	;# 
   190  020C                     	;# 
   191  020D                     	;# 
   192  0211                     	;# 
   193  0211                     	;# 
   194  0212                     	;# 
   195  0212                     	;# 
   196  0213                     	;# 
   197  0213                     	;# 
   198  0214                     	;# 
   199  0214                     	;# 
   200  0215                     	;# 
   201  0215                     	;# 
   202  0215                     	;# 
   203  0216                     	;# 
   204  0216                     	;# 
   205  0217                     	;# 
   206  0217                     	;# 
   207  0219                     	;# 
   208  021A                     	;# 
   209  021B                     	;# 
   210  021C                     	;# 
   211  021D                     	;# 
   212  021E                     	;# 
   213  021F                     	;# 
   214  0291                     	;# 
   215  0291                     	;# 
   216  0292                     	;# 
   217  0293                     	;# 
   218  0294                     	;# 
   219  0295                     	;# 
   220  0295                     	;# 
   221  0296                     	;# 
   222  0298                     	;# 
   223  0298                     	;# 
   224  0299                     	;# 
   225  029A                     	;# 
   226  029B                     	;# 
   227  029C                     	;# 
   228  029C                     	;# 
   229  029D                     	;# 
   230  029E                     	;# 
   231  029E                     	;# 
   232  0311                     	;# 
   233  0311                     	;# 
   234  0312                     	;# 
   235  0313                     	;# 
   236  0318                     	;# 
   237  0318                     	;# 
   238  0319                     	;# 
   239  031A                     	;# 
   240  0394                     	;# 
   241  0395                     	;# 
   242  0396                     	;# 
   243  039A                     	;# 
   244  039C                     	;# 
   245  039D                     	;# 
   246  039E                     	;# 
   247  039F                     	;# 
   248  0415                     	;# 
   249  0416                     	;# 
   250  0417                     	;# 
   251  041C                     	;# 
   252  041D                     	;# 
   253  041E                     	;# 
   254  0FE4                     	;# 
   255  0FE5                     	;# 
   256  0FE6                     	;# 
   257  0FE7                     	;# 
   258  0FE8                     	;# 
   259  0FE9                     	;# 
   260  0FEA                     	;# 
   261  0FEB                     	;# 
   262  0FED                     	;# 
   263  0FEE                     	;# 
   264  0FEF                     	;# 
   265  0000                     	;# 
   266  0001                     	;# 
   267  0002                     	;# 
   268  0003                     	;# 
   269  0004                     	;# 
   270  0005                     	;# 
   271  0006                     	;# 
   272  0007                     	;# 
   273  0008                     	;# 
   274  0009                     	;# 
   275  000A                     	;# 
   276  000B                     	;# 
   277  000C                     	;# 
   278  000D                     	;# 
   279  0011                     	;# 
   280  0012                     	;# 
   281  0013                     	;# 
   282  0014                     	;# 
   283  0015                     	;# 
   284  0016                     	;# 
   285  0016                     	;# 
   286  0017                     	;# 
   287  0018                     	;# 
   288  0019                     	;# 
   289  001A                     	;# 
   290  001B                     	;# 
   291  001C                     	;# 
   292  001E                     	;# 
   293  001F                     	;# 
   294  008C                     	;# 
   295  008D                     	;# 
   296  0091                     	;# 
   297  0092                     	;# 
   298  0093                     	;# 
   299  0094                     	;# 
   300  0095                     	;# 
   301  0096                     	;# 
   302  0097                     	;# 
   303  0098                     	;# 
   304  0099                     	;# 
   305  009A                     	;# 
   306  009B                     	;# 
   307  009B                     	;# 
   308  009C                     	;# 
   309  009D                     	;# 
   310  009E                     	;# 
   311  010C                     	;# 
   312  010D                     	;# 
   313  0111                     	;# 
   314  0112                     	;# 
   315  0113                     	;# 
   316  0114                     	;# 
   317  0115                     	;# 
   318  0116                     	;# 
   319  0117                     	;# 
   320  0118                     	;# 
   321  0119                     	;# 
   322  011A                     	;# 
   323  011B                     	;# 
   324  011D                     	;# 
   325  011E                     	;# 
   326  018C                     	;# 
   327  018D                     	;# 
   328  0191                     	;# 
   329  0191                     	;# 
   330  0192                     	;# 
   331  0193                     	;# 
   332  0193                     	;# 
   333  0193                     	;# 
   334  0194                     	;# 
   335  0195                     	;# 
   336  0196                     	;# 
   337  0199                     	;# 
   338  019A                     	;# 
   339  019B                     	;# 
   340  019B                     	;# 
   341  019B                     	;# 
   342  019B                     	;# 
   343  019C                     	;# 
   344  019C                     	;# 
   345  019D                     	;# 
   346  019E                     	;# 
   347  019F                     	;# 
   348  020C                     	;# 
   349  020D                     	;# 
   350  0211                     	;# 
   351  0211                     	;# 
   352  0212                     	;# 
   353  0212                     	;# 
   354  0213                     	;# 
   355  0213                     	;# 
   356  0214                     	;# 
   357  0214                     	;# 
   358  0215                     	;# 
   359  0215                     	;# 
   360  0215                     	;# 
   361  0216                     	;# 
   362  0216                     	;# 
   363  0217                     	;# 
   364  0217                     	;# 
   365  0219                     	;# 
   366  021A                     	;# 
   367  021B                     	;# 
   368  021C                     	;# 
   369  021D                     	;# 
   370  021E                     	;# 
   371  021F                     	;# 
   372  0291                     	;# 
   373  0291                     	;# 
   374  0292                     	;# 
   375  0293                     	;# 
   376  0294                     	;# 
   377  0295                     	;# 
   378  0295                     	;# 
   379  0296                     	;# 
   380  0298                     	;# 
   381  0298                     	;# 
   382  0299                     	;# 
   383  029A                     	;# 
   384  029B                     	;# 
   385  029C                     	;# 
   386  029C                     	;# 
   387  029D                     	;# 
   388  029E                     	;# 
   389  029E                     	;# 
   390  0311                     	;# 
   391  0311                     	;# 
   392  0312                     	;# 
   393  0313                     	;# 
   394  0318                     	;# 
   395  0318                     	;# 
   396  0319                     	;# 
   397  031A                     	;# 
   398  0394                     	;# 
   399  0395                     	;# 
   400  0396                     	;# 
   401  039A                     	;# 
   402  039C                     	;# 
   403  039D                     	;# 
   404  039E                     	;# 
   405  039F                     	;# 
   406  0415                     	;# 
   407  0416                     	;# 
   408  0417                     	;# 
   409  041C                     	;# 
   410  041D                     	;# 
   411  041E                     	;# 
   412  0FE4                     	;# 
   413  0FE5                     	;# 
   414  0FE6                     	;# 
   415  0FE7                     	;# 
   416  0FE8                     	;# 
   417  0FE9                     	;# 
   418  0FEA                     	;# 
   419  0FEB                     	;# 
   420  0FED                     	;# 
   421  0FEE                     	;# 
   422  0FEF                     	;# 
   423  0000                     	;# 
   424  0001                     	;# 
   425  0002                     	;# 
   426  0003                     	;# 
   427  0004                     	;# 
   428  0005                     	;# 
   429  0006                     	;# 
   430  0007                     	;# 
   431  0008                     	;# 
   432  0009                     	;# 
   433  000A                     	;# 
   434  000B                     	;# 
   435  000C                     	;# 
   436  000D                     	;# 
   437  0011                     	;# 
   438  0012                     	;# 
   439  0013                     	;# 
   440  0014                     	;# 
   441  0015                     	;# 
   442  0016                     	;# 
   443  0016                     	;# 
   444  0017                     	;# 
   445  0018                     	;# 
   446  0019                     	;# 
   447  001A                     	;# 
   448  001B                     	;# 
   449  001C                     	;# 
   450  001E                     	;# 
   451  001F                     	;# 
   452  008C                     	;# 
   453  008D                     	;# 
   454  0091                     	;# 
   455  0092                     	;# 
   456  0093                     	;# 
   457  0094                     	;# 
   458  0095                     	;# 
   459  0096                     	;# 
   460  0097                     	;# 
   461  0098                     	;# 
   462  0099                     	;# 
   463  009A                     	;# 
   464  009B                     	;# 
   465  009B                     	;# 
   466  009C                     	;# 
   467  009D                     	;# 
   468  009E                     	;# 
   469  010C                     	;# 
   470  010D                     	;# 
   471  0111                     	;# 
   472  0112                     	;# 
   473  0113                     	;# 
   474  0114                     	;# 
   475  0115                     	;# 
   476  0116                     	;# 
   477  0117                     	;# 
   478  0118                     	;# 
   479  0119                     	;# 
   480  011A                     	;# 
   481  011B                     	;# 
   482  011D                     	;# 
   483  011E                     	;# 
   484  018C                     	;# 
   485  018D                     	;# 
   486  0191                     	;# 
   487  0191                     	;# 
   488  0192                     	;# 
   489  0193                     	;# 
   490  0193                     	;# 
   491  0193                     	;# 
   492  0194                     	;# 
   493  0195                     	;# 
   494  0196                     	;# 
   495  0199                     	;# 
   496  019A                     	;# 
   497  019B                     	;# 
   498  019B                     	;# 
   499  019B                     	;# 
   500  019B                     	;# 
   501  019C                     	;# 
   502  019C                     	;# 
   503  019D                     	;# 
   504  019E                     	;# 
   505  019F                     	;# 
   506  020C                     	;# 
   507  020D                     	;# 
   508  0211                     	;# 
   509  0211                     	;# 
   510  0212                     	;# 
   511  0212                     	;# 
   512  0213                     	;# 
   513  0213                     	;# 
   514  0214                     	;# 
   515  0214                     	;# 
   516  0215                     	;# 
   517  0215                     	;# 
   518  0215                     	;# 
   519  0216                     	;# 
   520  0216                     	;# 
   521  0217                     	;# 
   522  0217                     	;# 
   523  0219                     	;# 
   524  021A                     	;# 
   525  021B                     	;# 
   526  021C                     	;# 
   527  021D                     	;# 
   528  021E                     	;# 
   529  021F                     	;# 
   530  0291                     	;# 
   531  0291                     	;# 
   532  0292                     	;# 
   533  0293                     	;# 
   534  0294                     	;# 
   535  0295                     	;# 
   536  0295                     	;# 
   537  0296                     	;# 
   538  0298                     	;# 
   539  0298                     	;# 
   540  0299                     	;# 
   541  029A                     	;# 
   542  029B                     	;# 
   543  029C                     	;# 
   544  029C                     	;# 
   545  029D                     	;# 
   546  029E                     	;# 
   547  029E                     	;# 
   548  0311                     	;# 
   549  0311                     	;# 
   550  0312                     	;# 
   551  0313                     	;# 
   552  0318                     	;# 
   553  0318                     	;# 
   554  0319                     	;# 
   555  031A                     	;# 
   556  0394                     	;# 
   557  0395                     	;# 
   558  0396                     	;# 
   559  039A                     	;# 
   560  039C                     	;# 
   561  039D                     	;# 
   562  039E                     	;# 
   563  039F                     	;# 
   564  0415                     	;# 
   565  0416                     	;# 
   566  0417                     	;# 
   567  041C                     	;# 
   568  041D                     	;# 
   569  041E                     	;# 
   570  0FE4                     	;# 
   571  0FE5                     	;# 
   572  0FE6                     	;# 
   573  0FE7                     	;# 
   574  0FE8                     	;# 
   575  0FE9                     	;# 
   576  0FEA                     	;# 
   577  0FEB                     	;# 
   578  0FED                     	;# 
   579  0FEE                     	;# 
   580  0FEF                     	;# 
   581  0000                     	;# 
   582  0001                     	;# 
   583  0002                     	;# 
   584  0003                     	;# 
   585  0004                     	;# 
   586  0005                     	;# 
   587  0006                     	;# 
   588  0007                     	;# 
   589  0008                     	;# 
   590  0009                     	;# 
   591  000A                     	;# 
   592  000B                     	;# 
   593  000C                     	;# 
   594  000D                     	;# 
   595  0011                     	;# 
   596  0012                     	;# 
   597  0013                     	;# 
   598  0014                     	;# 
   599  0015                     	;# 
   600  0016                     	;# 
   601  0016                     	;# 
   602  0017                     	;# 
   603  0018                     	;# 
   604  0019                     	;# 
   605  001A                     	;# 
   606  001B                     	;# 
   607  001C                     	;# 
   608  001E                     	;# 
   609  001F                     	;# 
   610  008C                     	;# 
   611  008D                     	;# 
   612  0091                     	;# 
   613  0092                     	;# 
   614  0093                     	;# 
   615  0094                     	;# 
   616  0095                     	;# 
   617  0096                     	;# 
   618  0097                     	;# 
   619  0098                     	;# 
   620  0099                     	;# 
   621  009A                     	;# 
   622  009B                     	;# 
   623  009B                     	;# 
   624  009C                     	;# 
   625  009D                     	;# 
   626  009E                     	;# 
   627  010C                     	;# 
   628  010D                     	;# 
   629  0111                     	;# 
   630  0112                     	;# 
   631  0113                     	;# 
   632  0114                     	;# 
   633  0115                     	;# 
   634  0116                     	;# 
   635  0117                     	;# 
   636  0118                     	;# 
   637  0119                     	;# 
   638  011A                     	;# 
   639  011B                     	;# 
   640  011D                     	;# 
   641  011E                     	;# 
   642  018C                     	;# 
   643  018D                     	;# 
   644  0191                     	;# 
   645  0191                     	;# 
   646  0192                     	;# 
   647  0193                     	;# 
   648  0193                     	;# 
   649  0193                     	;# 
   650  0194                     	;# 
   651  0195                     	;# 
   652  0196                     	;# 
   653  0199                     	;# 
   654  019A                     	;# 
   655  019B                     	;# 
   656  019B                     	;# 
   657  019B                     	;# 
   658  019B                     	;# 
   659  019C                     	;# 
   660  019C                     	;# 
   661  019D                     	;# 
   662  019E                     	;# 
   663  019F                     	;# 
   664  020C                     	;# 
   665  020D                     	;# 
   666  0211                     	;# 
   667  0211                     	;# 
   668  0212                     	;# 
   669  0212                     	;# 
   670  0213                     	;# 
   671  0213                     	;# 
   672  0214                     	;# 
   673  0214                     	;# 
   674  0215                     	;# 
   675  0215                     	;# 
   676  0215                     	;# 
   677  0216                     	;# 
   678  0216                     	;# 
   679  0217                     	;# 
   680  0217                     	;# 
   681  0219                     	;# 
   682  021A                     	;# 
   683  021B                     	;# 
   684  021C                     	;# 
   685  021D                     	;# 
   686  021E                     	;# 
   687  021F                     	;# 
   688  0291                     	;# 
   689  0291                     	;# 
   690  0292                     	;# 
   691  0293                     	;# 
   692  0294                     	;# 
   693  0295                     	;# 
   694  0295                     	;# 
   695  0296                     	;# 
   696  0298                     	;# 
   697  0298                     	;# 
   698  0299                     	;# 
   699  029A                     	;# 
   700  029B                     	;# 
   701  029C                     	;# 
   702  029C                     	;# 
   703  029D                     	;# 
   704  029E                     	;# 
   705  029E                     	;# 
   706  0311                     	;# 
   707  0311                     	;# 
   708  0312                     	;# 
   709  0313                     	;# 
   710  0318                     	;# 
   711  0318                     	;# 
   712  0319                     	;# 
   713  031A                     	;# 
   714  0394                     	;# 
   715  0395                     	;# 
   716  0396                     	;# 
   717  039A                     	;# 
   718  039C                     	;# 
   719  039D                     	;# 
   720  039E                     	;# 
   721  039F                     	;# 
   722  0415                     	;# 
   723  0416                     	;# 
   724  0417                     	;# 
   725  041C                     	;# 
   726  041D                     	;# 
   727  041E                     	;# 
   728  0FE4                     	;# 
   729  0FE5                     	;# 
   730  0FE6                     	;# 
   731  0FE7                     	;# 
   732  0FE8                     	;# 
   733  0FE9                     	;# 
   734  0FEA                     	;# 
   735  0FEB                     	;# 
   736  0FED                     	;# 
   737  0FEE                     	;# 
   738  0FEF                     	;# 
   739  0000                     	;# 
   740  0001                     	;# 
   741  0002                     	;# 
   742  0003                     	;# 
   743  0004                     	;# 
   744  0005                     	;# 
   745  0006                     	;# 
   746  0007                     	;# 
   747  0008                     	;# 
   748  0009                     	;# 
   749  000A                     	;# 
   750  000B                     	;# 
   751  000C                     	;# 
   752  000D                     	;# 
   753  0011                     	;# 
   754  0012                     	;# 
   755  0013                     	;# 
   756  0014                     	;# 
   757  0015                     	;# 
   758  0016                     	;# 
   759  0016                     	;# 
   760  0017                     	;# 
   761  0018                     	;# 
   762  0019                     	;# 
   763  001A                     	;# 
   764  001B                     	;# 
   765  001C                     	;# 
   766  001E                     	;# 
   767  001F                     	;# 
   768  008C                     	;# 
   769  008D                     	;# 
   770  0091                     	;# 
   771  0092                     	;# 
   772  0093                     	;# 
   773  0094                     	;# 
   774  0095                     	;# 
   775  0096                     	;# 
   776  0097                     	;# 
   777  0098                     	;# 
   778  0099                     	;# 
   779  009A                     	;# 
   780  009B                     	;# 
   781  009B                     	;# 
   782  009C                     	;# 
   783  009D                     	;# 
   784  009E                     	;# 
   785  010C                     	;# 
   786  010D                     	;# 
   787  0111                     	;# 
   788  0112                     	;# 
   789  0113                     	;# 
   790  0114                     	;# 
   791  0115                     	;# 
   792  0116                     	;# 
   793  0117                     	;# 
   794  0118                     	;# 
   795  0119                     	;# 
   796  011A                     	;# 
   797  011B                     	;# 
   798  011D                     	;# 
   799  011E                     	;# 
   800  018C                     	;# 
   801  018D                     	;# 
   802  0191                     	;# 
   803  0191                     	;# 
   804  0192                     	;# 
   805  0193                     	;# 
   806  0193                     	;# 
   807  0193                     	;# 
   808  0194                     	;# 
   809  0195                     	;# 
   810  0196                     	;# 
   811  0199                     	;# 
   812  019A                     	;# 
   813  019B                     	;# 
   814  019B                     	;# 
   815  019B                     	;# 
   816  019B                     	;# 
   817  019C                     	;# 
   818  019C                     	;# 
   819  019D                     	;# 
   820  019E                     	;# 
   821  019F                     	;# 
   822  020C                     	;# 
   823  020D                     	;# 
   824  0211                     	;# 
   825  0211                     	;# 
   826  0212                     	;# 
   827  0212                     	;# 
   828  0213                     	;# 
   829  0213                     	;# 
   830  0214                     	;# 
   831  0214                     	;# 
   832  0215                     	;# 
   833  0215                     	;# 
   834  0215                     	;# 
   835  0216                     	;# 
   836  0216                     	;# 
   837  0217                     	;# 
   838  0217                     	;# 
   839  0219                     	;# 
   840  021A                     	;# 
   841  021B                     	;# 
   842  021C                     	;# 
   843  021D                     	;# 
   844  021E                     	;# 
   845  021F                     	;# 
   846  0291                     	;# 
   847  0291                     	;# 
   848  0292                     	;# 
   849  0293                     	;# 
   850  0294                     	;# 
   851  0295                     	;# 
   852  0295                     	;# 
   853  0296                     	;# 
   854  0298                     	;# 
   855  0298                     	;# 
   856  0299                     	;# 
   857  029A                     	;# 
   858  029B                     	;# 
   859  029C                     	;# 
   860  029C                     	;# 
   861  029D                     	;# 
   862  029E                     	;# 
   863  029E                     	;# 
   864  0311                     	;# 
   865  0311                     	;# 
   866  0312                     	;# 
   867  0313                     	;# 
   868  0318                     	;# 
   869  0318                     	;# 
   870  0319                     	;# 
   871  031A                     	;# 
   872  0394                     	;# 
   873  0395                     	;# 
   874  0396                     	;# 
   875  039A                     	;# 
   876  039C                     	;# 
   877  039D                     	;# 
   878  039E                     	;# 
   879  039F                     	;# 
   880  0415                     	;# 
   881  0416                     	;# 
   882  0417                     	;# 
   883  041C                     	;# 
   884  041D                     	;# 
   885  041E                     	;# 
   886  0FE4                     	;# 
   887  0FE5                     	;# 
   888  0FE6                     	;# 
   889  0FE7                     	;# 
   890  0FE8                     	;# 
   891  0FE9                     	;# 
   892  0FEA                     	;# 
   893  0FEB                     	;# 
   894  0FED                     	;# 
   895  0FEE                     	;# 
   896  0FEF                     	;# 
   897  0000                     	;# 
   898  0001                     	;# 
   899  0002                     	;# 
   900  0003                     	;# 
   901  0004                     	;# 
   902  0005                     	;# 
   903  0006                     	;# 
   904  0007                     	;# 
   905  0008                     	;# 
   906  0009                     	;# 
   907  000A                     	;# 
   908  000B                     	;# 
   909  000C                     	;# 
   910  000D                     	;# 
   911  0011                     	;# 
   912  0012                     	;# 
   913  0013                     	;# 
   914  0014                     	;# 
   915  0015                     	;# 
   916  0016                     	;# 
   917  0016                     	;# 
   918  0017                     	;# 
   919  0018                     	;# 
   920  0019                     	;# 
   921  001A                     	;# 
   922  001B                     	;# 
   923  001C                     	;# 
   924  001E                     	;# 
   925  001F                     	;# 
   926  008C                     	;# 
   927  008D                     	;# 
   928  0091                     	;# 
   929  0092                     	;# 
   930  0093                     	;# 
   931  0094                     	;# 
   932  0095                     	;# 
   933  0096                     	;# 
   934  0097                     	;# 
   935  0098                     	;# 
   936  0099                     	;# 
   937  009A                     	;# 
   938  009B                     	;# 
   939  009B                     	;# 
   940  009C                     	;# 
   941  009D                     	;# 
   942  009E                     	;# 
   943  010C                     	;# 
   944  010D                     	;# 
   945  0111                     	;# 
   946  0112                     	;# 
   947  0113                     	;# 
   948  0114                     	;# 
   949  0115                     	;# 
   950  0116                     	;# 
   951  0117                     	;# 
   952  0118                     	;# 
   953  0119                     	;# 
   954  011A                     	;# 
   955  011B                     	;# 
   956  011D                     	;# 
   957  011E                     	;# 
   958  018C                     	;# 
   959  018D                     	;# 
   960  0191                     	;# 
   961  0191                     	;# 
   962  0192                     	;# 
   963  0193                     	;# 
   964  0193                     	;# 
   965  0193                     	;# 
   966  0194                     	;# 
   967  0195                     	;# 
   968  0196                     	;# 
   969  0199                     	;# 
   970  019A                     	;# 
   971  019B                     	;# 
   972  019B                     	;# 
   973  019B                     	;# 
   974  019B                     	;# 
   975  019C                     	;# 
   976  019C                     	;# 
   977  019D                     	;# 
   978  019E                     	;# 
   979  019F                     	;# 
   980  020C                     	;# 
   981  020D                     	;# 
   982  0211                     	;# 
   983  0211                     	;# 
   984  0212                     	;# 
   985  0212                     	;# 
   986  0213                     	;# 
   987  0213                     	;# 
   988  0214                     	;# 
   989  0214                     	;# 
   990  0215                     	;# 
   991  0215                     	;# 
   992  0215                     	;# 
   993  0216                     	;# 
   994  0216                     	;# 
   995  0217                     	;# 
   996  0217                     	;# 
   997  0219                     	;# 
   998  021A                     	;# 
   999  021B                     	;# 
  1000  021C                     	;# 
  1001  021D                     	;# 
  1002  021E                     	;# 
  1003  021F                     	;# 
  1004  0291                     	;# 
  1005  0291                     	;# 
  1006  0292                     	;# 
  1007  0293                     	;# 
  1008  0294                     	;# 
  1009  0295                     	;# 
  1010  0295                     	;# 
  1011  0296                     	;# 
  1012  0298                     	;# 
  1013  0298                     	;# 
  1014  0299                     	;# 
  1015  029A                     	;# 
  1016  029B                     	;# 
  1017  029C                     	;# 
  1018  029C                     	;# 
  1019  029D                     	;# 
  1020  029E                     	;# 
  1021  029E                     	;# 
  1022  0311                     	;# 
  1023  0311                     	;# 
  1024  0312                     	;# 
  1025  0313                     	;# 
  1026  0318                     	;# 
  1027  0318                     	;# 
  1028  0319                     	;# 
  1029  031A                     	;# 
  1030  0394                     	;# 
  1031  0395                     	;# 
  1032  0396                     	;# 
  1033  039A                     	;# 
  1034  039C                     	;# 
  1035  039D                     	;# 
  1036  039E                     	;# 
  1037  039F                     	;# 
  1038  0415                     	;# 
  1039  0416                     	;# 
  1040  0417                     	;# 
  1041  041C                     	;# 
  1042  041D                     	;# 
  1043  041E                     	;# 
  1044  0FE4                     	;# 
  1045  0FE5                     	;# 
  1046  0FE6                     	;# 
  1047  0FE7                     	;# 
  1048  0FE8                     	;# 
  1049  0FE9                     	;# 
  1050  0FEA                     	;# 
  1051  0FEB                     	;# 
  1052  0FED                     	;# 
  1053  0FEE                     	;# 
  1054  0FEF                     	;# 
  1055  0000                     	;# 
  1056  0001                     	;# 
  1057  0002                     	;# 
  1058  0003                     	;# 
  1059  0004                     	;# 
  1060  0005                     	;# 
  1061  0006                     	;# 
  1062  0007                     	;# 
  1063  0008                     	;# 
  1064  0009                     	;# 
  1065  000A                     	;# 
  1066  000B                     	;# 
  1067  000C                     	;# 
  1068  000D                     	;# 
  1069  0011                     	;# 
  1070  0012                     	;# 
  1071  0013                     	;# 
  1072  0014                     	;# 
  1073  0015                     	;# 
  1074  0016                     	;# 
  1075  0016                     	;# 
  1076  0017                     	;# 
  1077  0018                     	;# 
  1078  0019                     	;# 
  1079  001A                     	;# 
  1080  001B                     	;# 
  1081  001C                     	;# 
  1082  001E                     	;# 
  1083  001F                     	;# 
  1084  008C                     	;# 
  1085  008D                     	;# 
  1086  0091                     	;# 
  1087  0092                     	;# 
  1088  0093                     	;# 
  1089  0094                     	;# 
  1090  0095                     	;# 
  1091  0096                     	;# 
  1092  0097                     	;# 
  1093  0098                     	;# 
  1094  0099                     	;# 
  1095  009A                     	;# 
  1096  009B                     	;# 
  1097  009B                     	;# 
  1098  009C                     	;# 
  1099  009D                     	;# 
  1100  009E                     	;# 
  1101  010C                     	;# 
  1102  010D                     	;# 
  1103  0111                     	;# 
  1104  0112                     	;# 
  1105  0113                     	;# 
  1106  0114                     	;# 
  1107  0115                     	;# 
  1108  0116                     	;# 
  1109  0117                     	;# 
  1110  0118                     	;# 
  1111  0119                     	;# 
  1112  011A                     	;# 
  1113  011B                     	;# 
  1114  011D                     	;# 
  1115  011E                     	;# 
  1116  018C                     	;# 
  1117  018D                     	;# 
  1118  0191                     	;# 
  1119  0191                     	;# 
  1120  0192                     	;# 
  1121  0193                     	;# 
  1122  0193                     	;# 
  1123  0193                     	;# 
  1124  0194                     	;# 
  1125  0195                     	;# 
  1126  0196                     	;# 
  1127  0199                     	;# 
  1128  019A                     	;# 
  1129  019B                     	;# 
  1130  019B                     	;# 
  1131  019B                     	;# 
  1132  019B                     	;# 
  1133  019C                     	;# 
  1134  019C                     	;# 
  1135  019D                     	;# 
  1136  019E                     	;# 
  1137  019F                     	;# 
  1138  020C                     	;# 
  1139  020D                     	;# 
  1140  0211                     	;# 
  1141  0211                     	;# 
  1142  0212                     	;# 
  1143  0212                     	;# 
  1144  0213                     	;# 
  1145  0213                     	;# 
  1146  0214                     	;# 
  1147  0214                     	;# 
  1148  0215                     	;# 
  1149  0215                     	;# 
  1150  0215                     	;# 
  1151  0216                     	;# 
  1152  0216                     	;# 
  1153  0217                     	;# 
  1154  0217                     	;# 
  1155  0219                     	;# 
  1156  021A                     	;# 
  1157  021B                     	;# 
  1158  021C                     	;# 
  1159  021D                     	;# 
  1160  021E                     	;# 
  1161  021F                     	;# 
  1162  0291                     	;# 
  1163  0291                     	;# 
  1164  0292                     	;# 
  1165  0293                     	;# 
  1166  0294                     	;# 
  1167  0295                     	;# 
  1168  0295                     	;# 
  1169  0296                     	;# 
  1170  0298                     	;# 
  1171  0298                     	;# 
  1172  0299                     	;# 
  1173  029A                     	;# 
  1174  029B                     	;# 
  1175  029C                     	;# 
  1176  029C                     	;# 
  1177  029D                     	;# 
  1178  029E                     	;# 
  1179  029E                     	;# 
  1180  0311                     	;# 
  1181  0311                     	;# 
  1182  0312                     	;# 
  1183  0313                     	;# 
  1184  0318                     	;# 
  1185  0318                     	;# 
  1186  0319                     	;# 
  1187  031A                     	;# 
  1188  0394                     	;# 
  1189  0395                     	;# 
  1190  0396                     	;# 
  1191  039A                     	;# 
  1192  039C                     	;# 
  1193  039D                     	;# 
  1194  039E                     	;# 
  1195  039F                     	;# 
  1196  0415                     	;# 
  1197  0416                     	;# 
  1198  0417                     	;# 
  1199  041C                     	;# 
  1200  041D                     	;# 
  1201  041E                     	;# 
  1202  0FE4                     	;# 
  1203  0FE5                     	;# 
  1204  0FE6                     	;# 
  1205  0FE7                     	;# 
  1206  0FE8                     	;# 
  1207  0FE9                     	;# 
  1208  0FEA                     	;# 
  1209  0FEB                     	;# 
  1210  0FED                     	;# 
  1211  0FEE                     	;# 
  1212  0FEF                     	;# 
  1213  0000                     	;# 
  1214  0001                     	;# 
  1215  0002                     	;# 
  1216  0003                     	;# 
  1217  0004                     	;# 
  1218  0005                     	;# 
  1219  0006                     	;# 
  1220  0007                     	;# 
  1221  0008                     	;# 
  1222  0009                     	;# 
  1223  000A                     	;# 
  1224  000B                     	;# 
  1225  000C                     	;# 
  1226  000D                     	;# 
  1227  0011                     	;# 
  1228  0012                     	;# 
  1229  0013                     	;# 
  1230  0014                     	;# 
  1231  0015                     	;# 
  1232  0016                     	;# 
  1233  0016                     	;# 
  1234  0017                     	;# 
  1235  0018                     	;# 
  1236  0019                     	;# 
  1237  001A                     	;# 
  1238  001B                     	;# 
  1239  001C                     	;# 
  1240  001E                     	;# 
  1241  001F                     	;# 
  1242  008C                     	;# 
  1243  008D                     	;# 
  1244  0091                     	;# 
  1245  0092                     	;# 
  1246  0093                     	;# 
  1247  0094                     	;# 
  1248  0095                     	;# 
  1249  0096                     	;# 
  1250  0097                     	;# 
  1251  0098                     	;# 
  1252  0099                     	;# 
  1253  009A                     	;# 
  1254  009B                     	;# 
  1255  009B                     	;# 
  1256  009C                     	;# 
  1257  009D                     	;# 
  1258  009E                     	;# 
  1259  010C                     	;# 
  1260  010D                     	;# 
  1261  0111                     	;# 
  1262  0112                     	;# 
  1263  0113                     	;# 
  1264  0114                     	;# 
  1265  0115                     	;# 
  1266  0116                     	;# 
  1267  0117                     	;# 
  1268  0118                     	;# 
  1269  0119                     	;# 
  1270  011A                     	;# 
  1271  011B                     	;# 
  1272  011D                     	;# 
  1273  011E                     	;# 
  1274  018C                     	;# 
  1275  018D                     	;# 
  1276  0191                     	;# 
  1277  0191                     	;# 
  1278  0192                     	;# 
  1279  0193                     	;# 
  1280  0193                     	;# 
  1281  0193                     	;# 
  1282  0194                     	;# 
  1283  0195                     	;# 
  1284  0196                     	;# 
  1285  0199                     	;# 
  1286  019A                     	;# 
  1287  019B                     	;# 
  1288  019B                     	;# 
  1289  019B                     	;# 
  1290  019B                     	;# 
  1291  019C                     	;# 
  1292  019C                     	;# 
  1293  019D                     	;# 
  1294  019E                     	;# 
  1295  019F                     	;# 
  1296  020C                     	;# 
  1297  020D                     	;# 
  1298  0211                     	;# 
  1299  0211                     	;# 
  1300  0212                     	;# 
  1301  0212                     	;# 
  1302  0213                     	;# 
  1303  0213                     	;# 
  1304  0214                     	;# 
  1305  0214                     	;# 
  1306  0215                     	;# 
  1307  0215                     	;# 
  1308  0215                     	;# 
  1309  0216                     	;# 
  1310  0216                     	;# 
  1311  0217                     	;# 
  1312  0217                     	;# 
  1313  0219                     	;# 
  1314  021A                     	;# 
  1315  021B                     	;# 
  1316  021C                     	;# 
  1317  021D                     	;# 
  1318  021E                     	;# 
  1319  021F                     	;# 
  1320  0291                     	;# 
  1321  0291                     	;# 
  1322  0292                     	;# 
  1323  0293                     	;# 
  1324  0294                     	;# 
  1325  0295                     	;# 
  1326  0295                     	;# 
  1327  0296                     	;# 
  1328  0298                     	;# 
  1329  0298                     	;# 
  1330  0299                     	;# 
  1331  029A                     	;# 
  1332  029B                     	;# 
  1333  029C                     	;# 
  1334  029C                     	;# 
  1335  029D                     	;# 
  1336  029E                     	;# 
  1337  029E                     	;# 
  1338  0311                     	;# 
  1339  0311                     	;# 
  1340  0312                     	;# 
  1341  0313                     	;# 
  1342  0318                     	;# 
  1343  0318                     	;# 
  1344  0319                     	;# 
  1345  031A                     	;# 
  1346  0394                     	;# 
  1347  0395                     	;# 
  1348  0396                     	;# 
  1349  039A                     	;# 
  1350  039C                     	;# 
  1351  039D                     	;# 
  1352  039E                     	;# 
  1353  039F                     	;# 
  1354  0415                     	;# 
  1355  0416                     	;# 
  1356  0417                     	;# 
  1357  041C                     	;# 
  1358  041D                     	;# 
  1359  041E                     	;# 
  1360  0FE4                     	;# 
  1361  0FE5                     	;# 
  1362  0FE6                     	;# 
  1363  0FE7                     	;# 
  1364  0FE8                     	;# 
  1365  0FE9                     	;# 
  1366  0FEA                     	;# 
  1367  0FEB                     	;# 
  1368  0FED                     	;# 
  1369  0FEE                     	;# 
  1370  0FEF                     	;# 
  1371  0000                     	;# 
  1372  0001                     	;# 
  1373  0002                     	;# 
  1374  0003                     	;# 
  1375  0004                     	;# 
  1376  0005                     	;# 
  1377  0006                     	;# 
  1378  0007                     	;# 
  1379  0008                     	;# 
  1380  0009                     	;# 
  1381  000A                     	;# 
  1382  000B                     	;# 
  1383  000C                     	;# 
  1384  000D                     	;# 
  1385  0011                     	;# 
  1386  0012                     	;# 
  1387  0013                     	;# 
  1388  0014                     	;# 
  1389  0015                     	;# 
  1390  0016                     	;# 
  1391  0016                     	;# 
  1392  0017                     	;# 
  1393  0018                     	;# 
  1394  0019                     	;# 
  1395  001A                     	;# 
  1396  001B                     	;# 
  1397  001C                     	;# 
  1398  001E                     	;# 
  1399  001F                     	;# 
  1400  008C                     	;# 
  1401  008D                     	;# 
  1402  0091                     	;# 
  1403  0092                     	;# 
  1404  0093                     	;# 
  1405  0094                     	;# 
  1406  0095                     	;# 
  1407  0096                     	;# 
  1408  0097                     	;# 
  1409  0098                     	;# 
  1410  0099                     	;# 
  1411  009A                     	;# 
  1412  009B                     	;# 
  1413  009B                     	;# 
  1414  009C                     	;# 
  1415  009D                     	;# 
  1416  009E                     	;# 
  1417  010C                     	;# 
  1418  010D                     	;# 
  1419  0111                     	;# 
  1420  0112                     	;# 
  1421  0113                     	;# 
  1422  0114                     	;# 
  1423  0115                     	;# 
  1424  0116                     	;# 
  1425  0117                     	;# 
  1426  0118                     	;# 
  1427  0119                     	;# 
  1428  011A                     	;# 
  1429  011B                     	;# 
  1430  011D                     	;# 
  1431  011E                     	;# 
  1432  018C                     	;# 
  1433  018D                     	;# 
  1434  0191                     	;# 
  1435  0191                     	;# 
  1436  0192                     	;# 
  1437  0193                     	;# 
  1438  0193                     	;# 
  1439  0193                     	;# 
  1440  0194                     	;# 
  1441  0195                     	;# 
  1442  0196                     	;# 
  1443  0199                     	;# 
  1444  019A                     	;# 
  1445  019B                     	;# 
  1446  019B                     	;# 
  1447  019B                     	;# 
  1448  019B                     	;# 
  1449  019C                     	;# 
  1450  019C                     	;# 
  1451  019D                     	;# 
  1452  019E                     	;# 
  1453  019F                     	;# 
  1454  020C                     	;# 
  1455  020D                     	;# 
  1456  0211                     	;# 
  1457  0211                     	;# 
  1458  0212                     	;# 
  1459  0212                     	;# 
  1460  0213                     	;# 
  1461  0213                     	;# 
  1462  0214                     	;# 
  1463  0214                     	;# 
  1464  0215                     	;# 
  1465  0215                     	;# 
  1466  0215                     	;# 
  1467  0216                     	;# 
  1468  0216                     	;# 
  1469  0217                     	;# 
  1470  0217                     	;# 
  1471  0219                     	;# 
  1472  021A                     	;# 
  1473  021B                     	;# 
  1474  021C                     	;# 
  1475  021D                     	;# 
  1476  021E                     	;# 
  1477  021F                     	;# 
  1478  0291                     	;# 
  1479  0291                     	;# 
  1480  0292                     	;# 
  1481  0293                     	;# 
  1482  0294                     	;# 
  1483  0295                     	;# 
  1484  0295                     	;# 
  1485  0296                     	;# 
  1486  0298                     	;# 
  1487  0298                     	;# 
  1488  0299                     	;# 
  1489  029A                     	;# 
  1490  029B                     	;# 
  1491  029C                     	;# 
  1492  029C                     	;# 
  1493  029D                     	;# 
  1494  029E                     	;# 
  1495  029E                     	;# 
  1496  0311                     	;# 
  1497  0311                     	;# 
  1498  0312                     	;# 
  1499  0313                     	;# 
  1500  0318                     	;# 
  1501  0318                     	;# 
  1502  0319                     	;# 
  1503  031A                     	;# 
  1504  0394                     	;# 
  1505  0395                     	;# 
  1506  0396                     	;# 
  1507  039A                     	;# 
  1508  039C                     	;# 
  1509  039D                     	;# 
  1510  039E                     	;# 
  1511  039F                     	;# 
  1512  0415                     	;# 
  1513  0416                     	;# 
  1514  0417                     	;# 
  1515  041C                     	;# 
  1516  041D                     	;# 
  1517  041E                     	;# 
  1518  0FE4                     	;# 
  1519  0FE5                     	;# 
  1520  0FE6                     	;# 
  1521  0FE7                     	;# 
  1522  0FE8                     	;# 
  1523  0FE9                     	;# 
  1524  0FEA                     	;# 
  1525  0FEB                     	;# 
  1526  0FED                     	;# 
  1527  0FEE                     	;# 
  1528  0FEF                     	;# 
  1529  0000                     	;# 
  1530  0001                     	;# 
  1531  0002                     	;# 
  1532  0003                     	;# 
  1533  0004                     	;# 
  1534  0005                     	;# 
  1535  0006                     	;# 
  1536  0007                     	;# 
  1537  0008                     	;# 
  1538  0009                     	;# 
  1539  000A                     	;# 
  1540  000B                     	;# 
  1541  000C                     	;# 
  1542  000D                     	;# 
  1543  0011                     	;# 
  1544  0012                     	;# 
  1545  0013                     	;# 
  1546  0014                     	;# 
  1547  0015                     	;# 
  1548  0016                     	;# 
  1549  0016                     	;# 
  1550  0017                     	;# 
  1551  0018                     	;# 
  1552  0019                     	;# 
  1553  001A                     	;# 
  1554  001B                     	;# 
  1555  001C                     	;# 
  1556  001E                     	;# 
  1557  001F                     	;# 
  1558  008C                     	;# 
  1559  008D                     	;# 
  1560  0091                     	;# 
  1561  0092                     	;# 
  1562  0093                     	;# 
  1563  0094                     	;# 
  1564  0095                     	;# 
  1565  0096                     	;# 
  1566  0097                     	;# 
  1567  0098                     	;# 
  1568  0099                     	;# 
  1569  009A                     	;# 
  1570  009B                     	;# 
  1571  009B                     	;# 
  1572  009C                     	;# 
  1573  009D                     	;# 
  1574  009E                     	;# 
  1575  010C                     	;# 
  1576  010D                     	;# 
  1577  0111                     	;# 
  1578  0112                     	;# 
  1579  0113                     	;# 
  1580  0114                     	;# 
  1581  0115                     	;# 
  1582  0116                     	;# 
  1583  0117                     	;# 
  1584  0118                     	;# 
  1585  0119                     	;# 
  1586  011A                     	;# 
  1587  011B                     	;# 
  1588  011D                     	;# 
  1589  011E                     	;# 
  1590  018C                     	;# 
  1591  018D                     	;# 
  1592  0191                     	;# 
  1593  0191                     	;# 
  1594  0192                     	;# 
  1595  0193                     	;# 
  1596  0193                     	;# 
  1597  0193                     	;# 
  1598  0194                     	;# 
  1599  0195                     	;# 
  1600  0196                     	;# 
  1601  0199                     	;# 
  1602  019A                     	;# 
  1603  019B                     	;# 
  1604  019B                     	;# 
  1605  019B                     	;# 
  1606  019B                     	;# 
  1607  019C                     	;# 
  1608  019C                     	;# 
  1609  019D                     	;# 
  1610  019E                     	;# 
  1611  019F                     	;# 
  1612  020C                     	;# 
  1613  020D                     	;# 
  1614  0211                     	;# 
  1615  0211                     	;# 
  1616  0212                     	;# 
  1617  0212                     	;# 
  1618  0213                     	;# 
  1619  0213                     	;# 
  1620  0214                     	;# 
  1621  0214                     	;# 
  1622  0215                     	;# 
  1623  0215                     	;# 
  1624  0215                     	;# 
  1625  0216                     	;# 
  1626  0216                     	;# 
  1627  0217                     	;# 
  1628  0217                     	;# 
  1629  0219                     	;# 
  1630  021A                     	;# 
  1631  021B                     	;# 
  1632  021C                     	;# 
  1633  021D                     	;# 
  1634  021E                     	;# 
  1635  021F                     	;# 
  1636  0291                     	;# 
  1637  0291                     	;# 
  1638  0292                     	;# 
  1639  0293                     	;# 
  1640  0294                     	;# 
  1641  0295                     	;# 
  1642  0295                     	;# 
  1643  0296                     	;# 
  1644  0298                     	;# 
  1645  0298                     	;# 
  1646  0299                     	;# 
  1647  029A                     	;# 
  1648  029B                     	;# 
  1649  029C                     	;# 
  1650  029C                     	;# 
  1651  029D                     	;# 
  1652  029E                     	;# 
  1653  029E                     	;# 
  1654  0311                     	;# 
  1655  0311                     	;# 
  1656  0312                     	;# 
  1657  0313                     	;# 
  1658  0318                     	;# 
  1659  0318                     	;# 
  1660  0319                     	;# 
  1661  031A                     	;# 
  1662  0394                     	;# 
  1663  0395                     	;# 
  1664  0396                     	;# 
  1665  039A                     	;# 
  1666  039C                     	;# 
  1667  039D                     	;# 
  1668  039E                     	;# 
  1669  039F                     	;# 
  1670  0415                     	;# 
  1671  0416                     	;# 
  1672  0417                     	;# 
  1673  041C                     	;# 
  1674  041D                     	;# 
  1675  041E                     	;# 
  1676  0FE4                     	;# 
  1677  0FE5                     	;# 
  1678  0FE6                     	;# 
  1679  0FE7                     	;# 
  1680  0FE8                     	;# 
  1681  0FE9                     	;# 
  1682  0FEA                     	;# 
  1683  0FEB                     	;# 
  1684  0FED                     	;# 
  1685  0FEE                     	;# 
  1686  0FEF                     	;_rxB
  1687                           
  1688 ;; Function _spi1_close is unused but had its address taken
  1689  0000                     
  1690 ;; Function _spi1_exchangeBlock is unused but had its address taken
  1691  0000                     
  1692 ;; Function _spi1_writeBlock is unused but had its address taken
  1693  0000                     
  1694 ;; Function _spi1_readBlock is unused but had its address taken
  1695  0000                     
  1696 ;; Function _spi1_writeByte is unused but had its address taken
  1697  0000                     
  1698 ;; Function _spi1_readByte is unused but had its address taken
  1699  0000                     
  1700 ;; Function _spi1_setSpiISR is unused but had its address taken
  1701  0000                     
  1702                           	psect	idataBANK0
  1703  0526                     __pidataBANK0:	
  1704                           
  1705                           ;initializer for _BlinkCounterOff
  1706  0526  3409               	retlw	9
  1707                           
  1708                           ;initializer for _BlinkCounterOn
  1709  0527  3401               	retlw	1
  1710                           
  1711                           ;initializer for _TMR4_INTERRUPT_TICKER_FACTOR
  1712  0528  3402               	retlw	2
  1713                           
  1714                           	psect	stringtext1
  1715  03A7                     __pstringtext1:	
  1716  03A7                     _spiMaster:	
  1717  03A7  3400               	retlw	0
  1718  03A8  3400               	retlw	0
  1719  03A9  341A               	retlw	low _MASTER_open
  1720  03AA  3405               	retlw	high _MASTER_open
  1721  03AB  3414               	retlw	low _spi1_exchangeByte
  1722  03AC  3404               	retlw	high _spi1_exchangeByte
  1723  03AD  3400               	retlw	0
  1724  03AE  3400               	retlw	0
  1725  03AF  3400               	retlw	0
  1726  03B0  3400               	retlw	0
  1727  03B1  3400               	retlw	0
  1728  03B2  3400               	retlw	0
  1729  03B3  3400               	retlw	0
  1730  03B4  3400               	retlw	0
  1731  03B5  3400               	retlw	0
  1732  03B6  3400               	retlw	0
  1733  03B7  3400               	retlw	0
  1734  03B8  3400               	retlw	0
  1735  03B9  3415               	retlw	low _spi1_isr
  1736  03BA  3405               	retlw	high _spi1_isr
  1737  03BB                     __end_of_spiMaster:	
  1738                           
  1739                           	psect	stringtext2
  1740  04DB                     __pstringtext2:	
  1741  04DB                     _spi1_configuration:	
  1742  04DB  340A               	retlw	10
  1743  04DC  3440               	retlw	64
  1744  04DD  3427               	retlw	39
  1745  04DE  3400               	retlw	0
  1746  04DF  340A               	retlw	10
  1747  04E0  3440               	retlw	64
  1748  04E1  3427               	retlw	39
  1749  04E2  3400               	retlw	0
  1750  04E3                     __end_of_spi1_configuration:	
  1751                           
  1752                           	psect	stringtext3
  1753  052C                     __pstringtext3:	
  1754  052C                     _TurnOffTimeout:	
  1755  052C  34B4               	retlw	180
  1756  052D                     __end_of_TurnOffTimeout:	
  1757                           
  1758                           	psect	nvBANK0
  1759  0037                     __pnvBANK0:	
  1760  0037                     _IOCBF5_InterruptHandler:	
  1761  0037                     	ds	2
  1762  0039                     _IOCBF3_InterruptHandler:	
  1763  0039                     	ds	2
  1764  003B                     _IOCBF0_InterruptHandler:	
  1765  003B                     	ds	2
  1766  003D                     _TMR2_InterruptHandler:	
  1767  003D                     	ds	2
  1768  000C                     _PORTAbits	set	12
  1769  000D                     _PORTBbits	set	13
  1770  000B                     _INTCONbits	set	11
  1771  001C                     _T2CONbits	set	28
  1772  001C                     _T2CON	set	28
  1773  0011                     _PIR1bits	set	17
  1774  001A                     _TMR2	set	26
  1775  001B                     _PR2	set	27
  1776  008D                     _TRISBbits	set	141
  1777  0095                     _OPTION_REGbits	set	149
  1778  008D                     _TRISB	set	141
  1779  008C                     _TRISA	set	140
  1780  0097                     _WDTCON	set	151
  1781  0098                     _OSCTUNE	set	152
  1782  0099                     _OSCCON	set	153
  1783  009D                     _ADCON0bits	set	157
  1784  009C                     _ADRESH	set	156
  1785  009B                     _ADRESL	set	155
  1786  009E                     _ADCON1	set	158
  1787  009D                     _ADCON0	set	157
  1788  0091                     _PIE1bits	set	145
  1789  011E                     _APFCON1	set	286
  1790  011D                     _APFCON0	set	285
  1791  010D                     _LATB	set	269
  1792  010C                     _LATA	set	268
  1793  0116                     _BORCON	set	278
  1794  010C                     _LATAbits	set	268
  1795  018D                     _ANSELBbits	set	397
  1796  0196                     _EECON2	set	406
  1797  0193                     _EEDATL	set	403
  1798  0194                     _EEDATH	set	404
  1799  0195                     _EECON1bits	set	405
  1800  0192                     _EEADRH	set	402
  1801  0191                     _EEADRL	set	401
  1802  018C                     _ANSELA	set	396
  1803  018D                     _ANSELB	set	397
  1804  0211                     _SSP1BUF	set	529
  1805  0212                     _SSP1ADD	set	530
  1806  0216                     _SSP1CON2	set	534
  1807  0215                     _SSP1CON1	set	533
  1808  0214                     _SSP1STAT	set	532
  1809  0215                     _SSP1CON1bits	set	533
  1810  020C                     _WPUA	set	524
  1811  020D                     _WPUB	set	525
  1812  0394                     _IOCBPbits	set	916
  1813  0395                     _IOCBNbits	set	917
  1814  0396                     _IOCBFbits	set	918
  1815                           
  1816                           ; #config settings
  1817  0000                     
  1818                           	psect	cinit
  1819  002F                     start_initialization:	
  1820  002F                     __initialization:		;BIGRAM
  1821                           
  1822                           ; Initialize objects allocated to BANK0
  1823  002F  3185  2526  3180   	fcall	__pidataBANK0	;fetch initializer
  1824  0032  00C7               	movwf	__pdataBANK0& (0+127)
  1825  0033  3185  2527  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1826  0036  00C8               	movwf	(__pdataBANK0+1)& (0+127)
  1827  0037  3185  2528  3180   	fcall	__pidataBANK0+2	;fetch initializer
  1828  003A  00C9               	movwf	(__pdataBANK0+2)& (0+127)
  1829                           
  1830                           ; Clear objects allocated to BIGRAM
  1831  003B  3070               	movlw	low (0+8304)
  1832  003C  0084               	movwf	4
  1833  003D  3020               	movlw	high (0+8304)
  1834  003E  0085               	movwf	5
  1835  003F  3000               	movlw	0
  1836  0040  00FE               	movwf	btemp
  1837  0041  3001               	movlw	1
  1838  0042  00FF               	movwf	btemp+1
  1839  0043  3184  249E         	fcall	clear_ram0
  1840                           
  1841                           ; Clear objects allocated to COMMON
  1842  0045  01FD               	clrf	__pbssCOMMON& (0+127)
  1843                           
  1844                           ; Clear objects allocated to BANK0
  1845  0046  01BF               	clrf	__pbssBANK0& (0+127)
  1846  0047  01C0               	clrf	(__pbssBANK0+1)& (0+127)
  1847  0048  01C1               	clrf	(__pbssBANK0+2)& (0+127)
  1848  0049  01C2               	clrf	(__pbssBANK0+3)& (0+127)
  1849  004A  01C3               	clrf	(__pbssBANK0+4)& (0+127)
  1850  004B  01C4               	clrf	(__pbssBANK0+5)& (0+127)
  1851  004C  01C5               	clrf	(__pbssBANK0+6)& (0+127)
  1852  004D  01C6               	clrf	(__pbssBANK0+7)& (0+127)
  1853  004E                     end_of_initialization:	
  1854                           ;End of C runtime variable initialization code
  1855                           
  1856  004E                     __end_of__initialization:	
  1857  004E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1858  004F  0020               	movlb	0
  1859  0050  3180  2852         	ljmp	_main	;jump to C main() function
  1860                           
  1861                           	psect	bssCOMMON
  1862  007D                     __pbssCOMMON:	
  1863  007D                     _rxC:	
  1864  007D                     	ds	1
  1865                           
  1866                           	psect	bssBANK0
  1867  003F                     __pbssBANK0:	
  1868  003F                     _spi1_interruptHandler:	
  1869  003F                     	ds	2
  1870  0041                     TMR2_ISR@CountCallBack:	
  1871  0041                     	ds	2
  1872  0043                     _BlinkCounter:	
  1873  0043                     	ds	1
  1874  0044                     _TimeoutCounter:	
  1875  0044                     	ds	1
  1876  0045                     _LedState:	
  1877  0045                     	ds	1
  1878  0046                     _TMR4_INT_FLAG:	
  1879  0046                     	ds	1
  1880                           
  1881                           	psect	dataBANK0
  1882  0047                     __pdataBANK0:	
  1883  0047                     _BlinkCounterOff:	
  1884  0047                     	ds	1
  1885  0048                     _BlinkCounterOn:	
  1886  0048                     	ds	1
  1887  0049                     _TMR4_INTERRUPT_TICKER_FACTOR:	
  1888  0049                     	ds	1
  1889                           
  1890                           	psect	clrtext
  1891  049E                     clear_ram0:	
  1892                           ;	Called with FSR0 containing the base address, and
  1893                           ;	btemp/btemp+1 has the size to clear
  1894                           
  1895  049E  0064               	clrwdt	;clear the watchdog before getting into this loop
  1896  049F                     clrloop0:	
  1897  049F  0180               	clrf	0	;clear RAM location pointed to by FSR
  1898  04A0  3101               	addfsr 0,1
  1899  04A1  3001               	movlw	1
  1900  04A2  02FE               	subwf	126,f
  1901  04A3  3000               	movlw	0
  1902  04A4  3BFF               	subwfb	127,f
  1903  04A5  087F               	movf	127,w
  1904  04A6  047E               	iorwf	126,w
  1905  04A7  1903               	btfsc	3,2
  1906  04A8  3400               	retlw	0	;all done for this memory range, return
  1907  04A9  2C9F               	goto	clrloop0	;have we reached the end yet?
  1908                           
  1909                           	psect	cstackCOMMON
  1910  0070                     __pcstackCOMMON:	
  1911  0070                     ?_MASTER_open:	
  1912  0070                     ?_spi1_isr:	
  1913                           ; 1 bytes @ 0x0
  1914                           
  1915  0070                     ??_spi1_isr:	
  1916                           ; 1 bytes @ 0x0
  1917                           
  1918  0070                     ?_spi1_open:	
  1919                           ; 1 bytes @ 0x0
  1920                           
  1921  0070                     ?_TMR2_DefaultInterruptHandler:	
  1922                           ; 1 bytes @ 0x0
  1923                           
  1924  0070                     ??_TMR2_DefaultInterruptHandler:	
  1925                           ; 1 bytes @ 0x0
  1926                           
  1927  0070                     ?_TMR2_CallBack:	
  1928                           ; 1 bytes @ 0x0
  1929                           
  1930  0070                     ??_TMR2_CallBack:	
  1931                           ; 1 bytes @ 0x0
  1932                           
  1933  0070                     ?_PIN_MANAGER_IOC:	
  1934                           ; 1 bytes @ 0x0
  1935                           
  1936  0070                     ?_PIN_MANAGER_Initialize:	
  1937                           ; 1 bytes @ 0x0
  1938                           
  1939  0070                     ?_OSCILLATOR_Initialize:	
  1940                           ; 1 bytes @ 0x0
  1941                           
  1942  0070                     ?_WDT_Initialize:	
  1943                           ; 1 bytes @ 0x0
  1944                           
  1945  0070                     ?_IOCBF0_DefaultInterruptHandler:	
  1946                           ; 1 bytes @ 0x0
  1947                           
  1948  0070                     ??_IOCBF0_DefaultInterruptHandler:	
  1949                           ; 1 bytes @ 0x0
  1950                           
  1951  0070                     ?_IOCBF3_DefaultInterruptHandler:	
  1952                           ; 1 bytes @ 0x0
  1953                           
  1954  0070                     ??_IOCBF3_DefaultInterruptHandler:	
  1955                           ; 1 bytes @ 0x0
  1956                           
  1957  0070                     ?_IOCBF5_DefaultInterruptHandler:	
  1958                           ; 1 bytes @ 0x0
  1959                           
  1960  0070                     ??_IOCBF5_DefaultInterruptHandler:	
  1961                           ; 1 bytes @ 0x0
  1962                           
  1963  0070                     ?_IOCBF0_ISR:	
  1964                           ; 1 bytes @ 0x0
  1965                           
  1966  0070                     ?_IOCBF3_ISR:	
  1967                           ; 1 bytes @ 0x0
  1968                           
  1969  0070                     ??_IOCBF3_ISR:	
  1970                           ; 1 bytes @ 0x0
  1971                           
  1972  0070                     ?_IOCBF5_ISR:	
  1973                           ; 1 bytes @ 0x0
  1974                           
  1975  0070                     ??_IOCBF5_ISR:	
  1976                           ; 1 bytes @ 0x0
  1977                           
  1978  0070                     ?_MRF89XA_ReadFifo:	
  1979                           ; 1 bytes @ 0x0
  1980                           
  1981  0070                     ?_MRF89XA_IsFifoEmpty:	
  1982                           ; 1 bytes @ 0x0
  1983                           
  1984  0070                     ?_MRF89XA_SetMode:	
  1985                           ; 1 bytes @ 0x0
  1986                           
  1987  0070                     ?_MRF89XA_SetModulation:	
  1988                           ; 1 bytes @ 0x0
  1989                           
  1990  0070                     ?_MRF89XA_ExchangeFifo:	
  1991                           ; 1 bytes @ 0x0
  1992                           
  1993  0070                     ?_spi_master_open:	
  1994                           ; 1 bytes @ 0x0
  1995                           
  1996  0070                     ?_TMR2_Initialize:	
  1997                           ; 1 bytes @ 0x0
  1998                           
  1999  0070                     ?_TMR2_ISR:	
  2000                           ; 1 bytes @ 0x0
  2001                           
  2002  0070                     ??_TMR2_ISR:	
  2003                           ; 1 bytes @ 0x0
  2004                           
  2005  0070                     ?_ADC_Initialize:	
  2006                           ; 1 bytes @ 0x0
  2007                           
  2008  0070                     ?_ADC_ISR:	
  2009                           ; 1 bytes @ 0x0
  2010                           
  2011  0070                     ??_ADC_ISR:	
  2012                           ; 1 bytes @ 0x0
  2013                           
  2014  0070                     ?_INTERRUPT_InterruptManager:	
  2015                           ; 1 bytes @ 0x0
  2016                           
  2017  0070                     ?_SYSTEM_Initialize:	
  2018                           ; 1 bytes @ 0x0
  2019                           
  2020  0070                     ?_POWER_LED_ON:	
  2021                           ; 1 bytes @ 0x0
  2022                           
  2023  0070                     ?_POWER_LED_OFF:	
  2024                           ; 1 bytes @ 0x0
  2025                           
  2026  0070                     ?_POWER_LED_TOGGLE:	
  2027                           ; 1 bytes @ 0x0
  2028                           
  2029  0070                     ?_ReadFifo:	
  2030                           ; 1 bytes @ 0x0
  2031                           
  2032  0070                     ?_IRQ0_ISR:	
  2033                           ; 1 bytes @ 0x0
  2034                           
  2035  0070                     ?_main:	
  2036                           ; 1 bytes @ 0x0
  2037                           
  2038  0070                     ?_MRF89XA_SPI_ExchangeByte:	
  2039                           ; 1 bytes @ 0x0
  2040                           
  2041  0070                     ?_MRF89XA_ReadConfig:	
  2042                           ; 1 bytes @ 0x0
  2043                           
  2044  0070                     ?i1_spi1_exchangeByte:	
  2045                           ; 1 bytes @ 0x0
  2046                           
  2047  0070                     ?i1_Delay_Xms:	
  2048                           ; 1 bytes @ 0x0
  2049                           
  2050  0070                     ?i1_MRF89XA_SPI_ExchangeByte:	
  2051                           ; 1 bytes @ 0x0
  2052                           
  2053  0070                     ?i1_MRF89XA_GetAddress:	
  2054                           ; 1 bytes @ 0x0
  2055                           
  2056  0070                     i1spi1_exchangeByte@b:	
  2057                           ; 1 bytes @ 0x0
  2058                           
  2059  0070                     i1MRF89XA_GetAddress@Read:	
  2060                           ; 1 bytes @ 0x0
  2061                           
  2062  0070                     i1Delay_Xms@delay:	
  2063                           ; 1 bytes @ 0x0
  2064                           
  2065                           
  2066                           ; 4 bytes @ 0x0
  2067  0070                     	ds	1
  2068  0071                     ??i1_spi1_exchangeByte:	
  2069  0071                     ??i1_MRF89XA_SPI_ExchangeByte:	
  2070                           ; 1 bytes @ 0x1
  2071                           
  2072  0071                     ??i1_MRF89XA_GetAddress:	
  2073                           ; 1 bytes @ 0x1
  2074                           
  2075                           
  2076                           ; 1 bytes @ 0x1
  2077  0071                     	ds	1
  2078  0072                     i1MRF89XA_SPI_ExchangeByte@byte:	
  2079  0072                     i1MRF89XA_GetAddress@Address:	
  2080                           ; 1 bytes @ 0x2
  2081                           
  2082                           
  2083                           ; 1 bytes @ 0x2
  2084  0072                     	ds	1
  2085  0073                     ??_MRF89XA_ExchangeFifo:	
  2086  0073                     i1MRF89XA_GetAddress@ret:	
  2087                           ; 1 bytes @ 0x3
  2088                           
  2089                           
  2090                           ; 1 bytes @ 0x3
  2091  0073                     	ds	1
  2092  0074                     ??i1_Delay_Xms:	
  2093  0074                     ?i1_MRF89XA_ExchangeConfig_A:	
  2094                           ; 1 bytes @ 0x4
  2095                           
  2096  0074                     MRF89XA_ExchangeFifo@Data:	
  2097                           ; 1 bytes @ 0x4
  2098                           
  2099  0074                     i1MRF89XA_ExchangeConfig_A@Data:	
  2100                           ; 1 bytes @ 0x4
  2101                           
  2102                           
  2103                           ; 1 bytes @ 0x4
  2104  0074                     	ds	1
  2105  0075                     ??i1_MRF89XA_ExchangeConfig_A:	
  2106  0075                     MRF89XA_ExchangeFifo@ret:	
  2107                           ; 1 bytes @ 0x5
  2108                           
  2109  0075                     i1Delay_Xms@i:	
  2110                           ; 1 bytes @ 0x5
  2111                           
  2112                           
  2113                           ; 4 bytes @ 0x5
  2114  0075                     	ds	1
  2115  0076                     ??_MRF89XA_ReadFifo:	
  2116  0076                     ??_ReadFifo:	
  2117                           ; 1 bytes @ 0x6
  2118                           
  2119  0076                     i1MRF89XA_ExchangeConfig_A@Address:	
  2120                           ; 1 bytes @ 0x6
  2121                           
  2122                           
  2123                           ; 1 bytes @ 0x6
  2124  0076                     	ds	1
  2125  0077                     i1MRF89XA_ExchangeConfig_A@ret:	
  2126                           
  2127                           ; 1 bytes @ 0x7
  2128  0077                     	ds	1
  2129  0078                     ??_MRF89XA_ReadConfig:	
  2130  0078                     ReadFifo@res:	
  2131                           ; 1 bytes @ 0x8
  2132                           
  2133                           
  2134                           ; 1 bytes @ 0x8
  2135  0078                     	ds	1
  2136  0079                     MRF89XA_ReadConfig@Address:	
  2137                           
  2138                           ; 1 bytes @ 0x9
  2139  0079                     	ds	1
  2140  007A                     ??_MRF89XA_IsFifoEmpty:	
  2141                           
  2142                           ; 1 bytes @ 0xA
  2143  007A                     	ds	1
  2144  007B                     MRF89XA_IsFifoEmpty@reg:	
  2145                           
  2146                           ; 1 bytes @ 0xB
  2147  007B                     	ds	1
  2148  007C                     ??_IRQ0_ISR:	
  2149                           
  2150                           ; 1 bytes @ 0xC
  2151  007C                     	ds	1
  2152  007D                     ??_PIN_MANAGER_IOC:	
  2153  007D                     ??_IOCBF0_ISR:	
  2154                           ; 1 bytes @ 0xD
  2155                           
  2156  007D                     ??_INTERRUPT_InterruptManager:	
  2157                           ; 1 bytes @ 0xD
  2158                           
  2159                           
  2160                           	psect	cstackBANK0
  2161  0020                     __pcstackBANK0:	
  2162                           ; 1 bytes @ 0xD
  2163                           
  2164  0020                     	ds	2
  2165  0022                     IRQ0_ISR@Data1:	
  2166                           
  2167                           ; 1 bytes @ 0x2
  2168  0022                     	ds	1
  2169  0023                     ?_spi1_exchangeByte:	
  2170  0023                     ??_spi1_open:	
  2171                           ; 1 bytes @ 0x3
  2172                           
  2173  0023                     ?_TMR2_SetInterruptHandler:	
  2174                           ; 1 bytes @ 0x3
  2175                           
  2176  0023                     ??_OSCILLATOR_Initialize:	
  2177                           ; 1 bytes @ 0x3
  2178                           
  2179  0023                     ??_WDT_Initialize:	
  2180                           ; 1 bytes @ 0x3
  2181                           
  2182  0023                     ?_IOCBF0_SetInterruptHandler:	
  2183                           ; 1 bytes @ 0x3
  2184                           
  2185  0023                     ?_IOCBF3_SetInterruptHandler:	
  2186                           ; 1 bytes @ 0x3
  2187                           
  2188  0023                     ?_IOCBF5_SetInterruptHandler:	
  2189                           ; 1 bytes @ 0x3
  2190                           
  2191  0023                     ?_MRF89XA_GetAddress:	
  2192                           ; 1 bytes @ 0x3
  2193                           
  2194  0023                     ??_ADC_Initialize:	
  2195                           ; 1 bytes @ 0x3
  2196                           
  2197  0023                     ?_Delay_Xms:	
  2198                           ; 1 bytes @ 0x3
  2199                           
  2200  0023                     ??_POWER_LED_ON:	
  2201                           ; 1 bytes @ 0x3
  2202                           
  2203  0023                     ??_POWER_LED_OFF:	
  2204                           ; 1 bytes @ 0x3
  2205                           
  2206  0023                     ??_POWER_LED_TOGGLE:	
  2207                           ; 1 bytes @ 0x3
  2208                           
  2209  0023                     spi1_exchangeByte@b:	
  2210                           ; 1 bytes @ 0x3
  2211                           
  2212  0023                     MRF89XA_GetAddress@Read:	
  2213                           ; 1 bytes @ 0x3
  2214                           
  2215  0023                     TMR2_SetInterruptHandler@InterruptHandler:	
  2216                           ; 1 bytes @ 0x3
  2217                           
  2218  0023                     IOCBF0_SetInterruptHandler@InterruptHandler:	
  2219                           ; 2 bytes @ 0x3
  2220                           
  2221  0023                     IOCBF3_SetInterruptHandler@InterruptHandler:	
  2222                           ; 2 bytes @ 0x3
  2223                           
  2224  0023                     IOCBF5_SetInterruptHandler@InterruptHandler:	
  2225                           ; 2 bytes @ 0x3
  2226                           
  2227  0023                     Delay_Xms@delay:	
  2228                           ; 2 bytes @ 0x3
  2229                           
  2230                           
  2231                           ; 4 bytes @ 0x3
  2232  0023                     	ds	1
  2233  0024                     ??_spi1_exchangeByte:	
  2234  0024                     ??_MRF89XA_GetAddress:	
  2235                           ; 1 bytes @ 0x4
  2236                           
  2237  0024                     ??_MRF89XA_SPI_ExchangeByte:	
  2238                           ; 1 bytes @ 0x4
  2239                           
  2240                           
  2241                           ; 1 bytes @ 0x4
  2242  0024                     	ds	1
  2243  0025                     ??_TMR2_SetInterruptHandler:	
  2244  0025                     ??_PIN_MANAGER_Initialize:	
  2245                           ; 1 bytes @ 0x5
  2246                           
  2247  0025                     ??_IOCBF0_SetInterruptHandler:	
  2248                           ; 1 bytes @ 0x5
  2249                           
  2250  0025                     ??_IOCBF3_SetInterruptHandler:	
  2251                           ; 1 bytes @ 0x5
  2252                           
  2253  0025                     ??_IOCBF5_SetInterruptHandler:	
  2254                           ; 1 bytes @ 0x5
  2255                           
  2256  0025                     ??_TMR2_Initialize:	
  2257                           ; 1 bytes @ 0x5
  2258                           
  2259  0025                     MRF89XA_SPI_ExchangeByte@byte:	
  2260                           ; 1 bytes @ 0x5
  2261                           
  2262  0025                     MRF89XA_GetAddress@Address:	
  2263                           ; 1 bytes @ 0x5
  2264                           
  2265                           
  2266                           ; 1 bytes @ 0x5
  2267  0025                     	ds	1
  2268  0026                     spi1_open@spiUniqueConfiguration:	
  2269  0026                     MRF89XA_GetAddress@ret:	
  2270                           ; 1 bytes @ 0x6
  2271                           
  2272                           
  2273                           ; 1 bytes @ 0x6
  2274  0026                     	ds	1
  2275  0027                     ??_MASTER_open:	
  2276  0027                     ?_MRF89XA_ExchangeConfig_A:	
  2277                           ; 1 bytes @ 0x7
  2278                           
  2279  0027                     ??_spi_master_open:	
  2280                           ; 1 bytes @ 0x7
  2281                           
  2282  0027                     ??_Delay_Xms:	
  2283                           ; 1 bytes @ 0x7
  2284                           
  2285  0027                     spi_master_open@config:	
  2286                           ; 1 bytes @ 0x7
  2287                           
  2288  0027                     MRF89XA_ExchangeConfig_A@Data:	
  2289                           ; 1 bytes @ 0x7
  2290                           
  2291                           
  2292                           ; 1 bytes @ 0x7
  2293  0027                     	ds	1
  2294  0028                     ??_MRF89XA_ExchangeConfig_A:	
  2295  0028                     ??_SYSTEM_Initialize:	
  2296                           ; 1 bytes @ 0x8
  2297                           
  2298  0028                     Delay_Xms@i:	
  2299                           ; 1 bytes @ 0x8
  2300                           
  2301                           
  2302                           ; 4 bytes @ 0x8
  2303  0028                     	ds	1
  2304  0029                     MRF89XA_ExchangeConfig_A@Address:	
  2305                           
  2306                           ; 1 bytes @ 0x9
  2307  0029                     	ds	1
  2308  002A                     MRF89XA_ExchangeConfig_A@ret:	
  2309                           
  2310                           ; 1 bytes @ 0xA
  2311  002A                     	ds	1
  2312  002B                     ?_MRF89XA_WriteConfig:	
  2313  002B                     MRF89XA_WriteConfig@Data:	
  2314                           ; 1 bytes @ 0xB
  2315                           
  2316                           
  2317                           ; 1 bytes @ 0xB
  2318  002B                     	ds	1
  2319  002C                     ??_MRF89XA_WriteConfig:	
  2320                           
  2321                           ; 1 bytes @ 0xC
  2322  002C                     	ds	1
  2323  002D                     MRF89XA_WriteConfig@Address:	
  2324                           
  2325                           ; 1 bytes @ 0xD
  2326  002D                     	ds	1
  2327  002E                     ??_MRF89XA_SetMode:	
  2328  002E                     ??_MRF89XA_SetModulation:	
  2329                           ; 1 bytes @ 0xE
  2330                           
  2331                           
  2332                           ; 1 bytes @ 0xE
  2333  002E                     	ds	1
  2334  002F                     MRF89XA_SetMode@mask:	
  2335  002F                     MRF89XA_SetModulation@Modulation:	
  2336                           ; 1 bytes @ 0xF
  2337                           
  2338                           
  2339                           ; 1 bytes @ 0xF
  2340  002F                     	ds	1
  2341  0030                     MRF89XA_SetMode@Mode:	
  2342  0030                     MRF89XA_SetModulation@mask:	
  2343                           ; 1 bytes @ 0x10
  2344                           
  2345                           
  2346                           ; 1 bytes @ 0x10
  2347  0030                     	ds	1
  2348  0031                     ?_MRF89XA_Initialize:	
  2349  0031                     MRF89XA_Initialize@Mode:	
  2350                           ; 1 bytes @ 0x11
  2351                           
  2352                           
  2353                           ; 1 bytes @ 0x11
  2354  0031                     	ds	1
  2355  0032                     MRF89XA_Initialize@Modulation:	
  2356                           
  2357                           ; 1 bytes @ 0x12
  2358  0032                     	ds	1
  2359  0033                     ??_MRF89XA_Initialize:	
  2360                           
  2361                           ; 1 bytes @ 0x13
  2362  0033                     	ds	1
  2363  0034                     MRF89XA_Initialize@Address:	
  2364                           
  2365                           ; 1 bytes @ 0x14
  2366  0034                     	ds	1
  2367  0035                     ??_main:	
  2368                           
  2369                           ; 1 bytes @ 0x15
  2370  0035                     	ds	2
  2371                           
  2372                           	psect	maintext
  2373  0052                     __pmaintext:	
  2374 ;;
  2375 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2376 ;;
  2377 ;; *************** function _main *****************
  2378 ;; Defined at:
  2379 ;;		line 176 in file "main.c"
  2380 ;; Parameters:    Size  Location     Type
  2381 ;;		None
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;		None
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  1    wreg      void 
  2386 ;; Registers used:
  2387 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2388 ;; Tracked objects:
  2389 ;;		On entry : B1F/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2393 ;;      Params:         0       0       0       0       0       0
  2394 ;;      Locals:         0       0       0       0       0       0
  2395 ;;      Temps:          0       2       0       0       0       0
  2396 ;;      Totals:         0       2       0       0       0       0
  2397 ;;Total ram usage:        2 bytes
  2398 ;; Hardware stack levels required when called:   15
  2399 ;; This function calls:
  2400 ;;		_Delay_Xms
  2401 ;;		_IOCBF0_SetInterruptHandler
  2402 ;;		_MRF89XA_Initialize
  2403 ;;		_MRF89XA_SetMode
  2404 ;;		_POWER_LED_TOGGLE
  2405 ;;		_SYSTEM_Initialize
  2406 ;; This function is called by:
  2407 ;;		Startup code after reset
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           
  2412                           ;psect for function _main
  2413  0052                     _main:	
  2414                           
  2415                           ;main.c: 178: SYSTEM_Initialize();
  2416                           
  2417                           ;incstack = 0
  2418                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2419  0052  3183  2362  3180   	fcall	_SYSTEM_Initialize
  2420                           
  2421                           ;main.c: 184: (INTCONbits.GIE = 1);
  2422  0055  178B               	bsf	11,7	;volatile
  2423                           
  2424                           ;main.c: 186: (INTCONbits.PEIE = 1);
  2425  0056  170B               	bsf	11,6	;volatile
  2426  0057  0022               	movlb	2	; select bank2
  2427  0058  100C               	bcf	12,0	;volatile
  2428  0059  118C               	bcf	12,3	;volatile
  2429                           
  2430                           ;main.c: 194: Delay_Xms(500);
  2431  005A  3000               	movlw	0
  2432  005B  0020               	movlb	0	; select bank0
  2433  005C  00A6               	movwf	Delay_Xms@delay+3
  2434  005D  3000               	movlw	0
  2435  005E  00A5               	movwf	Delay_Xms@delay+2
  2436  005F  3001               	movlw	1
  2437  0060  00A4               	movwf	Delay_Xms@delay+1
  2438  0061  30F4               	movlw	244
  2439  0062  00A3               	movwf	Delay_Xms@delay
  2440  0063  3182  22C8  3180   	fcall	_Delay_Xms
  2441  0066  0022               	movlb	2	; select bank2
  2442  0067  158C               	bsf	12,3	;volatile
  2443                           
  2444                           ;main.c: 196: Delay_Xms(500);
  2445  0068  3000               	movlw	0
  2446  0069  0020               	movlb	0	; select bank0
  2447  006A  00A6               	movwf	Delay_Xms@delay+3
  2448  006B  3000               	movlw	0
  2449  006C  00A5               	movwf	Delay_Xms@delay+2
  2450  006D  3001               	movlw	1
  2451  006E  00A4               	movwf	Delay_Xms@delay+1
  2452  006F  30F4               	movlw	244
  2453  0070  00A3               	movwf	Delay_Xms@delay
  2454  0071  3182  22C8  3180   	fcall	_Delay_Xms
  2455  0074  0022               	movlb	2	; select bank2
  2456  0075  118C               	bcf	12,3	;volatile
  2457                           
  2458                           ;main.c: 198: Delay_Xms(500);
  2459  0076  3000               	movlw	0
  2460  0077  0020               	movlb	0	; select bank0
  2461  0078  00A6               	movwf	Delay_Xms@delay+3
  2462  0079  3000               	movlw	0
  2463  007A  00A5               	movwf	Delay_Xms@delay+2
  2464  007B  3001               	movlw	1
  2465  007C  00A4               	movwf	Delay_Xms@delay+1
  2466  007D  30F4               	movlw	244
  2467  007E  00A3               	movwf	Delay_Xms@delay
  2468  007F  3182  22C8  3180   	fcall	_Delay_Xms
  2469  0082  0022               	movlb	2	; select bank2
  2470  0083  158C               	bsf	12,3	;volatile
  2471                           
  2472                           ;main.c: 206: MRF89XA_Initialize(0x41, MRF89XA_MODE_RX, MRF89XA_MODULATION_OOK);
  2473  0084  0020               	movlb	0	; select bank0
  2474  0085  01B1               	clrf	MRF89XA_Initialize@Mode
  2475  0086  3005               	movlw	5
  2476  0087  00B5               	movwf	??_main
  2477  0088  0835               	movf	??_main,w
  2478  0089  00B2               	movwf	MRF89XA_Initialize@Modulation
  2479  008A  3041               	movlw	65
  2480  008B  3181  2131  3180   	fcall	_MRF89XA_Initialize
  2481                           
  2482                           ;main.c: 208: Delay_Xms(5);
  2483  008E  3000               	movlw	0
  2484  008F  0020               	movlb	0	; select bank0
  2485  0090  00A6               	movwf	Delay_Xms@delay+3
  2486  0091  3000               	movlw	0
  2487  0092  00A5               	movwf	Delay_Xms@delay+2
  2488  0093  3000               	movlw	0
  2489  0094  00A4               	movwf	Delay_Xms@delay+1
  2490  0095  3005               	movlw	5
  2491  0096  00A3               	movwf	Delay_Xms@delay
  2492  0097  3182  22C8  3180   	fcall	_Delay_Xms
  2493                           
  2494                           ;main.c: 210: IOCBF0_SetInterruptHandler(IRQ0_ISR);
  2495  009A  3051               	movlw	low _IRQ0_ISR
  2496  009B  0020               	movlb	0	; select bank0
  2497  009C  00A3               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler
  2498  009D  3002               	movlw	high _IRQ0_ISR
  2499  009E  00A4               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler+1
  2500  009F  3185  2504  3180   	fcall	_IOCBF0_SetInterruptHandler
  2501                           
  2502                           ;main.c: 213: MRF89XA_SetMode(MRF89XA_MODE_SLEEP);
  2503  00A2  3003               	movlw	3
  2504  00A3  3183  2325  3180   	fcall	_MRF89XA_SetMode
  2505  00A6  0023               	movlb	3	; select bank3
  2506  00A7  108D               	bcf	13,1	;volatile
  2507  00A8  0021               	movlb	1	; select bank1
  2508  00A9  148D               	bsf	13,1	;volatile
  2509  00AA  0023               	movlb	3	; select bank3
  2510  00AB  110D               	bcf	13,2	;volatile
  2511  00AC  0021               	movlb	1	; select bank1
  2512  00AD  150D               	bsf	13,2	;volatile
  2513  00AE  0023               	movlb	3	; select bank3
  2514  00AF  120D               	bcf	13,4	;volatile
  2515  00B0  0021               	movlb	1	; select bank1
  2516  00B1  160D               	bsf	13,4	;volatile
  2517  00B2  0023               	movlb	3	; select bank3
  2518  00B3  138D               	bcf	13,7	;volatile
  2519  00B4  0021               	movlb	1	; select bank1
  2520  00B5  178D               	bsf	13,7	;volatile
  2521  00B6  0023               	movlb	3	; select bank3
  2522  00B7  130D               	bcf	13,6	;volatile
  2523  00B8  0021               	movlb	1	; select bank1
  2524  00B9  170D               	bsf	13,6	;volatile
  2525  00BA                     l2441:	
  2526                           
  2527                           ;main.c: 227: if(PORTBbits.RB4 == 1) {
  2528  00BA  0020               	movlb	0	; select bank0
  2529  00BB  1E0D               	btfss	13,4	;volatile
  2530  00BC  28D0               	goto	l543
  2531                           
  2532                           ;main.c: 228: POWER_LED_TOGGLE();
  2533  00BD  3184  24B5  3180   	fcall	_POWER_LED_TOGGLE
  2534  00C0                     l2445:	
  2535                           
  2536                           ;main.c: 230: _delay((unsigned long)((100)*(16000000/4000.0)));
  2537  00C0  3003               	movlw	3
  2538  00C1  0020               	movlb	0	; select bank0
  2539  00C2  00B6               	movwf	??_main+1
  2540  00C3  3008               	movlw	8
  2541  00C4  00B5               	movwf	??_main
  2542  00C5  3077               	movlw	119
  2543  00C6                     u1237:	
  2544  00C6  0B89               	decfsz	9,f
  2545  00C7  28C6               	goto	u1237
  2546  00C8  0BB5               	decfsz	??_main,f
  2547  00C9  28C6               	goto	u1237
  2548  00CA  0BB6               	decfsz	??_main+1,f
  2549  00CB  28C6               	goto	u1237
  2550                           
  2551                           ;main.c: 231: } while(PORTBbits.RB4 == 1);
  2552  00CC  0020               	movlb	0	; select bank0
  2553  00CD  1E0D               	btfss	13,4	;volatile
  2554  00CE  290E               	goto	l2467
  2555  00CF  28C0               	goto	l2445
  2556  00D0                     l543:	
  2557                           
  2558                           ;main.c: 233: else if(PORTBbits.RB2 == 1) {
  2559  00D0  1D0D               	btfss	13,2	;volatile
  2560  00D1  28E5               	goto	l547
  2561                           
  2562                           ;main.c: 234: POWER_LED_TOGGLE();
  2563  00D2  3184  24B5  3180   	fcall	_POWER_LED_TOGGLE
  2564  00D5                     l2451:	
  2565                           
  2566                           ;main.c: 236: _delay((unsigned long)((100)*(16000000/4000.0)));
  2567  00D5  3003               	movlw	3
  2568  00D6  0020               	movlb	0	; select bank0
  2569  00D7  00B6               	movwf	??_main+1
  2570  00D8  3008               	movlw	8
  2571  00D9  00B5               	movwf	??_main
  2572  00DA  3077               	movlw	119
  2573  00DB                     u1247:	
  2574  00DB  0B89               	decfsz	9,f
  2575  00DC  28DB               	goto	u1247
  2576  00DD  0BB5               	decfsz	??_main,f
  2577  00DE  28DB               	goto	u1247
  2578  00DF  0BB6               	decfsz	??_main+1,f
  2579  00E0  28DB               	goto	u1247
  2580                           
  2581                           ;main.c: 237: } while(PORTBbits.RB2 == 1);
  2582  00E1  0020               	movlb	0	; select bank0
  2583  00E2  1D0D               	btfss	13,2	;volatile
  2584  00E3  290E               	goto	l2467
  2585  00E4  28D5               	goto	l2451
  2586  00E5                     l547:	
  2587                           
  2588                           ;main.c: 239: else if(PORTBbits.RB1 == 1) {
  2589  00E5  1C8D               	btfss	13,1	;volatile
  2590  00E6  28FA               	goto	l551
  2591                           
  2592                           ;main.c: 240: POWER_LED_TOGGLE();
  2593  00E7  3184  24B5  3180   	fcall	_POWER_LED_TOGGLE
  2594  00EA                     l2457:	
  2595                           
  2596                           ;main.c: 242: _delay((unsigned long)((100)*(16000000/4000.0)));
  2597  00EA  3003               	movlw	3
  2598  00EB  0020               	movlb	0	; select bank0
  2599  00EC  00B6               	movwf	??_main+1
  2600  00ED  3008               	movlw	8
  2601  00EE  00B5               	movwf	??_main
  2602  00EF  3077               	movlw	119
  2603  00F0                     u1257:	
  2604  00F0  0B89               	decfsz	9,f
  2605  00F1  28F0               	goto	u1257
  2606  00F2  0BB5               	decfsz	??_main,f
  2607  00F3  28F0               	goto	u1257
  2608  00F4  0BB6               	decfsz	??_main+1,f
  2609  00F5  28F0               	goto	u1257
  2610                           
  2611                           ;main.c: 243: } while(PORTBbits.RB1 == 1);
  2612  00F6  0020               	movlb	0	; select bank0
  2613  00F7  1C8D               	btfss	13,1	;volatile
  2614  00F8  290E               	goto	l2467
  2615  00F9  28EA               	goto	l2457
  2616  00FA                     l551:	
  2617                           
  2618                           ;main.c: 245: else if(PORTBbits.RB7 == 1) {
  2619  00FA  1F8D               	btfss	13,7	;volatile
  2620  00FB  290E               	goto	l2467
  2621                           
  2622                           ;main.c: 246: POWER_LED_TOGGLE();
  2623  00FC  3184  24B5  3180   	fcall	_POWER_LED_TOGGLE
  2624  00FF                     l2463:	
  2625                           
  2626                           ;main.c: 248: _delay((unsigned long)((100)*(16000000/4000.0)));
  2627  00FF  3003               	movlw	3
  2628  0100  0020               	movlb	0	; select bank0
  2629  0101  00B6               	movwf	??_main+1
  2630  0102  3008               	movlw	8
  2631  0103  00B5               	movwf	??_main
  2632  0104  3077               	movlw	119
  2633  0105                     u1267:	
  2634  0105  0B89               	decfsz	9,f
  2635  0106  2905               	goto	u1267
  2636  0107  0BB5               	decfsz	??_main,f
  2637  0108  2905               	goto	u1267
  2638  0109  0BB6               	decfsz	??_main+1,f
  2639  010A  2905               	goto	u1267
  2640                           
  2641                           ;main.c: 249: } while(PORTBbits.RB7 == 1);
  2642  010B  0020               	movlb	0	; select bank0
  2643  010C  1B8D               	btfsc	13,7	;volatile
  2644  010D  28FF               	goto	l2463
  2645  010E                     l2467:	
  2646                           
  2647                           ;main.c: 250: };main.c: 251: if(LedState == 1) {
  2648  010E  0345               	decf	_LedState,w
  2649  010F  1D03               	btfss	3,2
  2650  0110  2925               	goto	l2481
  2651                           
  2652                           ;main.c: 252: BlinkCounter++;
  2653  0111  3001               	movlw	1
  2654  0112  00B5               	movwf	??_main
  2655  0113  0835               	movf	??_main,w
  2656  0114  07C3               	addwf	_BlinkCounter,f
  2657                           
  2658                           ;main.c: 253: if(PORTAbits.RA3 == 0) {
  2659  0115  198C               	btfsc	12,3	;volatile
  2660  0116  291D               	goto	l2477
  2661                           
  2662                           ;main.c: 254: if(BlinkCounter == BlinkCounterOn){
  2663  0117  0343               	decf	_BlinkCounter,w
  2664  0118  1D03               	btfss	3,2
  2665  0119  2925               	goto	l2481
  2666                           
  2667                           ;main.c: 255: do { LATAbits.LATA3 = 1; } while(0);
  2668  011A  0022               	movlb	2	; select bank2
  2669  011B  158C               	bsf	12,3	;volatile
  2670  011C  2923               	goto	l2475
  2671  011D                     l2477:	
  2672                           
  2673                           ;main.c: 259: else {;main.c: 260: if(BlinkCounter == BlinkCounterOff){
  2674  011D  3009               	movlw	9
  2675  011E  0643               	xorwf	_BlinkCounter,w
  2676  011F  1D03               	btfss	3,2
  2677  0120  2925               	goto	l2481
  2678                           
  2679                           ;main.c: 261: do { LATAbits.LATA3 = 0; } while(0);
  2680  0121  0022               	movlb	2	; select bank2
  2681  0122  118C               	bcf	12,3	;volatile
  2682  0123                     l2475:	
  2683                           
  2684                           ;main.c: 256: BlinkCounter = 0;
  2685  0123  0020               	movlb	0	; select bank0
  2686  0124  01C3               	clrf	_BlinkCounter
  2687  0125                     l2481:	
  2688                           
  2689                           ;main.c: 263: };main.c: 264: };main.c: 265: };main.c: 266: Delay_Xms(100);
  2690  0125  3000               	movlw	0
  2691  0126  00A6               	movwf	Delay_Xms@delay+3
  2692  0127  3000               	movlw	0
  2693  0128  00A5               	movwf	Delay_Xms@delay+2
  2694  0129  3000               	movlw	0
  2695  012A  00A4               	movwf	Delay_Xms@delay+1
  2696  012B  3064               	movlw	100
  2697  012C  00A3               	movwf	Delay_Xms@delay
  2698  012D  3182  22C8  3180   	fcall	_Delay_Xms
  2699  0130  28BA               	goto	l2441
  2700  0131                     __end_of_main:	
  2701                           
  2702                           	psect	text1
  2703  0362                     __ptext1:	
  2704 ;; *************** function _SYSTEM_Initialize *****************
  2705 ;; Defined at:
  2706 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;		None
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;		None
  2711 ;; Return value:  Size  Location     Type
  2712 ;;                  1    wreg      void 
  2713 ;; Registers used:
  2714 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2715 ;; Tracked objects:
  2716 ;;		On entry : 0/0
  2717 ;;		On exit  : 0/0
  2718 ;;		Unchanged: 0/0
  2719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2720 ;;      Params:         0       0       0       0       0       0
  2721 ;;      Locals:         0       0       0       0       0       0
  2722 ;;      Temps:          0       0       0       0       0       0
  2723 ;;      Totals:         0       0       0       0       0       0
  2724 ;;Total ram usage:        0 bytes
  2725 ;; Hardware stack levels used:    1
  2726 ;; Hardware stack levels required when called:   12
  2727 ;; This function calls:
  2728 ;;		_ADC_Initialize
  2729 ;;		_OSCILLATOR_Initialize
  2730 ;;		_PIN_MANAGER_Initialize
  2731 ;;		_TMR2_Initialize
  2732 ;;		_WDT_Initialize
  2733 ;;		_spi_master_open
  2734 ;; This function is called by:
  2735 ;;		_main
  2736 ;; This function uses a non-reentrant model
  2737 ;;
  2738                           
  2739                           
  2740                           ;psect for function _SYSTEM_Initialize
  2741  0362                     _SYSTEM_Initialize:	
  2742                           
  2743                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  2744                           
  2745                           ;incstack = 0
  2746                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2747  0362  3182  2291  3183   	fcall	_PIN_MANAGER_Initialize
  2748                           
  2749                           ;mcc.c: 54: OSCILLATOR_Initialize();
  2750  0365  3184  24EB  3183   	fcall	_OSCILLATOR_Initialize
  2751                           
  2752                           ;mcc.c: 55: WDT_Initialize();
  2753  0368  3185  251E  3183   	fcall	_WDT_Initialize
  2754                           
  2755                           ;mcc.c: 56: TMR2_Initialize();
  2756  036B  3183  23CE  3183   	fcall	_TMR2_Initialize
  2757                           
  2758                           ;mcc.c: 57: ADC_Initialize();
  2759  036E  3184  24C9  3183   	fcall	_ADC_Initialize
  2760                           
  2761                           ;mcc.c: 58: if(spi_master_open(MASTER) == 0) {
  2762  0371  3000               	movlw	0
  2763  0372  3184  2432  3183   	fcall	_spi_master_open
  2764  0375  3A00               	xorlw	0
  2765  0376  1D03               	skipz
  2766  0377  0008               	return
  2767                           
  2768                           ;mcc.c: 59: do { LATAbits.LATA3 = 0; } while(0);
  2769  0378  0022               	movlb	2	; select bank2
  2770  0379  118C               	bcf	12,3	;volatile
  2771  037A  0008               	return
  2772  037B                     __end_of_SYSTEM_Initialize:	
  2773                           
  2774                           	psect	text2
  2775  0432                     __ptext2:	
  2776 ;; *************** function _spi_master_open *****************
  2777 ;; Defined at:
  2778 ;;		line 40 in file "mcc_generated_files/drivers/spi_master.c"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;  config          1    wreg     enum E122
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;  config          1    7[BANK0 ] enum E122
  2783 ;; Return value:  Size  Location     Type
  2784 ;;                  1    wreg      unsigned char 
  2785 ;; Registers used:
  2786 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2787 ;; Tracked objects:
  2788 ;;		On entry : 0/0
  2789 ;;		On exit  : 0/0
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2792 ;;      Params:         0       0       0       0       0       0
  2793 ;;      Locals:         0       1       0       0       0       0
  2794 ;;      Temps:          0       0       0       0       0       0
  2795 ;;      Totals:         0       1       0       0       0       0
  2796 ;;Total ram usage:        1 bytes
  2797 ;; Hardware stack levels used:    1
  2798 ;; Hardware stack levels required when called:   11
  2799 ;; This function calls:
  2800 ;;		_MASTER_open
  2801 ;; This function is called by:
  2802 ;;		_SYSTEM_Initialize
  2803 ;; This function uses a non-reentrant model
  2804 ;;
  2805                           
  2806                           
  2807                           ;psect for function _spi_master_open
  2808  0432                     _spi_master_open:	
  2809                           
  2810                           ;incstack = 0
  2811                           ; Regs used in _spi_master_open: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2812                           ;spi_master_open@config stored from wreg
  2813  0432  0020               	movlb	0	; select bank0
  2814  0433  00A7               	movwf	spi_master_open@config
  2815                           
  2816                           ;spi_master.c: 41: switch(config){
  2817  0434  2C3A               	goto	l2175
  2818  0435                     l2165:	
  2819                           
  2820                           ;spi_master.c: 43: return MASTER_open();
  2821  0435  3185  251A         	fcall	_MASTER_open
  2822  0437  0008               	return
  2823  0438                     l2169:	
  2824                           
  2825                           ;spi_master.c: 45: return 0;
  2826  0438  3000               	movlw	0
  2827  0439  0008               	return
  2828  043A                     l2175:	
  2829  043A  0827               	movf	spi_master_open@config,w
  2830                           
  2831                           ; Switch size 1, requested type "simple"
  2832                           ; Number of cases is 1, Range of values is 0 to 0
  2833                           ; switch strategies available:
  2834                           ; Name         Instructions Cycles
  2835                           ; simple_byte            4     3 (average)
  2836                           ; direct_byte            8     6 (fixed)
  2837                           ; jumptable            260     6 (fixed)
  2838                           ;	Chosen strategy is simple_byte
  2839  043B  3A00               	xorlw	0	; case 0
  2840  043C  1903               	skipnz
  2841  043D  2C35               	goto	l2165
  2842  043E  2C38               	goto	l2169
  2843  043F  0008               	return
  2844  0440                     __end_of_spi_master_open:	
  2845                           
  2846                           	psect	text3
  2847  051A                     __ptext3:	
  2848 ;; *************** function _MASTER_open *****************
  2849 ;; Defined at:
  2850 ;;		line 35 in file "mcc_generated_files/drivers/spi_master.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;		None
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;		None
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  1    wreg      unsigned char 
  2857 ;; Registers used:
  2858 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2864 ;;      Params:         0       0       0       0       0       0
  2865 ;;      Locals:         0       0       0       0       0       0
  2866 ;;      Temps:          0       0       0       0       0       0
  2867 ;;      Totals:         0       0       0       0       0       0
  2868 ;;Total ram usage:        0 bytes
  2869 ;; Hardware stack levels used:    1
  2870 ;; Hardware stack levels required when called:   10
  2871 ;; This function calls:
  2872 ;;		_spi1_open
  2873 ;; This function is called by:
  2874 ;;		_spi_master_open
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878                           
  2879                           ;psect for function _MASTER_open
  2880  051A                     _MASTER_open:	
  2881                           
  2882                           ;spi_master.c: 36: return spi1_open(MASTER_CONFIG);
  2883                           
  2884                           ;incstack = 0
  2885                           ; Regs used in _MASTER_open: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2886  051A  3001               	movlw	1
  2887  051B  3181  21FA         	fcall	_spi1_open
  2888  051D  0008               	return
  2889  051E                     __end_of_MASTER_open:	
  2890                           
  2891                           	psect	text4
  2892  01FA                     __ptext4:	
  2893 ;; *************** function _spi1_open *****************
  2894 ;; Defined at:
  2895 ;;		line 46 in file "mcc_generated_files/spi1_driver.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;  spiUniqueCon    1    wreg     enum E2388
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;  spiUniqueCon    1    6[BANK0 ] enum E2388
  2900 ;; Return value:  Size  Location     Type
  2901 ;;                  1    wreg      unsigned char 
  2902 ;; Registers used:
  2903 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2904 ;; Tracked objects:
  2905 ;;		On entry : 0/0
  2906 ;;		On exit  : 0/0
  2907 ;;		Unchanged: 0/0
  2908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2909 ;;      Params:         0       0       0       0       0       0
  2910 ;;      Locals:         0       1       0       0       0       0
  2911 ;;      Temps:          0       3       0       0       0       0
  2912 ;;      Totals:         0       4       0       0       0       0
  2913 ;;Total ram usage:        4 bytes
  2914 ;; Hardware stack levels used:    1
  2915 ;; Hardware stack levels required when called:    9
  2916 ;; This function calls:
  2917 ;;		Nothing
  2918 ;; This function is called by:
  2919 ;;		_MASTER_open
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           
  2924                           ;psect for function _spi1_open
  2925  01FA                     _spi1_open:	
  2926                           
  2927                           ;incstack = 0
  2928                           ; Regs used in _spi1_open: [wreg-fsr0h+status,2+status,0+pclath]
  2929                           ;spi1_open@spiUniqueConfiguration stored from wreg
  2930  01FA  0020               	movlb	0	; select bank0
  2931  01FB  00A6               	movwf	spi1_open@spiUniqueConfiguration
  2932                           
  2933                           ;spi1_driver.c: 48: if(!SSP1CON1bits.SSPEN)
  2934  01FC  0024               	movlb	4	; select bank4
  2935  01FD  1A95               	btfsc	21,5	;volatile
  2936  01FE  2A4F               	goto	l2087
  2937                           
  2938                           ;spi1_driver.c: 49: {;spi1_driver.c: 52: SSP1STAT = spi1_configuration[spiUniqueConfigur
      +                          ation].stat;
  2939  01FF  0020               	movlb	0	; select bank0
  2940  0200  0826               	movf	spi1_open@spiUniqueConfiguration,w
  2941  0201  00A3               	movwf	??_spi1_open
  2942  0202  01A4               	clrf	??_spi1_open+1
  2943  0203  35A3               	lslf	??_spi1_open,f
  2944  0204  0DA4               	rlf	??_spi1_open+1,f
  2945  0205  35A3               	lslf	??_spi1_open,f
  2946  0206  0DA4               	rlf	??_spi1_open+1,f
  2947  0207  30DC               	movlw	low ((_spi1_configuration+1)| (0+32768))
  2948  0208  0723               	addwf	??_spi1_open,w
  2949  0209  0084               	movwf	4
  2950  020A  3084               	movlw	high ((_spi1_configuration+1)| (0+32768))
  2951  020B  3D24               	addwfc	??_spi1_open+1,w
  2952  020C  0085               	movwf	5
  2953  020D  0800               	movf	0,w	;code access
  2954  020E  0024               	movlb	4	; select bank4
  2955  020F  0094               	movwf	20	;volatile
  2956                           
  2957                           ;spi1_driver.c: 53: SSP1CON1 = (uint8_t)(spi1_configuration[spiUniqueConfiguration].con1
      +                           | 0x20);
  2958  0210  0020               	movlb	0	; select bank0
  2959  0211  0826               	movf	spi1_open@spiUniqueConfiguration,w
  2960  0212  00A3               	movwf	??_spi1_open
  2961  0213  01A4               	clrf	??_spi1_open+1
  2962  0214  35A3               	lslf	??_spi1_open,f
  2963  0215  0DA4               	rlf	??_spi1_open+1,f
  2964  0216  35A3               	lslf	??_spi1_open,f
  2965  0217  0DA4               	rlf	??_spi1_open+1,f
  2966  0218  30DB               	movlw	low (_spi1_configuration| (0+32768))
  2967  0219  0723               	addwf	??_spi1_open,w
  2968  021A  0084               	movwf	4
  2969  021B  3084               	movlw	high (_spi1_configuration| (0+32768))
  2970  021C  3D24               	addwfc	??_spi1_open+1,w
  2971  021D  0085               	movwf	5
  2972  021E  0800               	movf	0,w	;code access
  2973  021F  3820               	iorlw	32
  2974  0220  0024               	movlb	4	; select bank4
  2975  0221  0095               	movwf	21	;volatile
  2976                           
  2977                           ;spi1_driver.c: 54: SSP1CON2 = 0x00;
  2978  0222  0196               	clrf	22	;volatile
  2979                           
  2980                           ;spi1_driver.c: 55: SSP1ADD = (uint8_t)(spi1_configuration[spiUniqueConfiguration].add);
  2981  0223  0020               	movlb	0	; select bank0
  2982  0224  0826               	movf	spi1_open@spiUniqueConfiguration,w
  2983  0225  00A3               	movwf	??_spi1_open
  2984  0226  01A4               	clrf	??_spi1_open+1
  2985  0227  35A3               	lslf	??_spi1_open,f
  2986  0228  0DA4               	rlf	??_spi1_open+1,f
  2987  0229  35A3               	lslf	??_spi1_open,f
  2988  022A  0DA4               	rlf	??_spi1_open+1,f
  2989  022B  30DD               	movlw	low ((_spi1_configuration+2)| (0+32768))
  2990  022C  0723               	addwf	??_spi1_open,w
  2991  022D  0084               	movwf	4
  2992  022E  3084               	movlw	high ((_spi1_configuration+2)| (0+32768))
  2993  022F  3D24               	addwfc	??_spi1_open+1,w
  2994  0230  0085               	movwf	5
  2995  0231  0800               	movf	0,w	;code access
  2996  0232  0024               	movlb	4	; select bank4
  2997  0233  0092               	movwf	18	;volatile
  2998                           
  2999                           ;spi1_driver.c: 57: TRISBbits.TRISB4 = (uint8_t)(spi1_configuration[spiUniqueConfigurati
      +                          on].operation);
  3000  0234  0020               	movlb	0	; select bank0
  3001  0235  0826               	movf	spi1_open@spiUniqueConfiguration,w
  3002  0236  00A3               	movwf	??_spi1_open
  3003  0237  01A4               	clrf	??_spi1_open+1
  3004  0238  35A3               	lslf	??_spi1_open,f
  3005  0239  0DA4               	rlf	??_spi1_open+1,f
  3006  023A  35A3               	lslf	??_spi1_open,f
  3007  023B  0DA4               	rlf	??_spi1_open+1,f
  3008  023C  30DE               	movlw	low ((_spi1_configuration+3)| (0+32768))
  3009  023D  0723               	addwf	??_spi1_open,w
  3010  023E  0084               	movwf	4
  3011  023F  3084               	movlw	high ((_spi1_configuration+3)| (0+32768))
  3012  0240  3D24               	addwfc	??_spi1_open+1,w
  3013  0241  0085               	movwf	5
  3014  0242  0800               	movf	0,w	;code access
  3015  0243  00A5               	movwf	??_spi1_open+2
  3016  0244  0EA5               	swapf	??_spi1_open+2,f
  3017  0245  0021               	movlb	1	; select bank1
  3018  0246  080D               	movf	13,w	;volatile
  3019  0247  0020               	movlb	0	; select bank0
  3020  0248  0625               	xorwf	??_spi1_open+2,w
  3021  0249  39EF               	andlw	-17
  3022  024A  0625               	xorwf	??_spi1_open+2,w
  3023  024B  0021               	movlb	1	; select bank1
  3024  024C  008D               	movwf	13	;volatile
  3025                           
  3026                           ;spi1_driver.c: 58: return 1;
  3027  024D  3001               	movlw	1
  3028  024E  0008               	return
  3029  024F                     l2087:	
  3030                           
  3031                           ;spi1_driver.c: 59: };spi1_driver.c: 60: return 0;
  3032  024F  3000               	movlw	0
  3033  0250  0008               	return
  3034  0251                     __end_of_spi1_open:	
  3035                           
  3036                           	psect	text5
  3037  051E                     __ptext5:	
  3038 ;; *************** function _WDT_Initialize *****************
  3039 ;; Defined at:
  3040 ;;		line 73 in file "mcc_generated_files/mcc.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;		None
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;		None
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  1    wreg      void 
  3047 ;; Registers used:
  3048 ;;		wreg
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3054 ;;      Params:         0       0       0       0       0       0
  3055 ;;      Locals:         0       0       0       0       0       0
  3056 ;;      Temps:          0       0       0       0       0       0
  3057 ;;      Totals:         0       0       0       0       0       0
  3058 ;;Total ram usage:        0 bytes
  3059 ;; Hardware stack levels used:    1
  3060 ;; Hardware stack levels required when called:    9
  3061 ;; This function calls:
  3062 ;;		Nothing
  3063 ;; This function is called by:
  3064 ;;		_SYSTEM_Initialize
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           
  3069                           ;psect for function _WDT_Initialize
  3070  051E                     _WDT_Initialize:	
  3071                           
  3072                           ;mcc.c: 76: WDTCON = 0x16;
  3073                           
  3074                           ;incstack = 0
  3075                           ; Regs used in _WDT_Initialize: [wreg]
  3076  051E  3016               	movlw	22
  3077  051F  0021               	movlb	1	; select bank1
  3078  0520  0097               	movwf	23	;volatile
  3079  0521  0008               	return
  3080  0522                     __end_of_WDT_Initialize:	
  3081                           
  3082                           	psect	text6
  3083  03CE                     __ptext6:	
  3084 ;; *************** function _TMR2_Initialize *****************
  3085 ;; Defined at:
  3086 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;		None
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;		None
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  1    wreg      void 
  3093 ;; Registers used:
  3094 ;;		wreg, status,2, status,0, pclath, cstack
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3100 ;;      Params:         0       0       0       0       0       0
  3101 ;;      Locals:         0       0       0       0       0       0
  3102 ;;      Temps:          0       0       0       0       0       0
  3103 ;;      Totals:         0       0       0       0       0       0
  3104 ;;Total ram usage:        0 bytes
  3105 ;; Hardware stack levels used:    1
  3106 ;; Hardware stack levels required when called:   10
  3107 ;; This function calls:
  3108 ;;		_TMR2_SetInterruptHandler
  3109 ;; This function is called by:
  3110 ;;		_SYSTEM_Initialize
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           
  3115                           ;psect for function _TMR2_Initialize
  3116  03CE                     _TMR2_Initialize:	
  3117                           
  3118                           ;tmr2.c: 69: PR2 = 0x7C;
  3119                           
  3120                           ;incstack = 0
  3121                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3122  03CE  307C               	movlw	124
  3123  03CF  0020               	movlb	0	; select bank0
  3124  03D0  009B               	movwf	27	;volatile
  3125                           
  3126                           ;tmr2.c: 72: TMR2 = 0x00;
  3127  03D1  019A               	clrf	26	;volatile
  3128                           
  3129                           ;tmr2.c: 75: PIR1bits.TMR2IF = 0;
  3130  03D2  1091               	bcf	17,1	;volatile
  3131                           
  3132                           ;tmr2.c: 78: PIE1bits.TMR2IE = 1;
  3133  03D3  0021               	movlb	1	; select bank1
  3134  03D4  1491               	bsf	17,1	;volatile
  3135                           
  3136                           ;tmr2.c: 81: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  3137  03D5  302D               	movlw	low _TMR2_DefaultInterruptHandler
  3138  03D6  0020               	movlb	0	; select bank0
  3139  03D7  00A3               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  3140  03D8  3005               	movlw	high _TMR2_DefaultInterruptHandler
  3141  03D9  00A4               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  3142  03DA  3184  24F2         	fcall	_TMR2_SetInterruptHandler
  3143                           
  3144                           ;tmr2.c: 84: T2CON = 0x27;
  3145  03DC  3027               	movlw	39
  3146  03DD  0020               	movlb	0	; select bank0
  3147  03DE  009C               	movwf	28	;volatile
  3148  03DF  0008               	return
  3149  03E0                     __end_of_TMR2_Initialize:	
  3150                           
  3151                           	psect	text7
  3152  04F2                     __ptext7:	
  3153 ;; *************** function _TMR2_SetInterruptHandler *****************
  3154 ;; Defined at:
  3155 ;;		line 147 in file "mcc_generated_files/tmr2.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
  3158 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;		None
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  1    wreg      void 
  3163 ;; Registers used:
  3164 ;;		wreg
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3170 ;;      Params:         0       2       0       0       0       0
  3171 ;;      Locals:         0       0       0       0       0       0
  3172 ;;      Temps:          0       0       0       0       0       0
  3173 ;;      Totals:         0       2       0       0       0       0
  3174 ;;Total ram usage:        2 bytes
  3175 ;; Hardware stack levels used:    1
  3176 ;; Hardware stack levels required when called:    9
  3177 ;; This function calls:
  3178 ;;		Nothing
  3179 ;; This function is called by:
  3180 ;;		_TMR2_Initialize
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           
  3185                           ;psect for function _TMR2_SetInterruptHandler
  3186  04F2                     _TMR2_SetInterruptHandler:	
  3187                           
  3188                           ;tmr2.c: 148: TMR2_InterruptHandler = InterruptHandler;
  3189                           
  3190                           ;incstack = 0
  3191                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  3192  04F2  0020               	movlb	0	; select bank0
  3193  04F3  0824               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  3194  04F4  00BE               	movwf	_TMR2_InterruptHandler+1
  3195  04F5  0823               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  3196  04F6  00BD               	movwf	_TMR2_InterruptHandler
  3197  04F7  0008               	return
  3198  04F8                     __end_of_TMR2_SetInterruptHandler:	
  3199                           
  3200                           	psect	text8
  3201  0291                     __ptext8:	
  3202 ;; *************** function _PIN_MANAGER_Initialize *****************
  3203 ;; Defined at:
  3204 ;;		line 59 in file "mcc_generated_files/pin_manager.c"
  3205 ;; Parameters:    Size  Location     Type
  3206 ;;		None
  3207 ;; Auto vars:     Size  Location     Type
  3208 ;;		None
  3209 ;; Return value:  Size  Location     Type
  3210 ;;                  1    wreg      void 
  3211 ;; Registers used:
  3212 ;;		wreg, status,2, status,0, pclath, cstack
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3218 ;;      Params:         0       0       0       0       0       0
  3219 ;;      Locals:         0       0       0       0       0       0
  3220 ;;      Temps:          0       0       0       0       0       0
  3221 ;;      Totals:         0       0       0       0       0       0
  3222 ;;Total ram usage:        0 bytes
  3223 ;; Hardware stack levels used:    1
  3224 ;; Hardware stack levels required when called:   10
  3225 ;; This function calls:
  3226 ;;		_IOCBF0_SetInterruptHandler
  3227 ;;		_IOCBF3_SetInterruptHandler
  3228 ;;		_IOCBF5_SetInterruptHandler
  3229 ;; This function is called by:
  3230 ;;		_SYSTEM_Initialize
  3231 ;; This function uses a non-reentrant model
  3232 ;;
  3233                           
  3234                           
  3235                           ;psect for function _PIN_MANAGER_Initialize
  3236  0291                     _PIN_MANAGER_Initialize:	
  3237                           
  3238                           ;pin_manager.c: 64: LATA = 0x01;
  3239                           
  3240                           ;incstack = 0
  3241                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3242  0291  3001               	movlw	1
  3243  0292  0022               	movlb	2	; select bank2
  3244  0293  008C               	movwf	12	;volatile
  3245                           
  3246                           ;pin_manager.c: 65: LATB = 0x00;
  3247  0294  018D               	clrf	13	;volatile
  3248                           
  3249                           ;pin_manager.c: 70: TRISA = 0x30;
  3250  0295  3030               	movlw	48
  3251  0296  0021               	movlb	1	; select bank1
  3252  0297  008C               	movwf	12	;volatile
  3253                           
  3254                           ;pin_manager.c: 71: TRISB = 0xEB;
  3255  0298  30EB               	movlw	235
  3256  0299  008D               	movwf	13	;volatile
  3257                           
  3258                           ;pin_manager.c: 76: ANSELB = 0x00;
  3259  029A  0023               	movlb	3	; select bank3
  3260  029B  018D               	clrf	13	;volatile
  3261                           
  3262                           ;pin_manager.c: 77: ANSELA = 0x10;
  3263  029C  3010               	movlw	16
  3264  029D  008C               	movwf	12	;volatile
  3265                           
  3266                           ;pin_manager.c: 82: WPUB = 0x00;
  3267  029E  0024               	movlb	4	; select bank4
  3268  029F  018D               	clrf	13	;volatile
  3269                           
  3270                           ;pin_manager.c: 83: WPUA = 0x00;
  3271  02A0  018C               	clrf	12	;volatile
  3272                           
  3273                           ;pin_manager.c: 84: OPTION_REGbits.nWPUEN = 1;
  3274  02A1  0021               	movlb	1	; select bank1
  3275  02A2  1795               	bsf	21,7	;volatile
  3276                           
  3277                           ;pin_manager.c: 91: APFCON0 = 0x00;
  3278  02A3  0022               	movlb	2	; select bank2
  3279  02A4  019D               	clrf	29	;volatile
  3280                           
  3281                           ;pin_manager.c: 92: APFCON1 = 0x00;
  3282  02A5  019E               	clrf	30	;volatile
  3283                           
  3284                           ;pin_manager.c: 98: IOCBFbits.IOCBF0 = 0;
  3285  02A6  0027               	movlb	7	; select bank7
  3286  02A7  1016               	bcf	22,0	;volatile
  3287                           
  3288                           ;pin_manager.c: 100: IOCBFbits.IOCBF3 = 0;
  3289  02A8  1196               	bcf	22,3	;volatile
  3290                           
  3291                           ;pin_manager.c: 102: IOCBFbits.IOCBF5 = 0;
  3292  02A9  1296               	bcf	22,5	;volatile
  3293                           
  3294                           ;pin_manager.c: 106: IOCBNbits.IOCBN3 = 1;
  3295  02AA  1595               	bsf	21,3	;volatile
  3296                           
  3297                           ;pin_manager.c: 108: IOCBNbits.IOCBN5 = 1;
  3298  02AB  1695               	bsf	21,5	;volatile
  3299                           
  3300                           ;pin_manager.c: 110: IOCBPbits.IOCBP0 = 1;
  3301  02AC  1414               	bsf	20,0	;volatile
  3302                           
  3303                           ;pin_manager.c: 112: IOCBPbits.IOCBP3 = 1;
  3304  02AD  1594               	bsf	20,3	;volatile
  3305                           
  3306                           ;pin_manager.c: 114: IOCBPbits.IOCBP5 = 1;
  3307  02AE  1694               	bsf	20,5	;volatile
  3308                           
  3309                           ;pin_manager.c: 119: IOCBF0_SetInterruptHandler(IOCBF0_DefaultInterruptHandler);
  3310  02AF  3030               	movlw	low _IOCBF0_DefaultInterruptHandler
  3311  02B0  0020               	movlb	0	; select bank0
  3312  02B1  00A3               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler
  3313  02B2  3005               	movlw	high _IOCBF0_DefaultInterruptHandler
  3314  02B3  00A4               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler+1
  3315  02B4  3185  2504  3182   	fcall	_IOCBF0_SetInterruptHandler
  3316                           
  3317                           ;pin_manager.c: 120: IOCBF3_SetInterruptHandler(IOCBF3_DefaultInterruptHandler);
  3318  02B7  302F               	movlw	low _IOCBF3_DefaultInterruptHandler
  3319  02B8  0020               	movlb	0	; select bank0
  3320  02B9  00A3               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler
  3321  02BA  3005               	movlw	high _IOCBF3_DefaultInterruptHandler
  3322  02BB  00A4               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler+1
  3323  02BC  3184  24FE  3182   	fcall	_IOCBF3_SetInterruptHandler
  3324                           
  3325                           ;pin_manager.c: 121: IOCBF5_SetInterruptHandler(IOCBF5_DefaultInterruptHandler);
  3326  02BF  302E               	movlw	low _IOCBF5_DefaultInterruptHandler
  3327  02C0  0020               	movlb	0	; select bank0
  3328  02C1  00A3               	movwf	IOCBF5_SetInterruptHandler@InterruptHandler
  3329  02C2  3005               	movlw	high _IOCBF5_DefaultInterruptHandler
  3330  02C3  00A4               	movwf	IOCBF5_SetInterruptHandler@InterruptHandler+1
  3331  02C4  3184  24F8         	fcall	_IOCBF5_SetInterruptHandler
  3332                           
  3333                           ;pin_manager.c: 124: INTCONbits.IOCIE = 1;
  3334  02C6  158B               	bsf	11,3	;volatile
  3335  02C7  0008               	return
  3336  02C8                     __end_of_PIN_MANAGER_Initialize:	
  3337                           
  3338                           	psect	text9
  3339  04F8                     __ptext9:	
  3340 ;; *************** function _IOCBF5_SetInterruptHandler *****************
  3341 ;; Defined at:
  3342 ;;		line 225 in file "mcc_generated_files/pin_manager.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
  3345 ;;		 -> IOCBF5_DefaultInterruptHandler(1), 
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;		None
  3348 ;; Return value:  Size  Location     Type
  3349 ;;                  1    wreg      void 
  3350 ;; Registers used:
  3351 ;;		wreg
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3357 ;;      Params:         0       2       0       0       0       0
  3358 ;;      Locals:         0       0       0       0       0       0
  3359 ;;      Temps:          0       0       0       0       0       0
  3360 ;;      Totals:         0       2       0       0       0       0
  3361 ;;Total ram usage:        2 bytes
  3362 ;; Hardware stack levels used:    1
  3363 ;; Hardware stack levels required when called:    9
  3364 ;; This function calls:
  3365 ;;		Nothing
  3366 ;; This function is called by:
  3367 ;;		_PIN_MANAGER_Initialize
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           
  3372                           ;psect for function _IOCBF5_SetInterruptHandler
  3373  04F8                     _IOCBF5_SetInterruptHandler:	
  3374                           
  3375                           ;pin_manager.c: 226: IOCBF5_InterruptHandler = InterruptHandler;
  3376                           
  3377                           ;incstack = 0
  3378                           ; Regs used in _IOCBF5_SetInterruptHandler: [wreg]
  3379  04F8  0020               	movlb	0	; select bank0
  3380  04F9  0824               	movf	IOCBF5_SetInterruptHandler@InterruptHandler+1,w
  3381  04FA  00B8               	movwf	_IOCBF5_InterruptHandler+1
  3382  04FB  0823               	movf	IOCBF5_SetInterruptHandler@InterruptHandler,w
  3383  04FC  00B7               	movwf	_IOCBF5_InterruptHandler
  3384  04FD  0008               	return
  3385  04FE                     __end_of_IOCBF5_SetInterruptHandler:	
  3386                           
  3387                           	psect	text10
  3388  04FE                     __ptext10:	
  3389 ;; *************** function _IOCBF3_SetInterruptHandler *****************
  3390 ;; Defined at:
  3391 ;;		line 195 in file "mcc_generated_files/pin_manager.c"
  3392 ;; Parameters:    Size  Location     Type
  3393 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
  3394 ;;		 -> IOCBF3_DefaultInterruptHandler(1), 
  3395 ;; Auto vars:     Size  Location     Type
  3396 ;;		None
  3397 ;; Return value:  Size  Location     Type
  3398 ;;                  1    wreg      void 
  3399 ;; Registers used:
  3400 ;;		wreg
  3401 ;; Tracked objects:
  3402 ;;		On entry : 0/0
  3403 ;;		On exit  : 0/0
  3404 ;;		Unchanged: 0/0
  3405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3406 ;;      Params:         0       2       0       0       0       0
  3407 ;;      Locals:         0       0       0       0       0       0
  3408 ;;      Temps:          0       0       0       0       0       0
  3409 ;;      Totals:         0       2       0       0       0       0
  3410 ;;Total ram usage:        2 bytes
  3411 ;; Hardware stack levels used:    1
  3412 ;; Hardware stack levels required when called:    9
  3413 ;; This function calls:
  3414 ;;		Nothing
  3415 ;; This function is called by:
  3416 ;;		_PIN_MANAGER_Initialize
  3417 ;; This function uses a non-reentrant model
  3418 ;;
  3419                           
  3420                           
  3421                           ;psect for function _IOCBF3_SetInterruptHandler
  3422  04FE                     _IOCBF3_SetInterruptHandler:	
  3423                           
  3424                           ;pin_manager.c: 196: IOCBF3_InterruptHandler = InterruptHandler;
  3425                           
  3426                           ;incstack = 0
  3427                           ; Regs used in _IOCBF3_SetInterruptHandler: [wreg]
  3428  04FE  0020               	movlb	0	; select bank0
  3429  04FF  0824               	movf	IOCBF3_SetInterruptHandler@InterruptHandler+1,w
  3430  0500  00BA               	movwf	_IOCBF3_InterruptHandler+1
  3431  0501  0823               	movf	IOCBF3_SetInterruptHandler@InterruptHandler,w
  3432  0502  00B9               	movwf	_IOCBF3_InterruptHandler
  3433  0503  0008               	return
  3434  0504                     __end_of_IOCBF3_SetInterruptHandler:	
  3435                           
  3436                           	psect	text11
  3437  0504                     __ptext11:	
  3438 ;; *************** function _IOCBF0_SetInterruptHandler *****************
  3439 ;; Defined at:
  3440 ;;		line 165 in file "mcc_generated_files/pin_manager.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
  3443 ;;		 -> IRQ0_ISR(1), IOCBF0_DefaultInterruptHandler(1), 
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;		None
  3446 ;; Return value:  Size  Location     Type
  3447 ;;                  1    wreg      void 
  3448 ;; Registers used:
  3449 ;;		wreg
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3455 ;;      Params:         0       2       0       0       0       0
  3456 ;;      Locals:         0       0       0       0       0       0
  3457 ;;      Temps:          0       0       0       0       0       0
  3458 ;;      Totals:         0       2       0       0       0       0
  3459 ;;Total ram usage:        2 bytes
  3460 ;; Hardware stack levels used:    1
  3461 ;; Hardware stack levels required when called:    9
  3462 ;; This function calls:
  3463 ;;		Nothing
  3464 ;; This function is called by:
  3465 ;;		_PIN_MANAGER_Initialize
  3466 ;;		_main
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469                           
  3470                           
  3471                           ;psect for function _IOCBF0_SetInterruptHandler
  3472  0504                     _IOCBF0_SetInterruptHandler:	
  3473                           
  3474                           ;pin_manager.c: 166: IOCBF0_InterruptHandler = InterruptHandler;
  3475                           
  3476                           ;incstack = 0
  3477                           ; Regs used in _IOCBF0_SetInterruptHandler: [wreg]
  3478  0504  0020               	movlb	0	; select bank0
  3479  0505  0824               	movf	IOCBF0_SetInterruptHandler@InterruptHandler+1,w
  3480  0506  00BC               	movwf	_IOCBF0_InterruptHandler+1
  3481  0507  0823               	movf	IOCBF0_SetInterruptHandler@InterruptHandler,w
  3482  0508  00BB               	movwf	_IOCBF0_InterruptHandler
  3483  0509  0008               	return
  3484  050A                     __end_of_IOCBF0_SetInterruptHandler:	
  3485                           
  3486                           	psect	text12
  3487  04EB                     __ptext12:	
  3488 ;; *************** function _OSCILLATOR_Initialize *****************
  3489 ;; Defined at:
  3490 ;;		line 63 in file "mcc_generated_files/mcc.c"
  3491 ;; Parameters:    Size  Location     Type
  3492 ;;		None
  3493 ;; Auto vars:     Size  Location     Type
  3494 ;;		None
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  1    wreg      void 
  3497 ;; Registers used:
  3498 ;;		wreg, status,2
  3499 ;; Tracked objects:
  3500 ;;		On entry : 0/0
  3501 ;;		On exit  : 0/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3504 ;;      Params:         0       0       0       0       0       0
  3505 ;;      Locals:         0       0       0       0       0       0
  3506 ;;      Temps:          0       0       0       0       0       0
  3507 ;;      Totals:         0       0       0       0       0       0
  3508 ;;Total ram usage:        0 bytes
  3509 ;; Hardware stack levels used:    1
  3510 ;; Hardware stack levels required when called:    9
  3511 ;; This function calls:
  3512 ;;		Nothing
  3513 ;; This function is called by:
  3514 ;;		_SYSTEM_Initialize
  3515 ;; This function uses a non-reentrant model
  3516 ;;
  3517                           
  3518                           
  3519                           ;psect for function _OSCILLATOR_Initialize
  3520  04EB                     _OSCILLATOR_Initialize:	
  3521                           
  3522                           ;mcc.c: 66: OSCCON = 0x78;
  3523                           
  3524                           ;incstack = 0
  3525                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3526  04EB  3078               	movlw	120
  3527  04EC  0021               	movlb	1	; select bank1
  3528  04ED  0099               	movwf	25	;volatile
  3529                           
  3530                           ;mcc.c: 68: OSCTUNE = 0x00;
  3531  04EE  0198               	clrf	24	;volatile
  3532                           
  3533                           ;mcc.c: 70: BORCON = 0x00;
  3534  04EF  0022               	movlb	2	; select bank2
  3535  04F0  0196               	clrf	22	;volatile
  3536  04F1  0008               	return
  3537  04F2                     __end_of_OSCILLATOR_Initialize:	
  3538                           
  3539                           	psect	text13
  3540  04C9                     __ptext13:	
  3541 ;; *************** function _ADC_Initialize *****************
  3542 ;; Defined at:
  3543 ;;		line 64 in file "mcc_generated_files/adc.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;		None
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;		None
  3548 ;; Return value:  Size  Location     Type
  3549 ;;                  1    wreg      void 
  3550 ;; Registers used:
  3551 ;;		wreg, status,2
  3552 ;; Tracked objects:
  3553 ;;		On entry : 0/0
  3554 ;;		On exit  : 0/0
  3555 ;;		Unchanged: 0/0
  3556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3557 ;;      Params:         0       0       0       0       0       0
  3558 ;;      Locals:         0       0       0       0       0       0
  3559 ;;      Temps:          0       0       0       0       0       0
  3560 ;;      Totals:         0       0       0       0       0       0
  3561 ;;Total ram usage:        0 bytes
  3562 ;; Hardware stack levels used:    1
  3563 ;; Hardware stack levels required when called:    9
  3564 ;; This function calls:
  3565 ;;		Nothing
  3566 ;; This function is called by:
  3567 ;;		_SYSTEM_Initialize
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           
  3571                           
  3572                           ;psect for function _ADC_Initialize
  3573  04C9                     _ADC_Initialize:	
  3574                           
  3575                           ;adc.c: 69: ADCON0 = 0x01;
  3576                           
  3577                           ;incstack = 0
  3578                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3579  04C9  3001               	movlw	1
  3580  04CA  0021               	movlb	1	; select bank1
  3581  04CB  009D               	movwf	29	;volatile
  3582                           
  3583                           ;adc.c: 72: ADCON1 = 0x60;
  3584  04CC  3060               	movlw	96
  3585  04CD  009E               	movwf	30	;volatile
  3586                           
  3587                           ;adc.c: 75: ADRESL = 0x00;
  3588  04CE  019B               	clrf	27	;volatile
  3589                           
  3590                           ;adc.c: 78: ADRESH = 0x00;
  3591  04CF  019C               	clrf	28	;volatile
  3592                           
  3593                           ;adc.c: 81: PIE1bits.ADIE = 1;
  3594  04D0  1711               	bsf	17,6	;volatile
  3595  04D1  0008               	return
  3596  04D2                     __end_of_ADC_Initialize:	
  3597                           
  3598                           	psect	text14
  3599  04B5                     __ptext14:	
  3600 ;; *************** function _POWER_LED_TOGGLE *****************
  3601 ;; Defined at:
  3602 ;;		line 95 in file "main.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;		None
  3605 ;; Auto vars:     Size  Location     Type
  3606 ;;		None
  3607 ;; Return value:  Size  Location     Type
  3608 ;;                  1    wreg      void 
  3609 ;; Registers used:
  3610 ;;		wreg, status,2, status,0, pclath, cstack
  3611 ;; Tracked objects:
  3612 ;;		On entry : 0/0
  3613 ;;		On exit  : 0/0
  3614 ;;		Unchanged: 0/0
  3615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3616 ;;      Params:         0       0       0       0       0       0
  3617 ;;      Locals:         0       0       0       0       0       0
  3618 ;;      Temps:          0       0       0       0       0       0
  3619 ;;      Totals:         0       0       0       0       0       0
  3620 ;;Total ram usage:        0 bytes
  3621 ;; Hardware stack levels used:    1
  3622 ;; Hardware stack levels required when called:   10
  3623 ;; This function calls:
  3624 ;;		_POWER_LED_OFF
  3625 ;;		_POWER_LED_ON
  3626 ;; This function is called by:
  3627 ;;		_main
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           
  3632                           ;psect for function _POWER_LED_TOGGLE
  3633  04B5                     _POWER_LED_TOGGLE:	
  3634                           
  3635                           ;main.c: 96: if (LedState)
  3636                           
  3637                           ;incstack = 0
  3638                           ; Regs used in _POWER_LED_TOGGLE: [wreg+status,2+status,0+pclath+cstack]
  3639  04B5  0020               	movlb	0	; select bank0
  3640  04B6  0845               	movf	_LedState,w
  3641  04B7  1903               	btfsc	3,2
  3642  04B8  2CBC               	goto	l2337
  3643                           
  3644                           ;main.c: 97: POWER_LED_OFF();
  3645  04B9  3185  2510         	fcall	_POWER_LED_OFF
  3646  04BB  0008               	return
  3647  04BC                     l2337:	
  3648                           
  3649                           ;main.c: 98: else;main.c: 99: POWER_LED_ON();
  3650  04BC  3185  250A         	fcall	_POWER_LED_ON
  3651  04BE  0008               	return
  3652  04BF                     __end_of_POWER_LED_TOGGLE:	
  3653                           
  3654                           	psect	text15
  3655  050A                     __ptext15:	
  3656 ;; *************** function _POWER_LED_ON *****************
  3657 ;; Defined at:
  3658 ;;		line 77 in file "main.c"
  3659 ;; Parameters:    Size  Location     Type
  3660 ;;		None
  3661 ;; Auto vars:     Size  Location     Type
  3662 ;;		None
  3663 ;; Return value:  Size  Location     Type
  3664 ;;                  1    wreg      void 
  3665 ;; Registers used:
  3666 ;;		None
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3672 ;;      Params:         0       0       0       0       0       0
  3673 ;;      Locals:         0       0       0       0       0       0
  3674 ;;      Temps:          0       0       0       0       0       0
  3675 ;;      Totals:         0       0       0       0       0       0
  3676 ;;Total ram usage:        0 bytes
  3677 ;; Hardware stack levels used:    1
  3678 ;; Hardware stack levels required when called:    9
  3679 ;; This function calls:
  3680 ;;		Nothing
  3681 ;; This function is called by:
  3682 ;;		_POWER_LED_TOGGLE
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           
  3687                           ;psect for function _POWER_LED_ON
  3688  050A                     _POWER_LED_ON:	
  3689                           
  3690                           ;incstack = 0
  3691                           ; Regs used in _POWER_LED_ON: []
  3692                           ;main.c: 78: do { LATAbits.LATA7 = 1; } while(0);
  3693  050A  0022               	movlb	2	; select bank2
  3694  050B  178C               	bsf	12,7	;volatile
  3695                           
  3696                           ;main.c: 79: LedState = 1;
  3697  050C  0020               	movlb	0	; select bank0
  3698  050D  01C5               	clrf	_LedState
  3699  050E  0AC5               	incf	_LedState,f
  3700  050F  0008               	return
  3701  0510                     __end_of_POWER_LED_ON:	
  3702                           
  3703                           	psect	text16
  3704  0510                     __ptext16:	
  3705 ;; *************** function _POWER_LED_OFF *****************
  3706 ;; Defined at:
  3707 ;;		line 86 in file "main.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;		None
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;		None
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  1    wreg      void 
  3714 ;; Registers used:
  3715 ;;		status,2
  3716 ;; Tracked objects:
  3717 ;;		On entry : 0/0
  3718 ;;		On exit  : 0/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3721 ;;      Params:         0       0       0       0       0       0
  3722 ;;      Locals:         0       0       0       0       0       0
  3723 ;;      Temps:          0       0       0       0       0       0
  3724 ;;      Totals:         0       0       0       0       0       0
  3725 ;;Total ram usage:        0 bytes
  3726 ;; Hardware stack levels used:    1
  3727 ;; Hardware stack levels required when called:    9
  3728 ;; This function calls:
  3729 ;;		Nothing
  3730 ;; This function is called by:
  3731 ;;		_POWER_LED_TOGGLE
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           
  3735                           
  3736                           ;psect for function _POWER_LED_OFF
  3737  0510                     _POWER_LED_OFF:	
  3738                           
  3739                           ;incstack = 0
  3740                           ; Regs used in _POWER_LED_OFF: [status,2]
  3741                           ;main.c: 87: do { LATAbits.LATA7 = 0; } while(0);
  3742  0510  0022               	movlb	2	; select bank2
  3743  0511  138C               	bcf	12,7	;volatile
  3744                           
  3745                           ;main.c: 88: LedState = 0;
  3746  0512  0020               	movlb	0	; select bank0
  3747  0513  01C5               	clrf	_LedState
  3748  0514  0008               	return
  3749  0515                     __end_of_POWER_LED_OFF:	
  3750                           
  3751                           	psect	text17
  3752  0131                     __ptext17:	
  3753 ;; *************** function _MRF89XA_Initialize *****************
  3754 ;; Defined at:
  3755 ;;		line 18 in file "MRF89XA.c"
  3756 ;; Parameters:    Size  Location     Type
  3757 ;;  Address         1    wreg     unsigned char 
  3758 ;;  Mode            1   17[BANK0 ] unsigned char 
  3759 ;;  Modulation      1   18[BANK0 ] unsigned char 
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;  Address         1   20[BANK0 ] unsigned char 
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  1    wreg      void 
  3764 ;; Registers used:
  3765 ;;		wreg, status,2, status,0, pclath, cstack
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3771 ;;      Params:         0       2       0       0       0       0
  3772 ;;      Locals:         0       1       0       0       0       0
  3773 ;;      Temps:          0       1       0       0       0       0
  3774 ;;      Totals:         0       4       0       0       0       0
  3775 ;;Total ram usage:        4 bytes
  3776 ;; Hardware stack levels used:    1
  3777 ;; Hardware stack levels required when called:   14
  3778 ;; This function calls:
  3779 ;;		_MRF89XA_SetMode
  3780 ;;		_MRF89XA_SetModulation
  3781 ;;		_MRF89XA_WriteConfig
  3782 ;; This function is called by:
  3783 ;;		_main
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786                           
  3787                           
  3788                           ;psect for function _MRF89XA_Initialize
  3789  0131                     _MRF89XA_Initialize:	
  3790                           
  3791                           ;incstack = 0
  3792                           ; Regs used in _MRF89XA_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3793                           ;MRF89XA_Initialize@Address stored from wreg
  3794  0131  0020               	movlb	0	; select bank0
  3795  0132  00B4               	movwf	MRF89XA_Initialize@Address
  3796                           
  3797                           ;MRF89XA.c: 19: MRF89XA_SetMode(Mode);
  3798  0133  0831               	movf	MRF89XA_Initialize@Mode,w
  3799  0134  3183  2325  3181   	fcall	_MRF89XA_SetMode
  3800                           
  3801                           ;MRF89XA.c: 21: MRF89XA_SetModulation(Modulation);
  3802  0137  0020               	movlb	0	; select bank0
  3803  0138  0832               	movf	MRF89XA_Initialize@Modulation,w
  3804  0139  3183  2392  3181   	fcall	_MRF89XA_SetModulation
  3805                           
  3806                           ;MRF89XA.c: 23: MRF89XA_WriteConfig(0x02,0x03);
  3807  013C  3003               	movlw	3
  3808  013D  0020               	movlb	0	; select bank0
  3809  013E  00B3               	movwf	??_MRF89XA_Initialize
  3810  013F  0833               	movf	??_MRF89XA_Initialize,w
  3811  0140  00AB               	movwf	MRF89XA_WriteConfig@Data
  3812  0141  3002               	movlw	2
  3813  0142  3184  2440  3181   	fcall	_MRF89XA_WriteConfig
  3814                           
  3815                           ;MRF89XA.c: 24: MRF89XA_WriteConfig(0x03,0xC7);
  3816  0145  30C7               	movlw	199
  3817  0146  0020               	movlb	0	; select bank0
  3818  0147  00B3               	movwf	??_MRF89XA_Initialize
  3819  0148  0833               	movf	??_MRF89XA_Initialize,w
  3820  0149  00AB               	movwf	MRF89XA_WriteConfig@Data
  3821  014A  3003               	movlw	3
  3822  014B  3184  2440  3181   	fcall	_MRF89XA_WriteConfig
  3823                           
  3824                           ;MRF89XA.c: 26: MRF89XA_WriteConfig(0x04, 0b00001100);
  3825  014E  300C               	movlw	12
  3826  014F  0020               	movlb	0	; select bank0
  3827  0150  00B3               	movwf	??_MRF89XA_Initialize
  3828  0151  0833               	movf	??_MRF89XA_Initialize,w
  3829  0152  00AB               	movwf	MRF89XA_WriteConfig@Data
  3830  0153  3004               	movlw	4
  3831  0154  3184  2440  3181   	fcall	_MRF89XA_WriteConfig
  3832                           
  3833                           ;MRF89XA.c: 27: MRF89XA_WriteConfig(0x05, 0b00000010);
  3834  0157  3002               	movlw	2
  3835  0158  0020               	movlb	0	; select bank0
  3836  0159  00B3               	movwf	??_MRF89XA_Initialize
  3837  015A  0833               	movf	??_MRF89XA_Initialize,w
  3838  015B  00AB               	movwf	MRF89XA_WriteConfig@Data
  3839  015C  3005               	movlw	5
  3840  015D  3184  2440  3181   	fcall	_MRF89XA_WriteConfig
  3841                           
  3842                           ;MRF89XA.c: 28: MRF89XA_WriteConfig(0x0D,0b10111000);
  3843  0160  30B8               	movlw	184
  3844  0161  0020               	movlb	0	; select bank0
  3845  0162  00B3               	movwf	??_MRF89XA_Initialize
  3846  0163  0833               	movf	??_MRF89XA_Initialize,w
  3847  0164  00AB               	movwf	MRF89XA_WriteConfig@Data
  3848  0165  300D               	movlw	13
  3849  0166  3184  2440  3181   	fcall	_MRF89XA_WriteConfig
  3850                           
  3851                           ;MRF89XA.c: 29: MRF89XA_WriteConfig(0x0E, 0b00111010);
  3852  0169  303A               	movlw	58
  3853  016A  0020               	movlb	0	; select bank0
  3854  016B  00B3               	movwf	??_MRF89XA_Initialize
  3855  016C  0833               	movf	??_MRF89XA_Initialize,w
  3856  016D  00AB               	movwf	MRF89XA_WriteConfig@Data
  3857  016E  300E               	movlw	14
  3858  016F  3184  2440  3181   	fcall	_MRF89XA_WriteConfig
  3859                           
  3860                           ;MRF89XA.c: 31: MRF89XA_WriteConfig(0x06, 0x7D);
  3861  0172  307D               	movlw	125
  3862  0173  0020               	movlb	0	; select bank0
  3863  0174  00B3               	movwf	??_MRF89XA_Initialize
  3864  0175  0833               	movf	??_MRF89XA_Initialize,w
  3865  0176  00AB               	movwf	MRF89XA_WriteConfig@Data
  3866  0177  3006               	movlw	6
  3867  0178  3184  2440  3181   	fcall	_MRF89XA_WriteConfig
  3868                           
  3869                           ;MRF89XA.c: 32: MRF89XA_WriteConfig(0x07, 0x64);
  3870  017B  3064               	movlw	100
  3871  017C  0020               	movlb	0	; select bank0
  3872  017D  00B3               	movwf	??_MRF89XA_Initialize
  3873  017E  0833               	movf	??_MRF89XA_Initialize,w
  3874  017F  00AB               	movwf	MRF89XA_WriteConfig@Data
  3875  0180  3007               	movlw	7
  3876  0181  3184  2440  3181   	fcall	_MRF89XA_WriteConfig
  3877                           
  3878                           ;MRF89XA.c: 33: MRF89XA_WriteConfig(0x08, 0x14);
  3879  0184  3014               	movlw	20
  3880  0185  0020               	movlb	0	; select bank0
  3881  0186  00B3               	movwf	??_MRF89XA_Initialize
  3882  0187  0833               	movf	??_MRF89XA_Initialize,w
  3883  0188  00AB               	movwf	MRF89XA_WriteConfig@Data
  3884  0189  3008               	movlw	8
  3885  018A  3184  2440  3181   	fcall	_MRF89XA_WriteConfig
  3886                           
  3887                           ;MRF89XA.c: 35: MRF89XA_WriteConfig(0x0C, 0b00100000);
  3888  018D  3020               	movlw	32
  3889  018E  0020               	movlb	0	; select bank0
  3890  018F  00B3               	movwf	??_MRF89XA_Initialize
  3891  0190  0833               	movf	??_MRF89XA_Initialize,w
  3892  0191  00AB               	movwf	MRF89XA_WriteConfig@Data
  3893  0192  300C               	movlw	12
  3894  0193  3184  2440  3181   	fcall	_MRF89XA_WriteConfig
  3895                           
  3896                           ;MRF89XA.c: 36: MRF89XA_WriteConfig(0x10, 0b10010011);
  3897  0196  3093               	movlw	147
  3898  0197  0020               	movlb	0	; select bank0
  3899  0198  00B3               	movwf	??_MRF89XA_Initialize
  3900  0199  0833               	movf	??_MRF89XA_Initialize,w
  3901  019A  00AB               	movwf	MRF89XA_WriteConfig@Data
  3902  019B  3010               	movlw	16
  3903  019C  3184  2440  3181   	fcall	_MRF89XA_WriteConfig
  3904                           
  3905                           ;MRF89XA.c: 37: MRF89XA_WriteConfig(0x11, 0b00111000);
  3906  019F  3038               	movlw	56
  3907  01A0  0020               	movlb	0	; select bank0
  3908  01A1  00B3               	movwf	??_MRF89XA_Initialize
  3909  01A2  0833               	movf	??_MRF89XA_Initialize,w
  3910  01A3  00AB               	movwf	MRF89XA_WriteConfig@Data
  3911  01A4  3011               	movlw	17
  3912  01A5  3184  2440  3181   	fcall	_MRF89XA_WriteConfig
  3913                           
  3914                           ;MRF89XA.c: 39: MRF89XA_WriteConfig(0x12,0b10101010);
  3915  01A8  30AA               	movlw	170
  3916  01A9  0020               	movlb	0	; select bank0
  3917  01AA  00B3               	movwf	??_MRF89XA_Initialize
  3918  01AB  0833               	movf	??_MRF89XA_Initialize,w
  3919  01AC  00AB               	movwf	MRF89XA_WriteConfig@Data
  3920  01AD  3012               	movlw	18
  3921  01AE  3184  2440  3181   	fcall	_MRF89XA_WriteConfig
  3922                           
  3923                           ;MRF89XA.c: 40: MRF89XA_WriteConfig(0x19,0x01);
  3924  01B1  0020               	movlb	0	; select bank0
  3925  01B2  01AB               	clrf	MRF89XA_WriteConfig@Data
  3926  01B3  0AAB               	incf	MRF89XA_WriteConfig@Data,f
  3927  01B4  3019               	movlw	25
  3928  01B5  3184  2440  3181   	fcall	_MRF89XA_WriteConfig
  3929                           
  3930                           ;MRF89XA.c: 41: MRF89XA_WriteConfig(0x18,0x45);
  3931  01B8  3045               	movlw	69
  3932  01B9  0020               	movlb	0	; select bank0
  3933  01BA  00B3               	movwf	??_MRF89XA_Initialize
  3934  01BB  0833               	movf	??_MRF89XA_Initialize,w
  3935  01BC  00AB               	movwf	MRF89XA_WriteConfig@Data
  3936  01BD  3018               	movlw	24
  3937  01BE  3184  2440  3181   	fcall	_MRF89XA_WriteConfig
  3938                           
  3939                           ;MRF89XA.c: 43: MRF89XA_WriteConfig(0x15, 0b00000000);
  3940  01C1  0020               	movlb	0	; select bank0
  3941  01C2  01AB               	clrf	MRF89XA_WriteConfig@Data
  3942  01C3  3015               	movlw	21
  3943  01C4  3184  2440  3181   	fcall	_MRF89XA_WriteConfig
  3944                           
  3945                           ;MRF89XA.c: 44: MRF89XA_WriteConfig(0x1A,0b01110000);
  3946  01C7  3070               	movlw	112
  3947  01C8  0020               	movlb	0	; select bank0
  3948  01C9  00B3               	movwf	??_MRF89XA_Initialize
  3949  01CA  0833               	movf	??_MRF89XA_Initialize,w
  3950  01CB  00AB               	movwf	MRF89XA_WriteConfig@Data
  3951  01CC  301A               	movlw	26
  3952  01CD  3184  2440  3181   	fcall	_MRF89XA_WriteConfig
  3953                           
  3954                           ;MRF89XA.c: 46: MRF89XA_WriteConfig(0x1B,0b00111100);
  3955  01D0  303C               	movlw	60
  3956  01D1  0020               	movlb	0	; select bank0
  3957  01D2  00B3               	movwf	??_MRF89XA_Initialize
  3958  01D3  0833               	movf	??_MRF89XA_Initialize,w
  3959  01D4  00AB               	movwf	MRF89XA_WriteConfig@Data
  3960  01D5  301B               	movlw	27
  3961  01D6  3184  2440  3181   	fcall	_MRF89XA_WriteConfig
  3962                           
  3963                           ;MRF89XA.c: 47: MRF89XA_WriteConfig(0x1C,0b00000100);
  3964  01D9  3004               	movlw	4
  3965  01DA  0020               	movlb	0	; select bank0
  3966  01DB  00B3               	movwf	??_MRF89XA_Initialize
  3967  01DC  0833               	movf	??_MRF89XA_Initialize,w
  3968  01DD  00AB               	movwf	MRF89XA_WriteConfig@Data
  3969  01DE  301C               	movlw	28
  3970  01DF  3184  2440  3181   	fcall	_MRF89XA_WriteConfig
  3971                           
  3972                           ;MRF89XA.c: 48: MRF89XA_WriteConfig(0x1D,Address);
  3973  01E2  0020               	movlb	0	; select bank0
  3974  01E3  0834               	movf	MRF89XA_Initialize@Address,w
  3975  01E4  00B3               	movwf	??_MRF89XA_Initialize
  3976  01E5  0833               	movf	??_MRF89XA_Initialize,w
  3977  01E6  00AB               	movwf	MRF89XA_WriteConfig@Data
  3978  01E7  301D               	movlw	29
  3979  01E8  3184  2440  3181   	fcall	_MRF89XA_WriteConfig
  3980                           
  3981                           ;MRF89XA.c: 49: MRF89XA_WriteConfig(0x1E,0b00100000);
  3982  01EB  3020               	movlw	32
  3983  01EC  0020               	movlb	0	; select bank0
  3984  01ED  00B3               	movwf	??_MRF89XA_Initialize
  3985  01EE  0833               	movf	??_MRF89XA_Initialize,w
  3986  01EF  00AB               	movwf	MRF89XA_WriteConfig@Data
  3987  01F0  301E               	movlw	30
  3988  01F1  3184  2440  3181   	fcall	_MRF89XA_WriteConfig
  3989                           
  3990                           ;MRF89XA.c: 50: MRF89XA_WriteConfig(0x1F,0b00000000);
  3991  01F4  0020               	movlb	0	; select bank0
  3992  01F5  01AB               	clrf	MRF89XA_WriteConfig@Data
  3993  01F6  301F               	movlw	31
  3994  01F7  3184  2440         	fcall	_MRF89XA_WriteConfig
  3995  01F9  0008               	return
  3996  01FA                     __end_of_MRF89XA_Initialize:	
  3997                           
  3998                           	psect	text18
  3999  0392                     __ptext18:	
  4000 ;; *************** function _MRF89XA_SetModulation *****************
  4001 ;; Defined at:
  4002 ;;		line 67 in file "MRF89XA.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;  Modulation      1    wreg     unsigned char 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  Modulation      1   15[BANK0 ] unsigned char 
  4007 ;;  mask            1   16[BANK0 ] unsigned char 
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  1    wreg      void 
  4010 ;; Registers used:
  4011 ;;		wreg, status,2, status,0, pclath, cstack
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4017 ;;      Params:         0       0       0       0       0       0
  4018 ;;      Locals:         0       2       0       0       0       0
  4019 ;;      Temps:          0       1       0       0       0       0
  4020 ;;      Totals:         0       3       0       0       0       0
  4021 ;;Total ram usage:        3 bytes
  4022 ;; Hardware stack levels used:    1
  4023 ;; Hardware stack levels required when called:   13
  4024 ;; This function calls:
  4025 ;;		_MRF89XA_WriteConfig
  4026 ;; This function is called by:
  4027 ;;		_MRF89XA_Initialize
  4028 ;; This function uses a non-reentrant model
  4029 ;;
  4030                           
  4031                           
  4032                           ;psect for function _MRF89XA_SetModulation
  4033  0392                     _MRF89XA_SetModulation:	
  4034                           
  4035                           ;incstack = 0
  4036                           ; Regs used in _MRF89XA_SetModulation: [wreg+status,2+status,0+pclath+cstack]
  4037                           ;MRF89XA_SetModulation@Modulation stored from wreg
  4038  0392  0020               	movlb	0	; select bank0
  4039  0393  00AF               	movwf	MRF89XA_SetModulation@Modulation
  4040                           
  4041                           ;MRF89XA.c: 69: if(Modulation == MRF89XA_MODULATION_FSK)
  4042  0394  3004               	movlw	4
  4043  0395  062F               	xorwf	MRF89XA_SetModulation@Modulation,w
  4044  0396  1D03               	btfss	3,2
  4045  0397  2B9A               	goto	l2297
  4046                           
  4047                           ;MRF89XA.c: 70: mask = 0b10000000;
  4048  0398  3080               	movlw	128
  4049  0399  2B9B               	goto	L1
  4050  039A                     l2297:	
  4051                           
  4052                           ;MRF89XA.c: 71: else;MRF89XA.c: 72: mask = 0b01000000;
  4053  039A  3040               	movlw	64
  4054  039B                     L1:	
  4055  039B  00AE               	movwf	??_MRF89XA_SetModulation
  4056  039C  082E               	movf	??_MRF89XA_SetModulation,w
  4057  039D  00B0               	movwf	MRF89XA_SetModulation@mask
  4058                           
  4059                           ;MRF89XA.c: 74: MRF89XA_WriteConfig(0x01,0b00101000 | mask);
  4060  039E  0830               	movf	MRF89XA_SetModulation@mask,w
  4061  039F  3828               	iorlw	40
  4062  03A0  00AE               	movwf	??_MRF89XA_SetModulation
  4063  03A1  082E               	movf	??_MRF89XA_SetModulation,w
  4064  03A2  00AB               	movwf	MRF89XA_WriteConfig@Data
  4065  03A3  3001               	movlw	1
  4066  03A4  3184  2440         	fcall	_MRF89XA_WriteConfig
  4067  03A6  0008               	return
  4068  03A7                     __end_of_MRF89XA_SetModulation:	
  4069                           
  4070                           	psect	text19
  4071  0325                     __ptext19:	
  4072 ;; *************** function _MRF89XA_SetMode *****************
  4073 ;; Defined at:
  4074 ;;		line 53 in file "MRF89XA.c"
  4075 ;; Parameters:    Size  Location     Type
  4076 ;;  Mode            1    wreg     unsigned char 
  4077 ;; Auto vars:     Size  Location     Type
  4078 ;;  Mode            1   16[BANK0 ] unsigned char 
  4079 ;;  mask            1   15[BANK0 ] unsigned char 
  4080 ;; Return value:  Size  Location     Type
  4081 ;;                  1    wreg      void 
  4082 ;; Registers used:
  4083 ;;		wreg, status,2, status,0, pclath, cstack
  4084 ;; Tracked objects:
  4085 ;;		On entry : 0/0
  4086 ;;		On exit  : 0/0
  4087 ;;		Unchanged: 0/0
  4088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4089 ;;      Params:         0       0       0       0       0       0
  4090 ;;      Locals:         0       2       0       0       0       0
  4091 ;;      Temps:          0       1       0       0       0       0
  4092 ;;      Totals:         0       3       0       0       0       0
  4093 ;;Total ram usage:        3 bytes
  4094 ;; Hardware stack levels used:    1
  4095 ;; Hardware stack levels required when called:   13
  4096 ;; This function calls:
  4097 ;;		_MRF89XA_WriteConfig
  4098 ;; This function is called by:
  4099 ;;		_main
  4100 ;;		_MRF89XA_Initialize
  4101 ;; This function uses a non-reentrant model
  4102 ;;
  4103                           
  4104                           
  4105                           ;psect for function _MRF89XA_SetMode
  4106  0325                     _MRF89XA_SetMode:	
  4107                           
  4108                           ;incstack = 0
  4109                           ; Regs used in _MRF89XA_SetMode: [wreg+status,2+status,0+pclath+cstack]
  4110                           ;MRF89XA_SetMode@Mode stored from wreg
  4111  0325  0020               	movlb	0	; select bank0
  4112  0326  00B0               	movwf	MRF89XA_SetMode@Mode
  4113                           
  4114                           ;MRF89XA.c: 55: if(Mode == MRF89XA_MODE_TX)
  4115  0327  0330               	decf	MRF89XA_SetMode@Mode,w
  4116  0328  1D03               	btfss	3,2
  4117  0329  2B2C               	goto	l2279
  4118                           
  4119                           ;MRF89XA.c: 56: mask = 0b10000000;
  4120  032A  3080               	movlw	128
  4121  032B  2B36               	goto	L3
  4122  032C                     l2279:	
  4123                           
  4124                           ;MRF89XA.c: 57: else if(Mode == MRF89XA_MODE_RX)
  4125  032C  0830               	movf	MRF89XA_SetMode@Mode,w
  4126  032D  1D03               	btfss	3,2
  4127  032E  2B31               	goto	l2283
  4128                           
  4129                           ;MRF89XA.c: 58: mask = 0b01100000;
  4130  032F  3060               	movlw	96
  4131  0330  2B36               	goto	L3
  4132  0331                     l2283:	
  4133                           
  4134                           ;MRF89XA.c: 59: else if(Mode == MRF89XA_MODE_STANDBY)
  4135  0331  3002               	movlw	2
  4136  0332  0630               	xorwf	MRF89XA_SetMode@Mode,w
  4137  0333  1D03               	btfss	3,2
  4138  0334  2B3A               	goto	l2287
  4139                           
  4140                           ;MRF89XA.c: 60: mask = 0b00100000;
  4141  0335  3020               	movlw	32
  4142  0336                     L3:	
  4143  0336  00AE               	movwf	??_MRF89XA_SetMode
  4144  0337  082E               	movf	??_MRF89XA_SetMode,w
  4145  0338  00AF               	movwf	MRF89XA_SetMode@mask
  4146  0339  2B3B               	goto	l2289
  4147  033A                     l2287:	
  4148                           
  4149                           ;MRF89XA.c: 61: else;MRF89XA.c: 62: mask = 0b00000000;
  4150  033A  01AF               	clrf	MRF89XA_SetMode@mask
  4151  033B                     l2289:	
  4152                           
  4153                           ;MRF89XA.c: 64: MRF89XA_WriteConfig(0x00,0b00010000 | mask);
  4154  033B  082F               	movf	MRF89XA_SetMode@mask,w
  4155  033C  3810               	iorlw	16
  4156  033D  00AE               	movwf	??_MRF89XA_SetMode
  4157  033E  082E               	movf	??_MRF89XA_SetMode,w
  4158  033F  00AB               	movwf	MRF89XA_WriteConfig@Data
  4159  0340  3000               	movlw	0
  4160  0341  3184  2440         	fcall	_MRF89XA_WriteConfig
  4161  0343  0008               	return
  4162  0344                     __end_of_MRF89XA_SetMode:	
  4163                           
  4164                           	psect	text20
  4165  0440                     __ptext20:	
  4166 ;; *************** function _MRF89XA_WriteConfig *****************
  4167 ;; Defined at:
  4168 ;;		line 123 in file "MRF89XA.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;  Address         1    wreg     unsigned char 
  4171 ;;  Data            1   11[BANK0 ] unsigned char 
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;  Address         1   13[BANK0 ] unsigned char 
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  1    wreg      unsigned char 
  4176 ;; Registers used:
  4177 ;;		wreg, status,2, status,0, pclath, cstack
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4183 ;;      Params:         0       1       0       0       0       0
  4184 ;;      Locals:         0       1       0       0       0       0
  4185 ;;      Temps:          0       1       0       0       0       0
  4186 ;;      Totals:         0       3       0       0       0       0
  4187 ;;Total ram usage:        3 bytes
  4188 ;; Hardware stack levels used:    1
  4189 ;; Hardware stack levels required when called:   12
  4190 ;; This function calls:
  4191 ;;		_MRF89XA_ExchangeConfig_A
  4192 ;;		_MRF89XA_GetAddress
  4193 ;; This function is called by:
  4194 ;;		_MRF89XA_Initialize
  4195 ;;		_MRF89XA_SetMode
  4196 ;;		_MRF89XA_SetModulation
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           
  4200                           
  4201                           ;psect for function _MRF89XA_WriteConfig
  4202  0440                     _MRF89XA_WriteConfig:	
  4203                           
  4204                           ;incstack = 0
  4205                           ; Regs used in _MRF89XA_WriteConfig: [wreg+status,2+status,0+pclath+cstack]
  4206                           ;MRF89XA_WriteConfig@Address stored from wreg
  4207  0440  0020               	movlb	0	; select bank0
  4208  0441  00AD               	movwf	MRF89XA_WriteConfig@Address
  4209                           
  4210                           ;MRF89XA.c: 124: return MRF89XA_ExchangeConfig_A(MRF89XA_GetAddress(Address, 0), Data);;
      +                          	Return value of _MRF89XA_WriteConfig is never used
  4211  0442  082B               	movf	MRF89XA_WriteConfig@Data,w
  4212  0443  00AC               	movwf	??_MRF89XA_WriteConfig
  4213  0444  082C               	movf	??_MRF89XA_WriteConfig,w
  4214  0445  00A7               	movwf	MRF89XA_ExchangeConfig_A@Data
  4215  0446  01A3               	clrf	MRF89XA_GetAddress@Read
  4216  0447  082D               	movf	MRF89XA_WriteConfig@Address,w
  4217  0448  3184  2404  3184   	fcall	_MRF89XA_GetAddress
  4218  044B  3183  237B         	fcall	_MRF89XA_ExchangeConfig_A
  4219  044D  0008               	return
  4220  044E                     __end_of_MRF89XA_WriteConfig:	
  4221                           
  4222                           	psect	text21
  4223  0404                     __ptext21:	
  4224 ;; *************** function _MRF89XA_GetAddress *****************
  4225 ;; Defined at:
  4226 ;;		line 183 in file "MRF89XA.c"
  4227 ;; Parameters:    Size  Location     Type
  4228 ;;  Address         1    wreg     unsigned char 
  4229 ;;  Read            1    3[BANK0 ] unsigned char 
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;  Address         1    5[BANK0 ] unsigned char 
  4232 ;;  ret             1    6[BANK0 ] unsigned char 
  4233 ;; Return value:  Size  Location     Type
  4234 ;;                  1    wreg      unsigned char 
  4235 ;; Registers used:
  4236 ;;		wreg, status,2, status,0
  4237 ;; Tracked objects:
  4238 ;;		On entry : 0/0
  4239 ;;		On exit  : 0/0
  4240 ;;		Unchanged: 0/0
  4241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4242 ;;      Params:         0       1       0       0       0       0
  4243 ;;      Locals:         0       2       0       0       0       0
  4244 ;;      Temps:          0       1       0       0       0       0
  4245 ;;      Totals:         0       4       0       0       0       0
  4246 ;;Total ram usage:        4 bytes
  4247 ;; Hardware stack levels used:    1
  4248 ;; Hardware stack levels required when called:    9
  4249 ;; This function calls:
  4250 ;;		Nothing
  4251 ;; This function is called by:
  4252 ;;		_MRF89XA_WriteConfig
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           
  4256                           
  4257                           ;psect for function _MRF89XA_GetAddress
  4258  0404                     _MRF89XA_GetAddress:	
  4259                           
  4260                           ;incstack = 0
  4261                           ; Regs used in _MRF89XA_GetAddress: [wreg+status,2+status,0]
  4262                           ;MRF89XA_GetAddress@Address stored from wreg
  4263  0404  0020               	movlb	0	; select bank0
  4264  0405  00A5               	movwf	MRF89XA_GetAddress@Address
  4265                           
  4266                           ;MRF89XA.c: 184: unsigned char ret = Address << 1;
  4267  0406  3525               	lslf	MRF89XA_GetAddress@Address,w
  4268  0407  00A4               	movwf	??_MRF89XA_GetAddress
  4269  0408  0824               	movf	??_MRF89XA_GetAddress,w
  4270  0409  00A6               	movwf	MRF89XA_GetAddress@ret
  4271                           
  4272                           ;MRF89XA.c: 185: if(Read != 0) {
  4273  040A  0823               	movf	MRF89XA_GetAddress@Read,w
  4274  040B  1903               	btfsc	3,2
  4275  040C  2C12               	goto	l2113
  4276                           
  4277                           ;MRF89XA.c: 186: ret = ret | 0b01000000;
  4278  040D  0826               	movf	MRF89XA_GetAddress@ret,w
  4279  040E  3840               	iorlw	64
  4280  040F  00A4               	movwf	??_MRF89XA_GetAddress
  4281  0410  0824               	movf	??_MRF89XA_GetAddress,w
  4282  0411  00A6               	movwf	MRF89XA_GetAddress@ret
  4283  0412                     l2113:	
  4284                           ;MRF89XA.c: 187: } else {
  4285                           
  4286                           
  4287                           ;MRF89XA.c: 189: };MRF89XA.c: 190: return ret;
  4288  0412  0826               	movf	MRF89XA_GetAddress@ret,w
  4289  0413  0008               	return
  4290  0414                     __end_of_MRF89XA_GetAddress:	
  4291                           
  4292                           	psect	text22
  4293  037B                     __ptext22:	
  4294 ;; *************** function _MRF89XA_ExchangeConfig_A *****************
  4295 ;; Defined at:
  4296 ;;		line 155 in file "MRF89XA.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;  Address         1    wreg     unsigned char 
  4299 ;;  Data            1    7[BANK0 ] unsigned char 
  4300 ;; Auto vars:     Size  Location     Type
  4301 ;;  Address         1    9[BANK0 ] unsigned char 
  4302 ;;  ret             1   10[BANK0 ] unsigned char 
  4303 ;; Return value:  Size  Location     Type
  4304 ;;                  1    wreg      unsigned char 
  4305 ;; Registers used:
  4306 ;;		wreg, status,2, status,0, pclath, cstack
  4307 ;; Tracked objects:
  4308 ;;		On entry : 0/0
  4309 ;;		On exit  : 0/0
  4310 ;;		Unchanged: 0/0
  4311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4312 ;;      Params:         0       1       0       0       0       0
  4313 ;;      Locals:         0       2       0       0       0       0
  4314 ;;      Temps:          0       1       0       0       0       0
  4315 ;;      Totals:         0       4       0       0       0       0
  4316 ;;Total ram usage:        4 bytes
  4317 ;; Hardware stack levels used:    1
  4318 ;; Hardware stack levels required when called:   11
  4319 ;; This function calls:
  4320 ;;		_MRF89XA_SPI_ExchangeByte
  4321 ;; This function is called by:
  4322 ;;		_MRF89XA_WriteConfig
  4323 ;; This function uses a non-reentrant model
  4324 ;;
  4325                           
  4326                           
  4327                           ;psect for function _MRF89XA_ExchangeConfig_A
  4328  037B                     _MRF89XA_ExchangeConfig_A:	
  4329                           
  4330                           ;incstack = 0
  4331                           ; Regs used in _MRF89XA_ExchangeConfig_A: [wreg+status,2+status,0+pclath+cstack]
  4332                           ;MRF89XA_ExchangeConfig_A@Address stored from wreg
  4333  037B  0020               	movlb	0	; select bank0
  4334  037C  00A9               	movwf	MRF89XA_ExchangeConfig_A@Address
  4335                           
  4336                           ;MRF89XA.c: 156: do { LATAbits.LATA1 = 1; } while(0);
  4337  037D  0022               	movlb	2	; select bank2
  4338  037E  148C               	bsf	12,1	;volatile
  4339                           
  4340                           ;MRF89XA.c: 157: do { LATAbits.LATA2 = 0; } while(0);
  4341  037F  110C               	bcf	12,2	;volatile
  4342                           
  4343                           ;MRF89XA.c: 158: MRF89XA_SPI_ExchangeByte(Address);
  4344  0380  0020               	movlb	0	; select bank0
  4345  0381  0829               	movf	MRF89XA_ExchangeConfig_A@Address,w
  4346  0382  3184  24D2  3183   	fcall	_MRF89XA_SPI_ExchangeByte
  4347                           
  4348                           ;MRF89XA.c: 159: unsigned char ret = MRF89XA_SPI_ExchangeByte(Data);
  4349  0385  0020               	movlb	0	; select bank0
  4350  0386  0827               	movf	MRF89XA_ExchangeConfig_A@Data,w
  4351  0387  3184  24D2         	fcall	_MRF89XA_SPI_ExchangeByte
  4352  0389  0020               	movlb	0	; select bank0
  4353  038A  00A8               	movwf	??_MRF89XA_ExchangeConfig_A
  4354  038B  0828               	movf	??_MRF89XA_ExchangeConfig_A,w
  4355  038C  00AA               	movwf	MRF89XA_ExchangeConfig_A@ret
  4356  038D  0022               	movlb	2	; select bank2
  4357  038E  150C               	bsf	12,2	;volatile
  4358                           
  4359                           ;MRF89XA.c: 161: return ret;
  4360  038F  0020               	movlb	0	; select bank0
  4361  0390  082A               	movf	MRF89XA_ExchangeConfig_A@ret,w
  4362  0391  0008               	return
  4363  0392                     __end_of_MRF89XA_ExchangeConfig_A:	
  4364                           
  4365                           	psect	text23
  4366  04D2                     __ptext23:	
  4367 ;; *************** function _MRF89XA_SPI_ExchangeByte *****************
  4368 ;; Defined at:
  4369 ;;		line 77 in file "MRF89XA.c"
  4370 ;; Parameters:    Size  Location     Type
  4371 ;;  byte            1    wreg     unsigned char 
  4372 ;; Auto vars:     Size  Location     Type
  4373 ;;  byte            1    5[BANK0 ] unsigned char 
  4374 ;; Return value:  Size  Location     Type
  4375 ;;                  1    wreg      unsigned char 
  4376 ;; Registers used:
  4377 ;;		wreg, pclath, cstack
  4378 ;; Tracked objects:
  4379 ;;		On entry : 0/0
  4380 ;;		On exit  : 0/0
  4381 ;;		Unchanged: 0/0
  4382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4383 ;;      Params:         0       0       0       0       0       0
  4384 ;;      Locals:         0       1       0       0       0       0
  4385 ;;      Temps:          0       1       0       0       0       0
  4386 ;;      Totals:         0       2       0       0       0       0
  4387 ;;Total ram usage:        2 bytes
  4388 ;; Hardware stack levels used:    1
  4389 ;; Hardware stack levels required when called:   10
  4390 ;; This function calls:
  4391 ;;		_spi1_exchangeByte
  4392 ;; This function is called by:
  4393 ;;		_MRF89XA_ExchangeConfig_A
  4394 ;;		_MRF89XA_ExchangeConfig
  4395 ;; This function uses a non-reentrant model
  4396 ;;
  4397                           
  4398                           
  4399                           ;psect for function _MRF89XA_SPI_ExchangeByte
  4400  04D2                     _MRF89XA_SPI_ExchangeByte:	
  4401                           
  4402                           ;incstack = 0
  4403                           ; Regs used in _MRF89XA_SPI_ExchangeByte: [wreg+pclath+cstack]
  4404                           ;MRF89XA_SPI_ExchangeByte@byte stored from wreg
  4405  04D2  0020               	movlb	0	; select bank0
  4406  04D3  00A5               	movwf	MRF89XA_SPI_ExchangeByte@byte
  4407                           
  4408                           ;MRF89XA.c: 78: return spi1_exchangeByte(byte);
  4409  04D4  0825               	movf	MRF89XA_SPI_ExchangeByte@byte,w
  4410  04D5  00A4               	movwf	??_MRF89XA_SPI_ExchangeByte
  4411  04D6  0824               	movf	??_MRF89XA_SPI_ExchangeByte,w
  4412  04D7  00A3               	movwf	spi1_exchangeByte@b
  4413  04D8  3184  2414         	fcall	_spi1_exchangeByte
  4414  04DA  0008               	return
  4415  04DB                     __end_of_MRF89XA_SPI_ExchangeByte:	
  4416                           
  4417                           	psect	text24
  4418  0414                     __ptext24:	
  4419 ;; *************** function _spi1_exchangeByte *****************
  4420 ;; Defined at:
  4421 ;;		line 64 in file "mcc_generated_files/spi1_driver.c"
  4422 ;; Parameters:    Size  Location     Type
  4423 ;;  b               1    3[BANK0 ] unsigned char 
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;		None
  4426 ;; Return value:  Size  Location     Type
  4427 ;;                  1    wreg      unsigned char 
  4428 ;; Registers used:
  4429 ;;		wreg
  4430 ;; Tracked objects:
  4431 ;;		On entry : 0/0
  4432 ;;		On exit  : 0/0
  4433 ;;		Unchanged: 0/0
  4434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4435 ;;      Params:         0       1       0       0       0       0
  4436 ;;      Locals:         0       0       0       0       0       0
  4437 ;;      Temps:          0       0       0       0       0       0
  4438 ;;      Totals:         0       1       0       0       0       0
  4439 ;;Total ram usage:        1 bytes
  4440 ;; Hardware stack levels used:    1
  4441 ;; Hardware stack levels required when called:    9
  4442 ;; This function calls:
  4443 ;;		Nothing
  4444 ;; This function is called by:
  4445 ;;		_MRF89XA_SPI_ExchangeByte
  4446 ;;		_spi1_exchangeBlock
  4447 ;;		_spi1_writeBlock
  4448 ;;		_spi1_readBlock
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           
  4453                           ;psect for function _spi1_exchangeByte
  4454  0414                     _spi1_exchangeByte:	
  4455                           
  4456                           ;Skip over the trampoline to the duplicate function for level 1
  4457  0414  1C7E               	btfss	126,0
  4458  0415  2C18               	goto	l2029
  4459  0416  3184  2CBF         	ljmp	i1l2019
  4460  0418                     _spi1_exchangeByte$intlevel0:	
  4461  0418                     l2029:	
  4462                           ;incstack = 0
  4463                           ; Regs used in _spi1_exchangeByte: [wreg]
  4464                           
  4465                           
  4466                           ;spi1_driver.c: 66: SSP1BUF = b;
  4467  0418  0020               	movlb	0	; select bank0
  4468  0419  0823               	movf	spi1_exchangeByte@b,w
  4469  041A  0024               	movlb	4	; select bank4
  4470  041B  0091               	movwf	17	;volatile
  4471  041C                     l364:	
  4472                           ;spi1_driver.c: 67: while(!PIR1bits.SSP1IF);
  4473                           
  4474  041C  0020               	movlb	0	; select bank0
  4475  041D  1D91               	btfss	17,3	;volatile
  4476  041E  2C1C               	goto	l364
  4477                           
  4478                           ;spi1_driver.c: 68: PIR1bits.SSP1IF = 0;
  4479  041F  1191               	bcf	17,3	;volatile
  4480                           
  4481                           ;spi1_driver.c: 69: return SSP1BUF;
  4482  0420  0024               	movlb	4	; select bank4
  4483  0421  0811               	movf	17,w	;volatile
  4484  0422  0008               	return
  4485  0423                     __end_of_spi1_exchangeByte:	
  4486                           
  4487                           	psect	text25
  4488  02C8                     __ptext25:	
  4489 ;; *************** function _Delay_Xms *****************
  4490 ;; Defined at:
  4491 ;;		line 66 in file "main.c"
  4492 ;; Parameters:    Size  Location     Type
  4493 ;;  delay           4    3[BANK0 ] long 
  4494 ;; Auto vars:     Size  Location     Type
  4495 ;;  i               4    8[BANK0 ] long 
  4496 ;; Return value:  Size  Location     Type
  4497 ;;                  1    wreg      void 
  4498 ;; Registers used:
  4499 ;;		wreg
  4500 ;; Tracked objects:
  4501 ;;		On entry : 0/0
  4502 ;;		On exit  : 0/0
  4503 ;;		Unchanged: 0/0
  4504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4505 ;;      Params:         0       4       0       0       0       0
  4506 ;;      Locals:         0       4       0       0       0       0
  4507 ;;      Temps:          0       1       0       0       0       0
  4508 ;;      Totals:         0       9       0       0       0       0
  4509 ;;Total ram usage:        9 bytes
  4510 ;; Hardware stack levels used:    1
  4511 ;; Hardware stack levels required when called:    9
  4512 ;; This function calls:
  4513 ;;		Nothing
  4514 ;; This function is called by:
  4515 ;;		_main
  4516 ;;		_MRF89XA_SendData
  4517 ;;		_MRF89XA_SendCommand
  4518 ;; This function uses a non-reentrant model
  4519 ;;
  4520                           
  4521                           
  4522                           ;psect for function _Delay_Xms
  4523  02C8                     _Delay_Xms:	
  4524                           
  4525                           ;main.c: 67: for(long i = 0; i < delay; i++) {
  4526                           
  4527                           ;incstack = 0
  4528                           ; Regs used in _Delay_Xms: [wreg]
  4529  02C8  3000               	movlw	0
  4530  02C9  0020               	movlb	0	; select bank0
  4531  02CA  00AB               	movwf	Delay_Xms@i+3
  4532  02CB  3000               	movlw	0
  4533  02CC  00AA               	movwf	Delay_Xms@i+2
  4534  02CD  3000               	movlw	0
  4535  02CE  00A9               	movwf	Delay_Xms@i+1
  4536  02CF  3000               	movlw	0
  4537  02D0  00A8               	movwf	Delay_Xms@i
  4538  02D1                     l444:	
  4539  02D1  082B               	movf	Delay_Xms@i+3,w
  4540  02D2  3A80               	xorlw	128
  4541  02D3  00A7               	movwf	??_Delay_Xms
  4542  02D4  0826               	movf	Delay_Xms@delay+3,w
  4543  02D5  3A80               	xorlw	128
  4544  02D6  0227               	subwf	??_Delay_Xms,w
  4545  02D7  1D03               	skipz
  4546  02D8  2AE3               	goto	u933
  4547  02D9  0825               	movf	Delay_Xms@delay+2,w
  4548  02DA  022A               	subwf	Delay_Xms@i+2,w
  4549  02DB  1D03               	skipz
  4550  02DC  2AE3               	goto	u933
  4551  02DD  0824               	movf	Delay_Xms@delay+1,w
  4552  02DE  0229               	subwf	Delay_Xms@i+1,w
  4553  02DF  1D03               	skipz
  4554  02E0  2AE3               	goto	u933
  4555  02E1  0823               	movf	Delay_Xms@delay,w
  4556  02E2  0228               	subwf	Delay_Xms@i,w
  4557  02E3                     u933:	
  4558  02E3  1803               	btfsc	3,0
  4559  02E4  0008               	return
  4560                           
  4561                           ;main.c: 68: _delay((unsigned long)((1)*(16000000/4000.0)));
  4562  02E5  3006               	movlw	6
  4563  02E6  0020               	movlb	0	; select bank0
  4564  02E7  00A7               	movwf	??_Delay_Xms
  4565  02E8  3030               	movlw	48
  4566  02E9                     u1277:	
  4567  02E9  0B89               	decfsz	9,f
  4568  02EA  2AE9               	goto	u1277
  4569  02EB  0BA7               	decfsz	??_Delay_Xms,f
  4570  02EC  2AE9               	goto	u1277
  4571  02ED  0000               	nop
  4572  02EE  3001               	movlw	1
  4573  02EF  0020               	movlb	0	; select bank0
  4574  02F0  07A8               	addwf	Delay_Xms@i,f
  4575  02F1  3000               	movlw	0
  4576  02F2  3DA9               	addwfc	Delay_Xms@i+1,f
  4577  02F3  3000               	movlw	0
  4578  02F4  3DAA               	addwfc	Delay_Xms@i+2,f
  4579  02F5  3000               	movlw	0
  4580  02F6  3DAB               	addwfc	Delay_Xms@i+3,f
  4581  02F7  2AD1               	goto	l444
  4582  02F8                     __end_of_Delay_Xms:	
  4583                           
  4584                           	psect	intentry
  4585  0004                     __pintentry:	
  4586 ;; *************** function _INTERRUPT_InterruptManager *****************
  4587 ;; Defined at:
  4588 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4589 ;; Parameters:    Size  Location     Type
  4590 ;;		None
  4591 ;; Auto vars:     Size  Location     Type
  4592 ;;		None
  4593 ;; Return value:  Size  Location     Type
  4594 ;;                  1    wreg      void 
  4595 ;; Registers used:
  4596 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4597 ;; Tracked objects:
  4598 ;;		On entry : 0/0
  4599 ;;		On exit  : 0/0
  4600 ;;		Unchanged: 0/0
  4601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4602 ;;      Params:         0       0       0       0       0       0
  4603 ;;      Locals:         0       0       0       0       0       0
  4604 ;;      Temps:          0       0       0       0       0       0
  4605 ;;      Totals:         0       0       0       0       0       0
  4606 ;;Total ram usage:        0 bytes
  4607 ;; Hardware stack levels used:    1
  4608 ;; Hardware stack levels required when called:    8
  4609 ;; This function calls:
  4610 ;;		_ADC_ISR
  4611 ;;		_PIN_MANAGER_IOC
  4612 ;;		_TMR2_ISR
  4613 ;;		_spi1_isr
  4614 ;; This function is called by:
  4615 ;;		Interrupt level 1
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619  0004                     _INTERRUPT_InterruptManager:	
  4620                           
  4621                           ;incstack = 0
  4622  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4623                           
  4624                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4625  0005  3180               	pagesel	$
  4626                           
  4627                           ;interrupt_manager.c: 55: if(INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1)
  4628  0006  198B               	btfsc	11,3	;volatile
  4629  0007  1C0B               	btfss	11,0	;volatile
  4630  0008  280D               	goto	i1l147
  4631                           
  4632                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: PIN_MANAGER_IOC();
  4633  0009  3183  23E0  3180   	fcall	_PIN_MANAGER_IOC
  4634                           
  4635                           ;interrupt_manager.c: 58: }
  4636  000C  282B               	goto	i1l157
  4637  000D                     i1l147:	
  4638                           
  4639                           ;interrupt_manager.c: 59: else if(INTCONbits.PEIE == 1)
  4640  000D  1F0B               	btfss	11,6	;volatile
  4641  000E  282B               	goto	i1l157
  4642                           
  4643                           ;interrupt_manager.c: 60: {;interrupt_manager.c: 61: if(PIE1bits.SSP1IE == 1 && PIR1bits
      +                          .SSP1IF == 1)
  4644  000F  0021               	movlb	1	; select bank1
  4645  0010  1D91               	btfss	17,3	;volatile
  4646  0011  2819               	goto	i1l150
  4647  0012  0020               	movlb	0	; select bank0
  4648  0013  1D91               	btfss	17,3	;volatile
  4649  0014  2819               	goto	i1l150
  4650                           
  4651                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: spi1_isr();
  4652  0015  3185  2515  3180   	fcall	_spi1_isr
  4653                           
  4654                           ;interrupt_manager.c: 64: }
  4655  0018  282B               	goto	i1l157
  4656  0019                     i1l150:	
  4657                           
  4658                           ;interrupt_manager.c: 65: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  4659  0019  0021               	movlb	1	; select bank1
  4660  001A  1F11               	btfss	17,6	;volatile
  4661  001B  2823               	goto	i1l152
  4662  001C  0020               	movlb	0	; select bank0
  4663  001D  1F11               	btfss	17,6	;volatile
  4664  001E  2823               	goto	i1l152
  4665                           
  4666                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: ADC_ISR();
  4667  001F  3185  2529  3180   	fcall	_ADC_ISR
  4668                           
  4669                           ;interrupt_manager.c: 68: }
  4670  0022  282B               	goto	i1l157
  4671  0023                     i1l152:	
  4672                           
  4673                           ;interrupt_manager.c: 69: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  4674  0023  0021               	movlb	1	; select bank1
  4675  0024  1C91               	btfss	17,1	;volatile
  4676  0025  282B               	goto	i1l157
  4677  0026  0020               	movlb	0	; select bank0
  4678  0027  1C91               	btfss	17,1	;volatile
  4679  0028  282B               	goto	i1l157
  4680                           
  4681                           ;interrupt_manager.c: 70: {;interrupt_manager.c: 71: TMR2_ISR();
  4682  0029  3183  23BB         	fcall	_TMR2_ISR
  4683  002B                     i1l157:	
  4684                           ;interrupt_manager.c: 76: };interrupt_manager.c: 77: }
  4685                           
  4686                           ;interrupt_manager.c: 72: }
  4687                           
  4688  002B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4689  002C  0009               	retfie
  4690  002D                     __end_of_INTERRUPT_InterruptManager:	
  4691                           
  4692                           	psect	text27
  4693  0515                     __ptext27:	
  4694 ;; *************** function _spi1_isr *****************
  4695 ;; Defined at:
  4696 ;;		line 113 in file "mcc_generated_files/spi1_driver.c"
  4697 ;; Parameters:    Size  Location     Type
  4698 ;;		None
  4699 ;; Auto vars:     Size  Location     Type
  4700 ;;		None
  4701 ;; Return value:  Size  Location     Type
  4702 ;;                  1    wreg      void 
  4703 ;; Registers used:
  4704 ;;		None
  4705 ;; Tracked objects:
  4706 ;;		On entry : 0/0
  4707 ;;		On exit  : 0/0
  4708 ;;		Unchanged: 0/0
  4709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4710 ;;      Params:         0       0       0       0       0       0
  4711 ;;      Locals:         0       0       0       0       0       0
  4712 ;;      Temps:          0       0       0       0       0       0
  4713 ;;      Totals:         0       0       0       0       0       0
  4714 ;;Total ram usage:        0 bytes
  4715 ;; Hardware stack levels used:    1
  4716 ;; This function calls:
  4717 ;;		Nothing
  4718 ;; This function is called by:
  4719 ;;		_INTERRUPT_InterruptManager
  4720 ;; This function uses a non-reentrant model
  4721 ;;
  4722                           
  4723                           
  4724                           ;psect for function _spi1_isr
  4725  0515                     _spi1_isr:	
  4726                           
  4727                           ;spi1_driver.c: 114: if(PIR1bits.SSP1IF == 1){
  4728                           
  4729                           ;incstack = 0
  4730                           ; Regs used in _spi1_isr: []
  4731  0515  0020               	movlb	0	; select bank0
  4732  0516  1D91               	btfss	17,3	;volatile
  4733  0517  0008               	return
  4734                           
  4735                           ;spi1_driver.c: 117: };spi1_driver.c: 118: PIR1bits.SSP1IF = 0;
  4736  0518  1191               	bcf	17,3	;volatile
  4737  0519  0008               	return
  4738  051A                     __end_of_spi1_isr:	
  4739                           
  4740                           	psect	text28
  4741  03BB                     __ptext28:	
  4742 ;; *************** function _TMR2_ISR *****************
  4743 ;; Defined at:
  4744 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  4745 ;; Parameters:    Size  Location     Type
  4746 ;;		None
  4747 ;; Auto vars:     Size  Location     Type
  4748 ;;		None
  4749 ;; Return value:  Size  Location     Type
  4750 ;;                  1    wreg      void 
  4751 ;; Registers used:
  4752 ;;		wreg, status,2, status,0, pclath, cstack
  4753 ;; Tracked objects:
  4754 ;;		On entry : 0/0
  4755 ;;		On exit  : 0/0
  4756 ;;		Unchanged: 0/0
  4757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4758 ;;      Params:         0       0       0       0       0       0
  4759 ;;      Locals:         0       0       0       0       0       0
  4760 ;;      Temps:          0       0       0       0       0       0
  4761 ;;      Totals:         0       0       0       0       0       0
  4762 ;;Total ram usage:        0 bytes
  4763 ;; Hardware stack levels used:    1
  4764 ;; Hardware stack levels required when called:    2
  4765 ;; This function calls:
  4766 ;;		_TMR2_CallBack
  4767 ;; This function is called by:
  4768 ;;		_INTERRUPT_InterruptManager
  4769 ;; This function uses a non-reentrant model
  4770 ;;
  4771                           
  4772                           
  4773                           ;psect for function _TMR2_ISR
  4774  03BB                     _TMR2_ISR:	
  4775                           
  4776                           ;tmr2.c: 121: static volatile unsigned int CountCallBack = 0;;tmr2.c: 124: PIR1bits.TMR2
      +                          IF = 0;
  4777                           
  4778                           ;incstack = 0
  4779                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  4780  03BB  0020               	movlb	0	; select bank0
  4781  03BC  1091               	bcf	17,1	;volatile
  4782                           
  4783                           ;tmr2.c: 127: if (++CountCallBack >= 100)
  4784  03BD  3001               	movlw	1
  4785  03BE  07C1               	addwf	TMR2_ISR@CountCallBack,f	;volatile
  4786  03BF  3000               	movlw	0
  4787  03C0  3DC2               	addwfc	TMR2_ISR@CountCallBack+1,f	;volatile
  4788  03C1  3000               	movlw	0
  4789  03C2  0242               	subwf	TMR2_ISR@CountCallBack+1,w	;volatile
  4790  03C3  3064               	movlw	100
  4791  03C4  1903               	skipnz
  4792  03C5  0241               	subwf	TMR2_ISR@CountCallBack,w	;volatile
  4793  03C6  1C03               	skipc
  4794  03C7  0008               	return
  4795                           
  4796                           ;tmr2.c: 128: {;tmr2.c: 130: TMR2_CallBack();
  4797  03C8  3184  24AA         	fcall	_TMR2_CallBack
  4798                           
  4799                           ;tmr2.c: 133: CountCallBack = 0;
  4800  03CA  0020               	movlb	0	; select bank0
  4801  03CB  01C1               	clrf	TMR2_ISR@CountCallBack	;volatile
  4802  03CC  01C2               	clrf	TMR2_ISR@CountCallBack+1	;volatile
  4803  03CD  0008               	return
  4804  03CE                     __end_of_TMR2_ISR:	
  4805                           
  4806                           	psect	text29
  4807  04AA                     __ptext29:	
  4808 ;; *************** function _TMR2_CallBack *****************
  4809 ;; Defined at:
  4810 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  4811 ;; Parameters:    Size  Location     Type
  4812 ;;		None
  4813 ;; Auto vars:     Size  Location     Type
  4814 ;;		None
  4815 ;; Return value:  Size  Location     Type
  4816 ;;                  1    wreg      void 
  4817 ;; Registers used:
  4818 ;;		wreg, status,2, status,0, pclath, cstack
  4819 ;; Tracked objects:
  4820 ;;		On entry : 0/0
  4821 ;;		On exit  : 0/0
  4822 ;;		Unchanged: 0/0
  4823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4824 ;;      Params:         0       0       0       0       0       0
  4825 ;;      Locals:         0       0       0       0       0       0
  4826 ;;      Temps:          0       0       0       0       0       0
  4827 ;;      Totals:         0       0       0       0       0       0
  4828 ;;Total ram usage:        0 bytes
  4829 ;; Hardware stack levels used:    1
  4830 ;; Hardware stack levels required when called:    1
  4831 ;; This function calls:
  4832 ;;		Absolute function
  4833 ;;		_TMR2_DefaultInterruptHandler
  4834 ;; This function is called by:
  4835 ;;		_TMR2_ISR
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839                           
  4840                           ;psect for function _TMR2_CallBack
  4841  04AA                     _TMR2_CallBack:	
  4842                           
  4843                           ;tmr2.c: 141: if(TMR2_InterruptHandler)
  4844                           
  4845                           ;incstack = 0
  4846                           ; Regs used in _TMR2_CallBack: [wreg+status,2+status,0+pclath+cstack]
  4847  04AA  0020               	movlb	0	; select bank0
  4848  04AB  083D               	movf	_TMR2_InterruptHandler,w
  4849  04AC  043E               	iorwf	_TMR2_InterruptHandler+1,w
  4850  04AD  1903               	btfsc	3,2
  4851  04AE  0008               	return
  4852                           
  4853                           ;tmr2.c: 142: {;tmr2.c: 143: TMR2_InterruptHandler();
  4854  04AF  083E               	movf	_TMR2_InterruptHandler+1,w
  4855  04B0  008A               	movwf	10
  4856  04B1  083D               	movf	_TMR2_InterruptHandler,w
  4857  04B2  000A               	callw
  4858  04B3  3184               	pagesel	$
  4859  04B4  0008               	return
  4860  04B5                     __end_of_TMR2_CallBack:	
  4861                           
  4862                           	psect	text30
  4863  052D                     __ptext30:	
  4864 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  4865 ;; Defined at:
  4866 ;;		line 151 in file "mcc_generated_files/tmr2.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;		None
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;		None
  4871 ;; Return value:  Size  Location     Type
  4872 ;;                  1    wreg      void 
  4873 ;; Registers used:
  4874 ;;		None
  4875 ;; Tracked objects:
  4876 ;;		On entry : 0/0
  4877 ;;		On exit  : 0/0
  4878 ;;		Unchanged: 0/0
  4879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4880 ;;      Params:         0       0       0       0       0       0
  4881 ;;      Locals:         0       0       0       0       0       0
  4882 ;;      Temps:          0       0       0       0       0       0
  4883 ;;      Totals:         0       0       0       0       0       0
  4884 ;;Total ram usage:        0 bytes
  4885 ;; Hardware stack levels used:    1
  4886 ;; This function calls:
  4887 ;;		Nothing
  4888 ;; This function is called by:
  4889 ;;		_TMR2_Initialize
  4890 ;;		_TMR2_CallBack
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           
  4894                           
  4895                           ;psect for function _TMR2_DefaultInterruptHandler
  4896  052D                     _TMR2_DefaultInterruptHandler:	
  4897                           
  4898                           ;incstack = 0
  4899                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  4900  052D  0008               	return
  4901  052E                     __end_of_TMR2_DefaultInterruptHandler:	
  4902                           
  4903                           	psect	text31
  4904  03E0                     __ptext31:	
  4905 ;; *************** function _PIN_MANAGER_IOC *****************
  4906 ;; Defined at:
  4907 ;;		line 128 in file "mcc_generated_files/pin_manager.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;		None
  4910 ;; Auto vars:     Size  Location     Type
  4911 ;;		None
  4912 ;; Return value:  Size  Location     Type
  4913 ;;                  1    wreg      void 
  4914 ;; Registers used:
  4915 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4916 ;; Tracked objects:
  4917 ;;		On entry : 0/0
  4918 ;;		On exit  : 0/0
  4919 ;;		Unchanged: 0/0
  4920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4921 ;;      Params:         0       0       0       0       0       0
  4922 ;;      Locals:         0       0       0       0       0       0
  4923 ;;      Temps:          0       0       0       0       0       0
  4924 ;;      Totals:         0       0       0       0       0       0
  4925 ;;Total ram usage:        0 bytes
  4926 ;; Hardware stack levels used:    1
  4927 ;; Hardware stack levels required when called:    7
  4928 ;; This function calls:
  4929 ;;		_IOCBF0_ISR
  4930 ;;		_IOCBF3_ISR
  4931 ;;		_IOCBF5_ISR
  4932 ;; This function is called by:
  4933 ;;		_INTERRUPT_InterruptManager
  4934 ;; This function uses a non-reentrant model
  4935 ;;
  4936                           
  4937                           
  4938                           ;psect for function _PIN_MANAGER_IOC
  4939  03E0                     _PIN_MANAGER_IOC:	
  4940                           
  4941                           ;pin_manager.c: 131: if(IOCBFbits.IOCBF0 == 1)
  4942                           
  4943                           ;incstack = 0
  4944                           ; Regs used in _PIN_MANAGER_IOC: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4945  03E0  0027               	movlb	7	; select bank7
  4946  03E1  1C16               	btfss	22,0	;volatile
  4947  03E2  2BE6               	goto	i1l2313
  4948                           
  4949                           ;pin_manager.c: 132: {;pin_manager.c: 133: IOCBF0_ISR();
  4950  03E3  3184  2484  3183   	fcall	_IOCBF0_ISR
  4951  03E6                     i1l2313:	
  4952                           
  4953                           ;pin_manager.c: 134: };pin_manager.c: 136: if(IOCBFbits.IOCBF3 == 1)
  4954  03E6  0027               	movlb	7	; select bank7
  4955  03E7  1D96               	btfss	22,3	;volatile
  4956  03E8  2BEC               	goto	i1l2317
  4957                           
  4958                           ;pin_manager.c: 137: {;pin_manager.c: 138: IOCBF3_ISR();
  4959  03E9  3184  2477  3183   	fcall	_IOCBF3_ISR
  4960  03EC                     i1l2317:	
  4961                           
  4962                           ;pin_manager.c: 139: };pin_manager.c: 141: if(IOCBFbits.IOCBF5 == 1)
  4963  03EC  0027               	movlb	7	; select bank7
  4964  03ED  1E96               	btfss	22,5	;volatile
  4965  03EE  0008               	return
  4966                           
  4967                           ;pin_manager.c: 142: {;pin_manager.c: 143: IOCBF5_ISR();
  4968  03EF  3184  246A         	fcall	_IOCBF5_ISR
  4969  03F1  0008               	return
  4970  03F2                     __end_of_PIN_MANAGER_IOC:	
  4971                           
  4972                           	psect	text32
  4973  046A                     __ptext32:	
  4974 ;; *************** function _IOCBF5_ISR *****************
  4975 ;; Defined at:
  4976 ;;		line 210 in file "mcc_generated_files/pin_manager.c"
  4977 ;; Parameters:    Size  Location     Type
  4978 ;;		None
  4979 ;; Auto vars:     Size  Location     Type
  4980 ;;		None
  4981 ;; Return value:  Size  Location     Type
  4982 ;;                  1    wreg      void 
  4983 ;; Registers used:
  4984 ;;		wreg, status,2, status,0, pclath, cstack
  4985 ;; Tracked objects:
  4986 ;;		On entry : 0/0
  4987 ;;		On exit  : 0/0
  4988 ;;		Unchanged: 0/0
  4989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4990 ;;      Params:         0       0       0       0       0       0
  4991 ;;      Locals:         0       0       0       0       0       0
  4992 ;;      Temps:          0       0       0       0       0       0
  4993 ;;      Totals:         0       0       0       0       0       0
  4994 ;;Total ram usage:        0 bytes
  4995 ;; Hardware stack levels used:    1
  4996 ;; Hardware stack levels required when called:    1
  4997 ;; This function calls:
  4998 ;;		Absolute function
  4999 ;;		_IOCBF5_DefaultInterruptHandler
  5000 ;; This function is called by:
  5001 ;;		_PIN_MANAGER_IOC
  5002 ;; This function uses a non-reentrant model
  5003 ;;
  5004                           
  5005                           
  5006                           ;psect for function _IOCBF5_ISR
  5007  046A                     _IOCBF5_ISR:	
  5008                           
  5009                           ;pin_manager.c: 215: if(IOCBF5_InterruptHandler)
  5010                           
  5011                           ;incstack = 0
  5012                           ; Regs used in _IOCBF5_ISR: [wreg+status,2+status,0+pclath+cstack]
  5013  046A  0020               	movlb	0	; select bank0
  5014  046B  0837               	movf	_IOCBF5_InterruptHandler,w
  5015  046C  0438               	iorwf	_IOCBF5_InterruptHandler+1,w
  5016  046D  1903               	btfsc	3,2
  5017  046E  2C74               	goto	i1l2269
  5018                           
  5019                           ;pin_manager.c: 216: {;pin_manager.c: 217: IOCBF5_InterruptHandler();
  5020  046F  0838               	movf	_IOCBF5_InterruptHandler+1,w
  5021  0470  008A               	movwf	10
  5022  0471  0837               	movf	_IOCBF5_InterruptHandler,w
  5023  0472  000A               	callw
  5024  0473  3184               	pagesel	$
  5025  0474                     i1l2269:	
  5026                           
  5027                           ;pin_manager.c: 218: };pin_manager.c: 219: IOCBFbits.IOCBF5 = 0;
  5028  0474  0027               	movlb	7	; select bank7
  5029  0475  1296               	bcf	22,5	;volatile
  5030  0476  0008               	return
  5031  0477                     __end_of_IOCBF5_ISR:	
  5032                           
  5033                           	psect	text33
  5034  052E                     __ptext33:	
  5035 ;; *************** function _IOCBF5_DefaultInterruptHandler *****************
  5036 ;; Defined at:
  5037 ;;		line 232 in file "mcc_generated_files/pin_manager.c"
  5038 ;; Parameters:    Size  Location     Type
  5039 ;;		None
  5040 ;; Auto vars:     Size  Location     Type
  5041 ;;		None
  5042 ;; Return value:  Size  Location     Type
  5043 ;;                  1    wreg      void 
  5044 ;; Registers used:
  5045 ;;		None
  5046 ;; Tracked objects:
  5047 ;;		On entry : 0/0
  5048 ;;		On exit  : 0/0
  5049 ;;		Unchanged: 0/0
  5050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5051 ;;      Params:         0       0       0       0       0       0
  5052 ;;      Locals:         0       0       0       0       0       0
  5053 ;;      Temps:          0       0       0       0       0       0
  5054 ;;      Totals:         0       0       0       0       0       0
  5055 ;;Total ram usage:        0 bytes
  5056 ;; Hardware stack levels used:    1
  5057 ;; This function calls:
  5058 ;;		Nothing
  5059 ;; This function is called by:
  5060 ;;		_PIN_MANAGER_Initialize
  5061 ;;		_IOCBF5_ISR
  5062 ;; This function uses a non-reentrant model
  5063 ;;
  5064                           
  5065                           
  5066                           ;psect for function _IOCBF5_DefaultInterruptHandler
  5067  052E                     _IOCBF5_DefaultInterruptHandler:	
  5068                           
  5069                           ;incstack = 0
  5070                           ; Regs used in _IOCBF5_DefaultInterruptHandler: []
  5071  052E  0008               	return
  5072  052F                     __end_of_IOCBF5_DefaultInterruptHandler:	
  5073                           
  5074                           	psect	text34
  5075  0477                     __ptext34:	
  5076 ;; *************** function _IOCBF3_ISR *****************
  5077 ;; Defined at:
  5078 ;;		line 180 in file "mcc_generated_files/pin_manager.c"
  5079 ;; Parameters:    Size  Location     Type
  5080 ;;		None
  5081 ;; Auto vars:     Size  Location     Type
  5082 ;;		None
  5083 ;; Return value:  Size  Location     Type
  5084 ;;                  1    wreg      void 
  5085 ;; Registers used:
  5086 ;;		wreg, status,2, status,0, pclath, cstack
  5087 ;; Tracked objects:
  5088 ;;		On entry : 0/0
  5089 ;;		On exit  : 0/0
  5090 ;;		Unchanged: 0/0
  5091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5092 ;;      Params:         0       0       0       0       0       0
  5093 ;;      Locals:         0       0       0       0       0       0
  5094 ;;      Temps:          0       0       0       0       0       0
  5095 ;;      Totals:         0       0       0       0       0       0
  5096 ;;Total ram usage:        0 bytes
  5097 ;; Hardware stack levels used:    1
  5098 ;; Hardware stack levels required when called:    1
  5099 ;; This function calls:
  5100 ;;		Absolute function
  5101 ;;		_IOCBF3_DefaultInterruptHandler
  5102 ;; This function is called by:
  5103 ;;		_PIN_MANAGER_IOC
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           
  5108                           ;psect for function _IOCBF3_ISR
  5109  0477                     _IOCBF3_ISR:	
  5110                           
  5111                           ;pin_manager.c: 185: if(IOCBF3_InterruptHandler)
  5112                           
  5113                           ;incstack = 0
  5114                           ; Regs used in _IOCBF3_ISR: [wreg+status,2+status,0+pclath+cstack]
  5115  0477  0020               	movlb	0	; select bank0
  5116  0478  0839               	movf	_IOCBF3_InterruptHandler,w
  5117  0479  043A               	iorwf	_IOCBF3_InterruptHandler+1,w
  5118  047A  1903               	btfsc	3,2
  5119  047B  2C81               	goto	i1l2263
  5120                           
  5121                           ;pin_manager.c: 186: {;pin_manager.c: 187: IOCBF3_InterruptHandler();
  5122  047C  083A               	movf	_IOCBF3_InterruptHandler+1,w
  5123  047D  008A               	movwf	10
  5124  047E  0839               	movf	_IOCBF3_InterruptHandler,w
  5125  047F  000A               	callw
  5126  0480  3184               	pagesel	$
  5127  0481                     i1l2263:	
  5128                           
  5129                           ;pin_manager.c: 188: };pin_manager.c: 189: IOCBFbits.IOCBF3 = 0;
  5130  0481  0027               	movlb	7	; select bank7
  5131  0482  1196               	bcf	22,3	;volatile
  5132  0483  0008               	return
  5133  0484                     __end_of_IOCBF3_ISR:	
  5134                           
  5135                           	psect	text35
  5136  052F                     __ptext35:	
  5137 ;; *************** function _IOCBF3_DefaultInterruptHandler *****************
  5138 ;; Defined at:
  5139 ;;		line 202 in file "mcc_generated_files/pin_manager.c"
  5140 ;; Parameters:    Size  Location     Type
  5141 ;;		None
  5142 ;; Auto vars:     Size  Location     Type
  5143 ;;		None
  5144 ;; Return value:  Size  Location     Type
  5145 ;;                  1    wreg      void 
  5146 ;; Registers used:
  5147 ;;		None
  5148 ;; Tracked objects:
  5149 ;;		On entry : 0/0
  5150 ;;		On exit  : 0/0
  5151 ;;		Unchanged: 0/0
  5152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5153 ;;      Params:         0       0       0       0       0       0
  5154 ;;      Locals:         0       0       0       0       0       0
  5155 ;;      Temps:          0       0       0       0       0       0
  5156 ;;      Totals:         0       0       0       0       0       0
  5157 ;;Total ram usage:        0 bytes
  5158 ;; Hardware stack levels used:    1
  5159 ;; This function calls:
  5160 ;;		Nothing
  5161 ;; This function is called by:
  5162 ;;		_PIN_MANAGER_Initialize
  5163 ;;		_IOCBF3_ISR
  5164 ;; This function uses a non-reentrant model
  5165 ;;
  5166                           
  5167                           
  5168                           ;psect for function _IOCBF3_DefaultInterruptHandler
  5169  052F                     _IOCBF3_DefaultInterruptHandler:	
  5170                           
  5171                           ;incstack = 0
  5172                           ; Regs used in _IOCBF3_DefaultInterruptHandler: []
  5173  052F  0008               	return
  5174  0530                     __end_of_IOCBF3_DefaultInterruptHandler:	
  5175                           
  5176                           	psect	text36
  5177  0484                     __ptext36:	
  5178 ;; *************** function _IOCBF0_ISR *****************
  5179 ;; Defined at:
  5180 ;;		line 150 in file "mcc_generated_files/pin_manager.c"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;		None
  5183 ;; Auto vars:     Size  Location     Type
  5184 ;;		None
  5185 ;; Return value:  Size  Location     Type
  5186 ;;                  1    wreg      void 
  5187 ;; Registers used:
  5188 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5189 ;; Tracked objects:
  5190 ;;		On entry : 0/0
  5191 ;;		On exit  : 0/0
  5192 ;;		Unchanged: 0/0
  5193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5194 ;;      Params:         0       0       0       0       0       0
  5195 ;;      Locals:         0       0       0       0       0       0
  5196 ;;      Temps:          0       0       0       0       0       0
  5197 ;;      Totals:         0       0       0       0       0       0
  5198 ;;Total ram usage:        0 bytes
  5199 ;; Hardware stack levels used:    1
  5200 ;; Hardware stack levels required when called:    6
  5201 ;; This function calls:
  5202 ;;		Absolute function
  5203 ;;		_IOCBF0_DefaultInterruptHandler
  5204 ;;		_IRQ0_ISR
  5205 ;; This function is called by:
  5206 ;;		_PIN_MANAGER_IOC
  5207 ;; This function uses a non-reentrant model
  5208 ;;
  5209                           
  5210                           
  5211                           ;psect for function _IOCBF0_ISR
  5212  0484                     _IOCBF0_ISR:	
  5213                           
  5214                           ;pin_manager.c: 155: if(IOCBF0_InterruptHandler)
  5215                           
  5216                           ;incstack = 0
  5217                           ; Regs used in _IOCBF0_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5218  0484  0020               	movlb	0	; select bank0
  5219  0485  083B               	movf	_IOCBF0_InterruptHandler,w
  5220  0486  043C               	iorwf	_IOCBF0_InterruptHandler+1,w
  5221  0487  1903               	btfsc	3,2
  5222  0488  2C8E               	goto	i1l2257
  5223                           
  5224                           ;pin_manager.c: 156: {;pin_manager.c: 157: IOCBF0_InterruptHandler();
  5225  0489  083C               	movf	_IOCBF0_InterruptHandler+1,w
  5226  048A  008A               	movwf	10
  5227  048B  083B               	movf	_IOCBF0_InterruptHandler,w
  5228  048C  000A               	callw
  5229  048D  3184               	pagesel	$
  5230  048E                     i1l2257:	
  5231                           
  5232                           ;pin_manager.c: 158: };pin_manager.c: 159: IOCBFbits.IOCBF0 = 0;
  5233  048E  0027               	movlb	7	; select bank7
  5234  048F  1016               	bcf	22,0	;volatile
  5235  0490  0008               	return
  5236  0491                     __end_of_IOCBF0_ISR:	
  5237                           
  5238                           	psect	text37
  5239  0530                     __ptext37:	
  5240 ;; *************** function _IOCBF0_DefaultInterruptHandler *****************
  5241 ;; Defined at:
  5242 ;;		line 172 in file "mcc_generated_files/pin_manager.c"
  5243 ;; Parameters:    Size  Location     Type
  5244 ;;		None
  5245 ;; Auto vars:     Size  Location     Type
  5246 ;;		None
  5247 ;; Return value:  Size  Location     Type
  5248 ;;                  1    wreg      void 
  5249 ;; Registers used:
  5250 ;;		None
  5251 ;; Tracked objects:
  5252 ;;		On entry : 0/0
  5253 ;;		On exit  : 0/0
  5254 ;;		Unchanged: 0/0
  5255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5256 ;;      Params:         0       0       0       0       0       0
  5257 ;;      Locals:         0       0       0       0       0       0
  5258 ;;      Temps:          0       0       0       0       0       0
  5259 ;;      Totals:         0       0       0       0       0       0
  5260 ;;Total ram usage:        0 bytes
  5261 ;; Hardware stack levels used:    1
  5262 ;; This function calls:
  5263 ;;		Nothing
  5264 ;; This function is called by:
  5265 ;;		_PIN_MANAGER_Initialize
  5266 ;;		_IOCBF0_ISR
  5267 ;; This function uses a non-reentrant model
  5268 ;;
  5269                           
  5270                           
  5271                           ;psect for function _IOCBF0_DefaultInterruptHandler
  5272  0530                     _IOCBF0_DefaultInterruptHandler:	
  5273                           
  5274                           ;incstack = 0
  5275                           ; Regs used in _IOCBF0_DefaultInterruptHandler: []
  5276  0530  0008               	return
  5277  0531                     __end_of_IOCBF0_DefaultInterruptHandler:	
  5278                           
  5279                           	psect	text38
  5280  0251                     __ptext38:	
  5281 ;; *************** function _IRQ0_ISR *****************
  5282 ;; Defined at:
  5283 ;;		line 149 in file "main.c"
  5284 ;; Parameters:    Size  Location     Type
  5285 ;;		None
  5286 ;; Auto vars:     Size  Location     Type
  5287 ;;  Data1           1    2[BANK0 ] unsigned char 
  5288 ;;  Dummy           1    0        unsigned char 
  5289 ;;  Address         1    0        unsigned char 
  5290 ;; Return value:  Size  Location     Type
  5291 ;;                  1    wreg      void 
  5292 ;; Registers used:
  5293 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5294 ;; Tracked objects:
  5295 ;;		On entry : 0/0
  5296 ;;		On exit  : 0/0
  5297 ;;		Unchanged: 0/0
  5298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5299 ;;      Params:         0       0       0       0       0       0
  5300 ;;      Locals:         0       3       0       0       0       0
  5301 ;;      Temps:          1       0       0       0       0       0
  5302 ;;      Totals:         1       3       0       0       0       0
  5303 ;;Total ram usage:        4 bytes
  5304 ;; Hardware stack levels used:    1
  5305 ;; Hardware stack levels required when called:    5
  5306 ;; This function calls:
  5307 ;;		_MRF89XA_IsFifoEmpty
  5308 ;;		_ReadFifo
  5309 ;;		i1_Delay_Xms
  5310 ;; This function is called by:
  5311 ;;		_main
  5312 ;;		_IOCBF0_ISR
  5313 ;; This function uses a non-reentrant model
  5314 ;;
  5315                           
  5316                           
  5317                           ;psect for function _IRQ0_ISR
  5318  0251                     _IRQ0_ISR:	
  5319                           
  5320                           ;incstack = 0
  5321                           ; Regs used in _IRQ0_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5322  0251  3183  2344  3182   	fcall	_ReadFifo
  5323                           
  5324                           ;main.c: 155: unsigned char Data1 = ReadFifo();
  5325  0254  3183  2344  3182   	fcall	_ReadFifo
  5326  0257  00FC               	movwf	??_IRQ0_ISR
  5327  0258  087C               	movf	??_IRQ0_ISR,w
  5328  0259  0020               	movlb	0	; select bank0
  5329  025A  00A2               	movwf	IRQ0_ISR@Data1
  5330                           
  5331                           ;main.c: 157: if(Data1 == 0x55) {
  5332  025B  3055               	movlw	85
  5333  025C  0622               	xorwf	IRQ0_ISR@Data1,w
  5334  025D  1D03               	btfss	3,2
  5335  025E  2A6B               	goto	i1l500
  5336                           
  5337                           ;main.c: 158: LATAbits.LATA3 = !LATAbits.LATA3;
  5338  025F  1003               	clrc
  5339  0260  0022               	movlb	2	; select bank2
  5340  0261  1D8C               	btfss	12,3	;volatile
  5341  0262  1403               	setc
  5342  0263  1C03               	btfss	3,0
  5343  0264  2A68               	goto	u76_20
  5344  0265  0022               	movlb	2	; select bank2
  5345  0266  158C               	bsf	12,3	;volatile
  5346  0267  2A85               	goto	i1l2157
  5347  0268                     u76_20:	
  5348  0268  0022               	movlb	2	; select bank2
  5349  0269  118C               	bcf	12,3	;volatile
  5350                           
  5351                           ;main.c: 159: }
  5352  026A  2A85               	goto	i1l2157
  5353  026B                     i1l500:	
  5354                           ;main.c: 160: else {;main.c: 161: do { LATAbits.LATA3 = 0; } while(0);
  5355                           
  5356  026B  0022               	movlb	2	; select bank2
  5357  026C  118C               	bcf	12,3	;volatile
  5358                           
  5359                           ;main.c: 162: Delay_Xms(500);
  5360  026D  3000               	movlw	0
  5361  026E  00F3               	movwf	i1Delay_Xms@delay+3
  5362  026F  3000               	movlw	0
  5363  0270  00F2               	movwf	i1Delay_Xms@delay+2
  5364  0271  3001               	movlw	1
  5365  0272  00F1               	movwf	i1Delay_Xms@delay+1
  5366  0273  30F4               	movlw	244
  5367  0274  00F0               	movwf	i1Delay_Xms@delay
  5368  0275  3182  22F8  3182   	fcall	i1_Delay_Xms
  5369  0278  0022               	movlb	2	; select bank2
  5370  0279  158C               	bsf	12,3	;volatile
  5371                           
  5372                           ;main.c: 164: Delay_Xms(500);
  5373  027A  3000               	movlw	0
  5374  027B  00F3               	movwf	i1Delay_Xms@delay+3
  5375  027C  3000               	movlw	0
  5376  027D  00F2               	movwf	i1Delay_Xms@delay+2
  5377  027E  3001               	movlw	1
  5378  027F  00F1               	movwf	i1Delay_Xms@delay+1
  5379  0280  30F4               	movlw	244
  5380  0281  00F0               	movwf	i1Delay_Xms@delay
  5381  0282  3182  22F8  3182   	fcall	i1_Delay_Xms
  5382  0285                     i1l2157:	
  5383                           ;main.c: 169: while(!MRF89XA_IsFifoEmpty()) {
  5384                           
  5385  0285  3184  2491  3182   	fcall	_MRF89XA_IsFifoEmpty
  5386  0288  3A00               	xorlw	0
  5387  0289  1D03               	btfss	3,2
  5388  028A  2A8F               	goto	i1l506
  5389  028B  3183  2344  3182   	fcall	_ReadFifo
  5390  028E  2A85               	goto	i1l2157
  5391  028F                     i1l506:	
  5392  028F  0000               	nop	;# 
  5393  0290  0008               	return
  5394  0291                     __end_of_IRQ0_ISR:	
  5395                           
  5396                           	psect	text39
  5397  02F8                     __ptext39:	
  5398 ;; *************** function i1_Delay_Xms *****************
  5399 ;; Defined at:
  5400 ;;		line 66 in file "main.c"
  5401 ;; Parameters:    Size  Location     Type
  5402 ;;  delay           4    0[COMMON] long 
  5403 ;; Auto vars:     Size  Location     Type
  5404 ;;  Delay_Xms       4    5[COMMON] long 
  5405 ;; Return value:  Size  Location     Type
  5406 ;;                  1    wreg      void 
  5407 ;; Registers used:
  5408 ;;		wreg
  5409 ;; Tracked objects:
  5410 ;;		On entry : 0/0
  5411 ;;		On exit  : 0/0
  5412 ;;		Unchanged: 0/0
  5413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5414 ;;      Params:         4       0       0       0       0       0
  5415 ;;      Locals:         4       0       0       0       0       0
  5416 ;;      Temps:          1       0       0       0       0       0
  5417 ;;      Totals:         9       0       0       0       0       0
  5418 ;;Total ram usage:        9 bytes
  5419 ;; Hardware stack levels used:    1
  5420 ;; This function calls:
  5421 ;;		Nothing
  5422 ;; This function is called by:
  5423 ;;		_IRQ0_ISR
  5424 ;; This function uses a non-reentrant model
  5425 ;;
  5426                           
  5427                           
  5428                           ;psect for function i1_Delay_Xms
  5429  02F8                     i1_Delay_Xms:	
  5430                           
  5431                           ;main.c: 67: for(long i = 0; i < delay; i++) {
  5432                           
  5433                           ;incstack = 0
  5434                           ; Regs used in i1_Delay_Xms: [wreg]
  5435  02F8  3000               	movlw	0
  5436  02F9  00F8               	movwf	i1Delay_Xms@i+3
  5437  02FA  3000               	movlw	0
  5438  02FB  00F7               	movwf	i1Delay_Xms@i+2
  5439  02FC  3000               	movlw	0
  5440  02FD  00F6               	movwf	i1Delay_Xms@i+1
  5441  02FE  3000               	movlw	0
  5442  02FF  00F5               	movwf	i1Delay_Xms@i
  5443  0300                     i1l444:	
  5444  0300  0878               	movf	i1Delay_Xms@i+3,w
  5445  0301  3A80               	xorlw	128
  5446  0302  00F4               	movwf	??i1_Delay_Xms
  5447  0303  0873               	movf	i1Delay_Xms@delay+3,w
  5448  0304  3A80               	xorlw	128
  5449  0305  0274               	subwf	??i1_Delay_Xms,w
  5450  0306  1D03               	skipz
  5451  0307  2B12               	goto	u74_23
  5452  0308  0872               	movf	i1Delay_Xms@delay+2,w
  5453  0309  0277               	subwf	i1Delay_Xms@i+2,w
  5454  030A  1D03               	skipz
  5455  030B  2B12               	goto	u74_23
  5456  030C  0871               	movf	i1Delay_Xms@delay+1,w
  5457  030D  0276               	subwf	i1Delay_Xms@i+1,w
  5458  030E  1D03               	skipz
  5459  030F  2B12               	goto	u74_23
  5460  0310  0870               	movf	i1Delay_Xms@delay,w
  5461  0311  0275               	subwf	i1Delay_Xms@i,w
  5462  0312                     u74_23:	
  5463  0312  1803               	btfsc	3,0
  5464  0313  0008               	return
  5465                           
  5466                           ;main.c: 68: _delay((unsigned long)((1)*(16000000/4000.0)));
  5467  0314  3006               	movlw	6
  5468  0315  00F4               	movwf	??i1_Delay_Xms
  5469  0316  3030               	movlw	48
  5470  0317                     u128_27:	
  5471  0317  0B89               	decfsz	9,f
  5472  0318  2B17               	goto	u128_27
  5473  0319  0BF4               	decfsz	??i1_Delay_Xms,f
  5474  031A  2B17               	goto	u128_27
  5475  031B  3200               	nop2
  5476  031C  3001               	movlw	1
  5477  031D  07F5               	addwf	i1Delay_Xms@i,f
  5478  031E  3000               	movlw	0
  5479  031F  3DF6               	addwfc	i1Delay_Xms@i+1,f
  5480  0320  3000               	movlw	0
  5481  0321  3DF7               	addwfc	i1Delay_Xms@i+2,f
  5482  0322  3000               	movlw	0
  5483  0323  3DF8               	addwfc	i1Delay_Xms@i+3,f
  5484  0324  2B00               	goto	i1l444
  5485  0325                     __end_ofi1_Delay_Xms:	
  5486                           
  5487                           	psect	text40
  5488  0344                     __ptext40:	
  5489 ;; *************** function _ReadFifo *****************
  5490 ;; Defined at:
  5491 ;;		line 141 in file "main.c"
  5492 ;; Parameters:    Size  Location     Type
  5493 ;;		None
  5494 ;; Auto vars:     Size  Location     Type
  5495 ;;  res             1    8[COMMON] unsigned char 
  5496 ;; Return value:  Size  Location     Type
  5497 ;;                  1    wreg      unsigned char 
  5498 ;; Registers used:
  5499 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5500 ;; Tracked objects:
  5501 ;;		On entry : 0/0
  5502 ;;		On exit  : 0/0
  5503 ;;		Unchanged: 0/0
  5504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5505 ;;      Params:         0       0       0       0       0       0
  5506 ;;      Locals:         1       0       0       0       0       0
  5507 ;;      Temps:          2       0       0       0       0       0
  5508 ;;      Totals:         3       0       0       0       0       0
  5509 ;;Total ram usage:        3 bytes
  5510 ;; Hardware stack levels used:    1
  5511 ;; Hardware stack levels required when called:    4
  5512 ;; This function calls:
  5513 ;;		_MRF89XA_ReadFifo
  5514 ;; This function is called by:
  5515 ;;		_IRQ0_ISR
  5516 ;; This function uses a non-reentrant model
  5517 ;;
  5518                           
  5519                           
  5520                           ;psect for function _ReadFifo
  5521  0344                     _ReadFifo:	
  5522                           
  5523                           ;main.c: 142: unsigned char res = MRF89XA_ReadFifo();
  5524                           
  5525                           ;incstack = 0
  5526                           ; Regs used in _ReadFifo: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5527  0344  3185  2522         	fcall	_MRF89XA_ReadFifo
  5528  0346  00F6               	movwf	??_ReadFifo
  5529  0347  0876               	movf	??_ReadFifo,w
  5530  0348  00F8               	movwf	ReadFifo@res
  5531                           
  5532                           ;main.c: 143: rxB[rxC++] = res;
  5533  0349  087D               	movf	_rxC,w
  5534  034A  3E70               	addlw	112
  5535  034B  00F6               	movwf	??_ReadFifo
  5536  034C  01F7               	clrf	??_ReadFifo+1
  5537  034D  3020               	movlw	32
  5538  034E  3DF7               	addwfc	??_ReadFifo+1,f
  5539  034F  0876               	movf	??_ReadFifo,w
  5540  0350  0086               	movwf	6
  5541  0351  0877               	movf	??_ReadFifo+1,w
  5542  0352  0087               	movwf	7
  5543  0353  0878               	movf	ReadFifo@res,w
  5544  0354  0081               	movwf	1
  5545  0355  3001               	movlw	1
  5546  0356  00F6               	movwf	??_ReadFifo
  5547  0357  0876               	movf	??_ReadFifo,w
  5548  0358  07FD               	addwf	_rxC,f
  5549                           
  5550                           ;main.c: 144: rxB[rxC] = 0;
  5551  0359  087D               	movf	_rxC,w
  5552  035A  3E70               	addlw	112
  5553  035B  0086               	movwf	6
  5554  035C  0187               	clrf	7
  5555  035D  3020               	movlw	32
  5556  035E  3D87               	addwfc	7,f
  5557  035F  0181               	clrf	1
  5558                           
  5559                           ;main.c: 145: return res;
  5560  0360  0878               	movf	ReadFifo@res,w
  5561  0361  0008               	return
  5562  0362                     __end_of_ReadFifo:	
  5563                           
  5564                           	psect	text41
  5565  0522                     __ptext41:	
  5566 ;; *************** function _MRF89XA_ReadFifo *****************
  5567 ;; Defined at:
  5568 ;;		line 131 in file "MRF89XA.c"
  5569 ;; Parameters:    Size  Location     Type
  5570 ;;		None
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;		None
  5573 ;; Return value:  Size  Location     Type
  5574 ;;                  1    wreg      unsigned char 
  5575 ;; Registers used:
  5576 ;;		wreg, pclath, cstack
  5577 ;; Tracked objects:
  5578 ;;		On entry : 0/0
  5579 ;;		On exit  : 0/0
  5580 ;;		Unchanged: 0/0
  5581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5582 ;;      Params:         0       0       0       0       0       0
  5583 ;;      Locals:         0       0       0       0       0       0
  5584 ;;      Temps:          0       0       0       0       0       0
  5585 ;;      Totals:         0       0       0       0       0       0
  5586 ;;Total ram usage:        0 bytes
  5587 ;; Hardware stack levels used:    1
  5588 ;; Hardware stack levels required when called:    3
  5589 ;; This function calls:
  5590 ;;		_MRF89XA_ExchangeFifo
  5591 ;; This function is called by:
  5592 ;;		_ReadFifo
  5593 ;; This function uses a non-reentrant model
  5594 ;;
  5595                           
  5596                           
  5597                           ;psect for function _MRF89XA_ReadFifo
  5598  0522                     _MRF89XA_ReadFifo:	
  5599                           
  5600                           ;MRF89XA.c: 132: return MRF89XA_ExchangeFifo(0x00);
  5601                           
  5602                           ;incstack = 0
  5603                           ; Regs used in _MRF89XA_ReadFifo: [wreg+pclath+cstack]
  5604  0522  3000               	movlw	0
  5605  0523  3184  244E         	fcall	_MRF89XA_ExchangeFifo
  5606  0525  0008               	return
  5607  0526                     __end_of_MRF89XA_ReadFifo:	
  5608                           
  5609                           	psect	text42
  5610  044E                     __ptext42:	
  5611 ;; *************** function _MRF89XA_ExchangeFifo *****************
  5612 ;; Defined at:
  5613 ;;		line 139 in file "MRF89XA.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;  Data            1    wreg     unsigned char 
  5616 ;; Auto vars:     Size  Location     Type
  5617 ;;  Data            1    4[COMMON] unsigned char 
  5618 ;;  ret             1    5[COMMON] unsigned char 
  5619 ;; Return value:  Size  Location     Type
  5620 ;;                  1    wreg      unsigned char 
  5621 ;; Registers used:
  5622 ;;		wreg, pclath, cstack
  5623 ;; Tracked objects:
  5624 ;;		On entry : 0/0
  5625 ;;		On exit  : 0/0
  5626 ;;		Unchanged: 0/0
  5627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5628 ;;      Params:         0       0       0       0       0       0
  5629 ;;      Locals:         2       0       0       0       0       0
  5630 ;;      Temps:          1       0       0       0       0       0
  5631 ;;      Totals:         3       0       0       0       0       0
  5632 ;;Total ram usage:        3 bytes
  5633 ;; Hardware stack levels used:    1
  5634 ;; Hardware stack levels required when called:    2
  5635 ;; This function calls:
  5636 ;;		i1_MRF89XA_SPI_ExchangeByte
  5637 ;; This function is called by:
  5638 ;;		_MRF89XA_ReadFifo
  5639 ;;		_MRF89XA_WriteFifo
  5640 ;; This function uses a non-reentrant model
  5641 ;;
  5642                           
  5643                           
  5644                           ;psect for function _MRF89XA_ExchangeFifo
  5645  044E                     _MRF89XA_ExchangeFifo:	
  5646                           
  5647                           ;incstack = 0
  5648                           ; Regs used in _MRF89XA_ExchangeFifo: [wreg+pclath+cstack]
  5649                           ;MRF89XA_ExchangeFifo@Data stored from wreg
  5650  044E  00F4               	movwf	MRF89XA_ExchangeFifo@Data
  5651                           
  5652                           ;MRF89XA.c: 140: do { LATAbits.LATA2 = 1; } while(0);
  5653  044F  0022               	movlb	2	; select bank2
  5654  0450  150C               	bsf	12,2	;volatile
  5655                           
  5656                           ;MRF89XA.c: 141: do { LATAbits.LATA1 = 0; } while(0);
  5657  0451  108C               	bcf	12,1	;volatile
  5658                           
  5659                           ;MRF89XA.c: 142: unsigned char ret = MRF89XA_SPI_ExchangeByte(Data);
  5660  0452  0874               	movf	MRF89XA_ExchangeFifo@Data,w
  5661  0453  3184  24E3         	fcall	i1_MRF89XA_SPI_ExchangeByte
  5662  0455  00F3               	movwf	??_MRF89XA_ExchangeFifo
  5663  0456  0873               	movf	??_MRF89XA_ExchangeFifo,w
  5664  0457  00F5               	movwf	MRF89XA_ExchangeFifo@ret
  5665  0458  0022               	movlb	2	; select bank2
  5666  0459  148C               	bsf	12,1	;volatile
  5667                           
  5668                           ;MRF89XA.c: 144: return ret;
  5669  045A  0875               	movf	MRF89XA_ExchangeFifo@ret,w
  5670  045B  0008               	return
  5671  045C                     __end_of_MRF89XA_ExchangeFifo:	
  5672                           
  5673                           	psect	text43
  5674  0491                     __ptext43:	
  5675 ;; *************** function _MRF89XA_IsFifoEmpty *****************
  5676 ;; Defined at:
  5677 ;;		line 213 in file "MRF89XA.c"
  5678 ;; Parameters:    Size  Location     Type
  5679 ;;		None
  5680 ;; Auto vars:     Size  Location     Type
  5681 ;;  reg             1   11[COMMON] unsigned char 
  5682 ;; Return value:  Size  Location     Type
  5683 ;;                  1    wreg      unsigned char 
  5684 ;; Registers used:
  5685 ;;		wreg, status,2, status,0, pclath, cstack
  5686 ;; Tracked objects:
  5687 ;;		On entry : 0/0
  5688 ;;		On exit  : 0/0
  5689 ;;		Unchanged: 0/0
  5690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5691 ;;      Params:         0       0       0       0       0       0
  5692 ;;      Locals:         1       0       0       0       0       0
  5693 ;;      Temps:          1       0       0       0       0       0
  5694 ;;      Totals:         2       0       0       0       0       0
  5695 ;;Total ram usage:        2 bytes
  5696 ;; Hardware stack levels used:    1
  5697 ;; Hardware stack levels required when called:    4
  5698 ;; This function calls:
  5699 ;;		_MRF89XA_ReadConfig
  5700 ;; This function is called by:
  5701 ;;		_IRQ0_ISR
  5702 ;; This function uses a non-reentrant model
  5703 ;;
  5704                           
  5705                           
  5706                           ;psect for function _MRF89XA_IsFifoEmpty
  5707  0491                     _MRF89XA_IsFifoEmpty:	
  5708                           
  5709                           ;MRF89XA.c: 214: unsigned char reg = MRF89XA_ReadConfig(0x0D);
  5710                           
  5711                           ;incstack = 0
  5712                           ; Regs used in _MRF89XA_IsFifoEmpty: [wreg+status,2+status,0+pclath+cstack]
  5713  0491  300D               	movlw	13
  5714  0492  3184  245C  3184   	fcall	_MRF89XA_ReadConfig
  5715  0495  00FA               	movwf	??_MRF89XA_IsFifoEmpty
  5716  0496  087A               	movf	??_MRF89XA_IsFifoEmpty,w
  5717  0497  00FB               	movwf	MRF89XA_IsFifoEmpty@reg
  5718                           
  5719                           ;MRF89XA.c: 215: return (reg & 0x02) == 0;
  5720  0498  18FB               	btfsc	MRF89XA_IsFifoEmpty@reg,1
  5721  0499  2C9C               	goto	u71_20
  5722  049A  3001               	movlw	1
  5723  049B  0008               	return
  5724  049C                     u71_20:	
  5725  049C  3000               	movlw	0
  5726  049D  0008               	return
  5727  049E                     __end_of_MRF89XA_IsFifoEmpty:	
  5728                           
  5729                           	psect	text44
  5730  045C                     __ptext44:	
  5731 ;; *************** function _MRF89XA_ReadConfig *****************
  5732 ;; Defined at:
  5733 ;;		line 127 in file "MRF89XA.c"
  5734 ;; Parameters:    Size  Location     Type
  5735 ;;  Address         1    wreg     unsigned char 
  5736 ;; Auto vars:     Size  Location     Type
  5737 ;;  Address         1    9[COMMON] unsigned char 
  5738 ;; Return value:  Size  Location     Type
  5739 ;;                  1    wreg      unsigned char 
  5740 ;; Registers used:
  5741 ;;		wreg, status,2, status,0, pclath, cstack
  5742 ;; Tracked objects:
  5743 ;;		On entry : 0/0
  5744 ;;		On exit  : 0/0
  5745 ;;		Unchanged: 0/0
  5746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5747 ;;      Params:         0       0       0       0       0       0
  5748 ;;      Locals:         1       0       0       0       0       0
  5749 ;;      Temps:          1       0       0       0       0       0
  5750 ;;      Totals:         2       0       0       0       0       0
  5751 ;;Total ram usage:        2 bytes
  5752 ;; Hardware stack levels used:    1
  5753 ;; Hardware stack levels required when called:    3
  5754 ;; This function calls:
  5755 ;;		i1_MRF89XA_ExchangeConfig_A
  5756 ;;		i1_MRF89XA_GetAddress
  5757 ;; This function is called by:
  5758 ;;		_MRF89XA_IsFifoEmpty
  5759 ;;		_MRF89XA_IsCRCOK
  5760 ;;		_MRF89XA_IsTxDone
  5761 ;;		_MRF89XA_IsFifoFull
  5762 ;;		_MRF89XA_IsFifoOverrun
  5763 ;; This function uses a non-reentrant model
  5764 ;;
  5765                           
  5766                           
  5767                           ;psect for function _MRF89XA_ReadConfig
  5768  045C                     _MRF89XA_ReadConfig:	
  5769                           
  5770                           ;incstack = 0
  5771                           ; Regs used in _MRF89XA_ReadConfig: [wreg+status,2+status,0+pclath+cstack]
  5772                           ;MRF89XA_ReadConfig@Address stored from wreg
  5773  045C  00F9               	movwf	MRF89XA_ReadConfig@Address
  5774                           
  5775                           ;MRF89XA.c: 128: return MRF89XA_ExchangeConfig_A(MRF89XA_GetAddress(Address, 1), 0xFF);
  5776  045D  30FF               	movlw	255
  5777  045E  00F8               	movwf	??_MRF89XA_ReadConfig
  5778  045F  0878               	movf	??_MRF89XA_ReadConfig,w
  5779  0460  00F4               	movwf	i1MRF89XA_ExchangeConfig_A@Data
  5780  0461  01F0               	clrf	i1MRF89XA_GetAddress@Read
  5781  0462  0AF0               	incf	i1MRF89XA_GetAddress@Read,f
  5782  0463  0879               	movf	MRF89XA_ReadConfig@Address,w
  5783  0464  3184  2423  3184   	fcall	i1_MRF89XA_GetAddress
  5784  0467  3183  23F2         	fcall	i1_MRF89XA_ExchangeConfig_A
  5785  0469  0008               	return
  5786  046A                     __end_of_MRF89XA_ReadConfig:	
  5787                           
  5788                           	psect	text45
  5789  0423                     __ptext45:	
  5790 ;; *************** function i1_MRF89XA_GetAddress *****************
  5791 ;; Defined at:
  5792 ;;		line 183 in file "MRF89XA.c"
  5793 ;; Parameters:    Size  Location     Type
  5794 ;;  Address         1    wreg     unsigned char 
  5795 ;;  Read            1    0[COMMON] unsigned char 
  5796 ;; Auto vars:     Size  Location     Type
  5797 ;;  Address         1    2[COMMON] unsigned char 
  5798 ;;  MRF89XA_GetA    1    3[COMMON] unsigned char 
  5799 ;; Return value:  Size  Location     Type
  5800 ;;                  1    wreg      unsigned char 
  5801 ;; Registers used:
  5802 ;;		wreg, status,2, status,0
  5803 ;; Tracked objects:
  5804 ;;		On entry : 0/0
  5805 ;;		On exit  : 0/0
  5806 ;;		Unchanged: 0/0
  5807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5808 ;;      Params:         1       0       0       0       0       0
  5809 ;;      Locals:         2       0       0       0       0       0
  5810 ;;      Temps:          1       0       0       0       0       0
  5811 ;;      Totals:         4       0       0       0       0       0
  5812 ;;Total ram usage:        4 bytes
  5813 ;; Hardware stack levels used:    1
  5814 ;; This function calls:
  5815 ;;		Nothing
  5816 ;; This function is called by:
  5817 ;;		_MRF89XA_ReadConfig
  5818 ;; This function uses a non-reentrant model
  5819 ;;
  5820                           
  5821                           
  5822                           ;psect for function i1_MRF89XA_GetAddress
  5823  0423                     i1_MRF89XA_GetAddress:	
  5824                           
  5825                           ;incstack = 0
  5826                           ; Regs used in i1_MRF89XA_GetAddress: [wreg+status,2+status,0]
  5827                           ;i1MRF89XA_GetAddress@Address stored from wreg
  5828  0423  00F2               	movwf	i1MRF89XA_GetAddress@Address
  5829                           
  5830                           ;MRF89XA.c: 184: unsigned char ret = Address << 1;
  5831  0424  3572               	lslf	i1MRF89XA_GetAddress@Address,w
  5832  0425  00F1               	movwf	??i1_MRF89XA_GetAddress
  5833  0426  0871               	movf	??i1_MRF89XA_GetAddress,w
  5834  0427  00F3               	movwf	i1MRF89XA_GetAddress@ret
  5835                           
  5836                           ;MRF89XA.c: 185: if(Read != 0) {
  5837  0428  0870               	movf	i1MRF89XA_GetAddress@Read,w
  5838  0429  1903               	btfsc	3,2
  5839  042A  2C30               	goto	i1l2057
  5840                           
  5841                           ;MRF89XA.c: 186: ret = ret | 0b01000000;
  5842  042B  0873               	movf	i1MRF89XA_GetAddress@ret,w
  5843  042C  3840               	iorlw	64
  5844  042D  00F1               	movwf	??i1_MRF89XA_GetAddress
  5845  042E  0871               	movf	??i1_MRF89XA_GetAddress,w
  5846  042F  00F3               	movwf	i1MRF89XA_GetAddress@ret
  5847  0430                     i1l2057:	
  5848                           ;MRF89XA.c: 187: } else {
  5849                           
  5850                           
  5851                           ;MRF89XA.c: 189: };MRF89XA.c: 190: return ret;
  5852  0430  0873               	movf	i1MRF89XA_GetAddress@ret,w
  5853  0431  0008               	return
  5854  0432                     __end_ofi1_MRF89XA_GetAddress:	
  5855                           
  5856                           	psect	text46
  5857  03F2                     __ptext46:	
  5858 ;; *************** function i1_MRF89XA_ExchangeConfig_A *****************
  5859 ;; Defined at:
  5860 ;;		line 155 in file "MRF89XA.c"
  5861 ;; Parameters:    Size  Location     Type
  5862 ;;  Address         1    wreg     unsigned char 
  5863 ;;  Data            1    4[COMMON] unsigned char 
  5864 ;; Auto vars:     Size  Location     Type
  5865 ;;  Address         1    6[COMMON] unsigned char 
  5866 ;;  MRF89XA_Exch    1    7[COMMON] unsigned char 
  5867 ;; Return value:  Size  Location     Type
  5868 ;;                  1    wreg      unsigned char 
  5869 ;; Registers used:
  5870 ;;		wreg, status,2, status,0, pclath, cstack
  5871 ;; Tracked objects:
  5872 ;;		On entry : 0/0
  5873 ;;		On exit  : 0/0
  5874 ;;		Unchanged: 0/0
  5875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5876 ;;      Params:         1       0       0       0       0       0
  5877 ;;      Locals:         2       0       0       0       0       0
  5878 ;;      Temps:          1       0       0       0       0       0
  5879 ;;      Totals:         4       0       0       0       0       0
  5880 ;;Total ram usage:        4 bytes
  5881 ;; Hardware stack levels used:    1
  5882 ;; Hardware stack levels required when called:    2
  5883 ;; This function calls:
  5884 ;;		i1_MRF89XA_SPI_ExchangeByte
  5885 ;; This function is called by:
  5886 ;;		_MRF89XA_ReadConfig
  5887 ;; This function uses a non-reentrant model
  5888 ;;
  5889                           
  5890                           
  5891                           ;psect for function i1_MRF89XA_ExchangeConfig_A
  5892  03F2                     i1_MRF89XA_ExchangeConfig_A:	
  5893                           
  5894                           ;incstack = 0
  5895                           ; Regs used in i1_MRF89XA_ExchangeConfig_A: [wreg+status,2+status,0+pclath+cstack]
  5896                           ;i1MRF89XA_ExchangeConfig_A@Address stored from wreg
  5897  03F2  00F6               	movwf	i1MRF89XA_ExchangeConfig_A@Address
  5898                           
  5899                           ;MRF89XA.c: 156: do { LATAbits.LATA1 = 1; } while(0);
  5900  03F3  0022               	movlb	2	; select bank2
  5901  03F4  148C               	bsf	12,1	;volatile
  5902                           
  5903                           ;MRF89XA.c: 157: do { LATAbits.LATA2 = 0; } while(0);
  5904  03F5  110C               	bcf	12,2	;volatile
  5905                           
  5906                           ;MRF89XA.c: 158: MRF89XA_SPI_ExchangeByte(Address);
  5907  03F6  0876               	movf	i1MRF89XA_ExchangeConfig_A@Address,w
  5908  03F7  3184  24E3  3183   	fcall	i1_MRF89XA_SPI_ExchangeByte
  5909                           
  5910                           ;MRF89XA.c: 159: unsigned char ret = MRF89XA_SPI_ExchangeByte(Data);
  5911  03FA  0874               	movf	i1MRF89XA_ExchangeConfig_A@Data,w
  5912  03FB  3184  24E3         	fcall	i1_MRF89XA_SPI_ExchangeByte
  5913  03FD  00F5               	movwf	??i1_MRF89XA_ExchangeConfig_A
  5914  03FE  0875               	movf	??i1_MRF89XA_ExchangeConfig_A,w
  5915  03FF  00F7               	movwf	i1MRF89XA_ExchangeConfig_A@ret
  5916  0400  0022               	movlb	2	; select bank2
  5917  0401  150C               	bsf	12,2	;volatile
  5918                           
  5919                           ;MRF89XA.c: 161: return ret;
  5920  0402  0877               	movf	i1MRF89XA_ExchangeConfig_A@ret,w
  5921  0403  0008               	return
  5922  0404                     __end_ofi1_MRF89XA_ExchangeConfig_A:	
  5923                           
  5924                           	psect	text47
  5925  04E3                     __ptext47:	
  5926 ;; *************** function i1_MRF89XA_SPI_ExchangeByte *****************
  5927 ;; Defined at:
  5928 ;;		line 77 in file "MRF89XA.c"
  5929 ;; Parameters:    Size  Location     Type
  5930 ;;  byte            1    wreg     unsigned char 
  5931 ;; Auto vars:     Size  Location     Type
  5932 ;;  byte            1    2[COMMON] unsigned char 
  5933 ;; Return value:  Size  Location     Type
  5934 ;;                  1    wreg      unsigned char 
  5935 ;; Registers used:
  5936 ;;		wreg, pclath, cstack
  5937 ;; Tracked objects:
  5938 ;;		On entry : 0/0
  5939 ;;		On exit  : 0/0
  5940 ;;		Unchanged: 0/0
  5941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5942 ;;      Params:         0       0       0       0       0       0
  5943 ;;      Locals:         1       0       0       0       0       0
  5944 ;;      Temps:          1       0       0       0       0       0
  5945 ;;      Totals:         2       0       0       0       0       0
  5946 ;;Total ram usage:        2 bytes
  5947 ;; Hardware stack levels used:    1
  5948 ;; Hardware stack levels required when called:    1
  5949 ;; This function calls:
  5950 ;;		i1_spi1_exchangeByte
  5951 ;; This function is called by:
  5952 ;;		_MRF89XA_ExchangeFifo
  5953 ;;		i1_MRF89XA_ExchangeConfig_A
  5954 ;; This function uses a non-reentrant model
  5955 ;;
  5956                           
  5957                           
  5958                           ;psect for function i1_MRF89XA_SPI_ExchangeByte
  5959  04E3                     i1_MRF89XA_SPI_ExchangeByte:	
  5960                           
  5961                           ;incstack = 0
  5962                           ; Regs used in i1_MRF89XA_SPI_ExchangeByte: [wreg+pclath+cstack]
  5963                           ;i1MRF89XA_SPI_ExchangeByte@byte stored from wreg
  5964  04E3  00F2               	movwf	i1MRF89XA_SPI_ExchangeByte@byte
  5965                           
  5966                           ;MRF89XA.c: 78: return spi1_exchangeByte(byte);
  5967  04E4  0872               	movf	i1MRF89XA_SPI_ExchangeByte@byte,w
  5968  04E5  00F1               	movwf	??i1_MRF89XA_SPI_ExchangeByte
  5969  04E6  0871               	movf	??i1_MRF89XA_SPI_ExchangeByte,w
  5970  04E7  00F0               	movwf	i1spi1_exchangeByte@b
  5971  04E8  3184  24BF         	fcall	i1_spi1_exchangeByte
  5972  04EA  0008               	return
  5973  04EB                     __end_ofi1_MRF89XA_SPI_ExchangeByte:	
  5974                           
  5975                           	psect	text48
  5976  04BF                     __ptext48:	
  5977 ;; *************** function i1_spi1_exchangeByte *****************
  5978 ;; Defined at:
  5979 ;;		line 64 in file "mcc_generated_files/spi1_driver.c"
  5980 ;; Parameters:    Size  Location     Type
  5981 ;;  b               1    0[COMMON] unsigned char 
  5982 ;; Auto vars:     Size  Location     Type
  5983 ;;		None
  5984 ;; Return value:  Size  Location     Type
  5985 ;;                  1    wreg      unsigned char 
  5986 ;; Registers used:
  5987 ;;		wreg
  5988 ;; Tracked objects:
  5989 ;;		On entry : 0/0
  5990 ;;		On exit  : 0/0
  5991 ;;		Unchanged: 0/0
  5992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5993 ;;      Params:         1       0       0       0       0       0
  5994 ;;      Locals:         0       0       0       0       0       0
  5995 ;;      Temps:          0       0       0       0       0       0
  5996 ;;      Totals:         1       0       0       0       0       0
  5997 ;;Total ram usage:        1 bytes
  5998 ;; Hardware stack levels used:    1
  5999 ;; This function calls:
  6000 ;;		Nothing
  6001 ;; This function is called by:
  6002 ;;		i1_MRF89XA_SPI_ExchangeByte
  6003 ;; This function uses a non-reentrant model
  6004 ;;
  6005                           
  6006                           
  6007                           ;psect for function i1_spi1_exchangeByte
  6008  04BF                     i1_spi1_exchangeByte:	
  6009  04BF                     i1l2019:	
  6010                           ;incstack = 0
  6011                           ; Regs used in i1_spi1_exchangeByte: [wreg]
  6012                           
  6013                           
  6014                           ;spi1_driver.c: 66: SSP1BUF = b;
  6015  04BF  0870               	movf	i1spi1_exchangeByte@b,w
  6016  04C0  0024               	movlb	4	; select bank4
  6017  04C1  0091               	movwf	17	;volatile
  6018  04C2                     i1l364:	
  6019                           ;spi1_driver.c: 67: while(!PIR1bits.SSP1IF);
  6020                           
  6021  04C2  0020               	movlb	0	; select bank0
  6022  04C3  1D91               	btfss	17,3	;volatile
  6023  04C4  2CC2               	goto	i1l364
  6024                           
  6025                           ;spi1_driver.c: 68: PIR1bits.SSP1IF = 0;
  6026  04C5  1191               	bcf	17,3	;volatile
  6027                           
  6028                           ;spi1_driver.c: 69: return SSP1BUF;
  6029  04C6  0024               	movlb	4	; select bank4
  6030  04C7  0811               	movf	17,w	;volatile
  6031  04C8  0008               	return
  6032  04C9                     __end_ofi1_spi1_exchangeByte:	
  6033                           
  6034                           	psect	text49
  6035  0529                     __ptext49:	
  6036 ;; *************** function _ADC_ISR *****************
  6037 ;; Defined at:
  6038 ;;		line 134 in file "mcc_generated_files/adc.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;		None
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;		None
  6043 ;; Return value:  Size  Location     Type
  6044 ;;                  1    wreg      void 
  6045 ;; Registers used:
  6046 ;;		None
  6047 ;; Tracked objects:
  6048 ;;		On entry : 0/0
  6049 ;;		On exit  : 0/0
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6052 ;;      Params:         0       0       0       0       0       0
  6053 ;;      Locals:         0       0       0       0       0       0
  6054 ;;      Temps:          0       0       0       0       0       0
  6055 ;;      Totals:         0       0       0       0       0       0
  6056 ;;Total ram usage:        0 bytes
  6057 ;; Hardware stack levels used:    1
  6058 ;; This function calls:
  6059 ;;		Nothing
  6060 ;; This function is called by:
  6061 ;;		_INTERRUPT_InterruptManager
  6062 ;; This function uses a non-reentrant model
  6063 ;;
  6064                           
  6065                           
  6066                           ;psect for function _ADC_ISR
  6067  0529                     _ADC_ISR:	
  6068                           
  6069                           ;adc.c: 137: PIR1bits.ADIF = 0;
  6070                           
  6071                           ;incstack = 0
  6072                           ; Regs used in _ADC_ISR: []
  6073  0529  0020               	movlb	0	; select bank0
  6074  052A  1311               	bcf	17,6	;volatile
  6075  052B  0008               	return
  6076  052C                     __end_of_ADC_ISR:	
  6077  007E                     btemp	set	126	;btemp
  6078  007E                     int$flags	set	126
  6079  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    29
    Data        3
    BSS         9
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     23      42
    BANK1            32      0       0
    BANK2             0      0       0
    BANK3             0      0       0
    BANK4             0      0       0

Pointer List with Targets:

    S33$3$0	PTR void  size(1) Largest target is 0

    S33$4$0	PTR void  size(1) Largest target is 0

    S33$5$0	PTR void  size(1) Largest target is 0

    S33$8$0	PTR FTN()void  size(2) Largest target is 0

    spi1_interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    IOCBF5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCBF5_DefaultInterruptHandler(), 

    IOCBF5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCBF5_DefaultInterruptHandler(), Absolute function(), 

    IOCBF3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCBF3_DefaultInterruptHandler(), 

    IOCBF3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCBF3_DefaultInterruptHandler(), Absolute function(), 

    IOCBF0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IRQ0_ISR(), IOCBF0_DefaultInterruptHandler(), 

    IOCBF0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IRQ0_ISR(), IOCBF0_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR2_DefaultInterruptHandler(), 

    S33$spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> spi1_isr(), 

    spiMaster.spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> spi1_isr(), 

    S33$setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> spi1_setSpiISR(), 

    spiMaster.setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> spi1_setSpiISR(), 

    S33$readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> spi1_readByte(), 

    spiMaster.readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> spi1_readByte(), 

    S33$writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> spi1_writeByte(), 

    spiMaster.writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> spi1_writeByte(), 

    S33$readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> spi1_readBlock(), 

    spiMaster.readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> spi1_readBlock(), 

    S33$writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> spi1_writeBlock(), 

    spiMaster.writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> spi1_writeBlock(), 

    S33$exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> spi1_exchangeBlock(), 

    spiMaster.exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> spi1_exchangeBlock(), 

    S33$exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> spi1_exchangeByte(), 

    spiMaster.exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> i1_spi1_exchangeByte(), spi1_exchangeByte(), 

    S33$spiOpen	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> MASTER_open(), 

    spiMaster.spiOpen	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> MASTER_open(), 

    S33$spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> spi1_close(), 

    spiMaster.spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> spi1_close(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _IOCBF0_ISR->_IRQ0_ISR
    _IRQ0_ISR->_MRF89XA_IsFifoEmpty
    _MRF89XA_ReadFifo->_MRF89XA_ExchangeFifo
    _MRF89XA_ExchangeFifo->i1_MRF89XA_SPI_ExchangeByte
    _MRF89XA_IsFifoEmpty->_MRF89XA_ReadConfig
    _MRF89XA_ReadConfig->i1_MRF89XA_ExchangeConfig_A
    i1_MRF89XA_ExchangeConfig_A->i1_MRF89XA_GetAddress
    i1_MRF89XA_SPI_ExchangeByte->i1_spi1_exchangeByte

Critical Paths under _main in BANK0

    _main->_MRF89XA_Initialize
    _SYSTEM_Initialize->_spi_master_open
    _MASTER_open->_spi1_open
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF3_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF5_SetInterruptHandler
    _MRF89XA_Initialize->_MRF89XA_SetMode
    _MRF89XA_Initialize->_MRF89XA_SetModulation
    _MRF89XA_SetModulation->_MRF89XA_WriteConfig
    _MRF89XA_SetMode->_MRF89XA_WriteConfig
    _MRF89XA_WriteConfig->_MRF89XA_ExchangeConfig_A
    _MRF89XA_ExchangeConfig_A->_MRF89XA_GetAddress
    _MRF89XA_SPI_ExchangeByte->_spi1_exchangeByte

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _IOCBF0_ISR->_IRQ0_ISR

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   10693
                                             21 BANK0      2     2      0
                          _Delay_Xms
         _IOCBF0_SetInterruptHandler
                 _MRF89XA_Initialize
                    _MRF89XA_SetMode
                   _POWER_LED_TOGGLE
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     518
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
                    _spi_master_open
 ---------------------------------------------------------------------------------
 (2) _spi_master_open                                      1     1      0     110
                                              7 BANK0      1     1      0
                        _MASTER_open
 ---------------------------------------------------------------------------------
 (3) _MASTER_open                                          0     0      0      88
                          _spi1_open
 ---------------------------------------------------------------------------------
 (4) _spi1_open                                            4     4      0      88
                                              3 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     322
         _IOCBF0_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
         _IOCBF5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCBF5_SetInterruptHandler                           2     0      2      86
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCBF3_SetInterruptHandler                           2     0      2      86
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCBF0_SetInterruptHandler                           2     0      2     150
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POWER_LED_TOGGLE                                     0     0      0       0
                      _POWER_LED_OFF
                       _POWER_LED_ON
 ---------------------------------------------------------------------------------
 (2) _POWER_LED_ON                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _POWER_LED_OFF                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MRF89XA_Initialize                                   4     2      2    7057
                                             17 BANK0      4     2      2
                    _MRF89XA_SetMode
              _MRF89XA_SetModulation
                _MRF89XA_WriteConfig
 ---------------------------------------------------------------------------------
 (2) _MRF89XA_SetModulation                                3     3      0    2288
                                             14 BANK0      3     3      0
                _MRF89XA_WriteConfig
 ---------------------------------------------------------------------------------
 (1) _MRF89XA_SetMode                                      3     3      0    2334
                                             14 BANK0      3     3      0
                _MRF89XA_WriteConfig
 ---------------------------------------------------------------------------------
 (2) _MRF89XA_WriteConfig                                  3     2      1    2241
                                             11 BANK0      3     2      1
           _MRF89XA_ExchangeConfig_A
                 _MRF89XA_GetAddress
 ---------------------------------------------------------------------------------
 (3) _MRF89XA_GetAddress                                   4     3      1     192
                                              3 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _MRF89XA_ExchangeConfig_A                             4     3      1     469
                                              7 BANK0      4     3      1
                 _MRF89XA_GetAddress (ARG)
           _MRF89XA_SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (4) _MRF89XA_SPI_ExchangeByte                             2     2      0     300
                                              4 BANK0      2     2      0
                  _spi1_exchangeByte
 ---------------------------------------------------------------------------------
 (5) _spi1_exchangeByte                                    1     0      1     278
                                              3 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (1) _Delay_Xms                                            9     5      4     634
                                              3 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0     608
                            _ADC_ISR
                    _PIN_MANAGER_IOC
                           _TMR2_ISR
                           _spi1_isr
 ---------------------------------------------------------------------------------
 (8) _spi1_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR2_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _PIN_MANAGER_IOC                                      0     0      0     608
                         _IOCBF0_ISR
                         _IOCBF3_ISR
                         _IOCBF5_ISR
 ---------------------------------------------------------------------------------
 (9) _IOCBF5_ISR                                           0     0      0       0
                   Absolute function *
     _IOCBF5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _IOCBF5_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _IOCBF3_ISR                                           0     0      0       0
                   Absolute function *
     _IOCBF3_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _IOCBF3_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _IOCBF0_ISR                                           0     0      0     608
                   Absolute function *
     _IOCBF0_DefaultInterruptHandler *
                           _IRQ0_ISR *
 ---------------------------------------------------------------------------------
 (10) _IRQ0_ISR                                            4     4      0     608
                                             12 COMMON     1     1      0
                                              0 BANK0      3     3      0
                _MRF89XA_IsFifoEmpty
                           _ReadFifo
                        i1_Delay_Xms
 ---------------------------------------------------------------------------------
 (11) i1_Delay_Xms                                         9     5      4      98
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (11) _ReadFifo                                            3     3      0     160
                                              6 COMMON     3     3      0
                   _MRF89XA_ReadFifo
 ---------------------------------------------------------------------------------
 (12) _MRF89XA_ReadFifo                                    0     0      0     115
               _MRF89XA_ExchangeFifo
 ---------------------------------------------------------------------------------
 (13) _MRF89XA_ExchangeFifo                                3     3      0     115
                                              3 COMMON     3     3      0
         i1_MRF89XA_SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (11) _MRF89XA_IsFifoEmpty                                 2     2      0     324
                                             10 COMMON     2     2      0
                 _MRF89XA_ReadConfig
 ---------------------------------------------------------------------------------
 (12) _MRF89XA_ReadConfig                                  2     2      0     301
                                              8 COMMON     2     2      0
         i1_MRF89XA_ExchangeConfig_A
               i1_MRF89XA_GetAddress
 ---------------------------------------------------------------------------------
 (13) i1_MRF89XA_GetAddress                                4     3      1     116
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (13) i1_MRF89XA_ExchangeConfig_A                          4     3      1     163
                                              4 COMMON     4     3      1
               i1_MRF89XA_GetAddress (ARG)
         i1_MRF89XA_SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (14) i1_MRF89XA_SPI_ExchangeByte                          2     2      0      70
                                              1 COMMON     2     2      0
                i1_spi1_exchangeByte
 ---------------------------------------------------------------------------------
 (15) i1_spi1_exchangeByte                                 1     0      1      48
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (10) _IOCBF0_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay_Xms
   _IOCBF0_SetInterruptHandler
   _MRF89XA_Initialize
     _MRF89XA_SetMode
       _MRF89XA_WriteConfig
         _MRF89XA_ExchangeConfig_A
           _MRF89XA_GetAddress (ARG)
           _MRF89XA_SPI_ExchangeByte (ARG)
             _spi1_exchangeByte
         _MRF89XA_GetAddress
     _MRF89XA_SetModulation
       _MRF89XA_WriteConfig
         _MRF89XA_ExchangeConfig_A
           _MRF89XA_GetAddress (ARG)
           _MRF89XA_SPI_ExchangeByte (ARG)
             _spi1_exchangeByte
         _MRF89XA_GetAddress
     _MRF89XA_WriteConfig
       _MRF89XA_ExchangeConfig_A
         _MRF89XA_GetAddress (ARG)
         _MRF89XA_SPI_ExchangeByte (ARG)
           _spi1_exchangeByte
       _MRF89XA_GetAddress
   _MRF89XA_SetMode
     _MRF89XA_WriteConfig
       _MRF89XA_ExchangeConfig_A
         _MRF89XA_GetAddress (ARG)
         _MRF89XA_SPI_ExchangeByte (ARG)
           _spi1_exchangeByte
       _MRF89XA_GetAddress
   _POWER_LED_TOGGLE
     _POWER_LED_OFF
     _POWER_LED_ON
   _SYSTEM_Initialize
     _ADC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCBF0_SetInterruptHandler
       _IOCBF3_SetInterruptHandler
       _IOCBF5_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize
     _spi_master_open
       _MASTER_open
         _spi1_open

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _PIN_MANAGER_IOC
     _IOCBF0_ISR
       Absolute function(Fake) *
       _IOCBF0_DefaultInterruptHandler *
       _IRQ0_ISR *
         _MRF89XA_IsFifoEmpty
           _MRF89XA_ReadConfig
             i1_MRF89XA_ExchangeConfig_A
               i1_MRF89XA_GetAddress (ARG)
               i1_MRF89XA_SPI_ExchangeByte (ARG)
                 i1_spi1_exchangeByte
             i1_MRF89XA_GetAddress
         _ReadFifo
           _MRF89XA_ReadFifo
             _MRF89XA_ExchangeFifo
               i1_MRF89XA_SPI_ExchangeByte
                 i1_spi1_exchangeByte
         i1_Delay_Xms
     _IOCBF3_ISR
       Absolute function(Fake) *
       _IOCBF3_DefaultInterruptHandler *
     _IOCBF5_ISR
       Absolute function(Fake) *
       _IOCBF5_DefaultInterruptHandler *
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
   _spi1_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      38       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     17      2A       6       52.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK2                0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK3                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      38      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Aug 08 16:25:45 2019

              ??i1_MRF89XA_SPI_ExchangeByte 0071            __end_of_TMR2_SetInterruptHandler 04F8  
          ??_IOCBF3_DefaultInterruptHandler 0070             ?_IOCBF3_DefaultInterruptHandler 0070  
                               __CFG_CP$OFF 0000                                 __CFG_LVP$ON 0000  
                                       l444 02D1                                         l364 041C  
                                       l551 00FA                                         l543 00D0  
                                       l547 00E5                                         _PR2 001B  
                              __CFG_CPD$OFF 0000                                         u933 02E3  
                           __end_of_ADC_ISR 052C                                         _rxB 2070  
                                       _rxC 007D                             _TMR2_Initialize 03CE  
                              __CFG_BORV$LO 0000                                         wreg 0009  
                              __CFG_IESO$ON 0000                                ?_MASTER_open 0070  
              MRF89XA_ExchangeConfig_A@Data 0027                    __size_of_MRF89XA_SetMode 001F  
                                      l2113 0412                                        l2029 0418  
                                      l2165 0435                                        l2087 024F  
                                      l2175 043A                                        l2337 04BC  
                                      l2169 0438                                        l2441 00BA  
                                      l2283 0331                                        l2451 00D5  
                                      l2445 00C0                                        l2287 033A  
                                      l2279 032C                                        l2463 00FF  
                                      l2289 033B                                        l2297 039A  
                                      l2481 0125                                        l2457 00EA  
                                      l2475 0123                                        l2467 010E  
                                      l2477 011D                              _spi1_writeByte 0000  
                                      u1237 00C6                                        _LATA 010C  
                                      _LATB 010D                                        u1247 00DB  
                                      u1257 00F0                                        u1267 0105  
                                      u1277 02E9                                        _TMR2 001A  
                                      _WPUA 020C                                        _WPUB 020D  
       __size_ofi1_MRF89XA_SPI_ExchangeByte 0008                                __CFG_WRT$OFF 0000  
                             __CFG_FCMEN$ON 0000                      MRF89XA_Initialize@Mode 0031  
                                      _main 0052                                        fsr0h 0005  
                                      fsr1h 0007                                        indf0 0000  
                                      fsr0l 0004                                        indf1 0001  
                                      fsr1l 0006                                        btemp 007E  
                             __CFG_BOREN$ON 0000                                        start 002D  
                            _BlinkCounterOn 0048                MRF89XA_SPI_ExchangeByte@byte 0025  
                             __CFG_MCLRE$ON 0000              __size_of_OSCILLATOR_Initialize 0007  
                __end_of_MRF89XA_GetAddress 0414                            __end_of_IRQ0_ISR 0291  
           MRF89XA_ExchangeConfig_A@Address 0029           i1MRF89XA_ExchangeConfig_A@Address 0076  
                       __size_of_IOCBF0_ISR 000D                         __size_of_IOCBF3_ISR 000D  
             __end_of_OSCILLATOR_Initialize 04F2                         __size_of_IOCBF5_ISR 000D  
                           _spi1_writeBlock 0000                                       ?_main 0070  
                             __CFG_WDTE$OFF 0000                                       _T2CON 001C  
                                     i1l150 0019                                       i1l152 0023  
                                     i1l147 000D                                       i1l500 026B  
                                     i1l157 002B                                       i1l506 028F  
                                     i1l364 04C2                                       i1l444 0300  
                    ?_MRF89XA_SetModulation 0070                                       u71_20 049C  
                                     _TRISA 008C                                       _TRISB 008D  
                                     u74_23 0312                                       u76_20 0268  
                               ReadFifo@res 0078                    __end_of_MRF89XA_ReadFifo 0526  
                          __end_of_TMR2_ISR 03CE                     __end_of_PIN_MANAGER_IOC 03F2  
                            _WDT_Initialize 051E                        i1_MRF89XA_GetAddress 0423  
                                     pclath 000A               i1MRF89XA_ExchangeConfig_A@ret 0077  
                                     status 0003                                       wtemp0 007E  
                           _BlinkCounterOff 0047                         i1_spi1_exchangeByte 04BF  
          __end_of_MRF89XA_ExchangeConfig_A 0392                ??i1_MRF89XA_ExchangeConfig_A 0075  
                     spi_master_open@config 0027                             __initialization 002F  
                     MRF89XA_GetAddress@ret 0026                                __end_of_main 0131  
                          __end_of_ReadFifo 0362                     __end_of_TMR2_Initialize 03E0  
                                 ??_ADC_ISR 0070                 ?_INTERRUPT_InterruptManager 0070  
                        __size_of_Delay_Xms 0030                    _MRF89XA_SPI_ExchangeByte 04D2  
                   MRF89XA_WriteConfig@Data 002B                    _TMR2_SetInterruptHandler 04F2  
                                    ??_main 0035                        ?i1_spi1_exchangeByte 0070  
                __end_of_MRF89XA_ReadConfig 046A                              __CFG_PLLEN$OFF 0000  
                   _IOCBF0_InterruptHandler 003B                      __end_of_WDT_Initialize 0522  
                __end_of_MRF89XA_Initialize 01FA                       ?i1_MRF89XA_GetAddress 0070  
                                    _ADCON0 009D                                      _ADCON1 009E  
              ??_IOCBF5_SetInterruptHandler 0025                                      _ADRESH 009C  
                                    _EEADRH 0192                                      _ADRESL 009B  
                                    _EEADRL 0191         __size_ofi1_MRF89XA_ExchangeConfig_A 0012  
                                    _EEDATH 0194                                      _EEDATL 0193  
                                    _EECON2 0196                         _MRF89XA_WriteConfig 0440  
                                    _ANSELA 018C                                      _ANSELB 018D  
                                    _BORCON 0116                                ?i1_Delay_Xms 0070  
                                    i1l2019 04BF                                      i1l2057 0430  
                                    i1l2313 03E6                                      i1l2157 0285  
                                    i1l2317 03EC                                      i1l2263 0481  
                                    i1l2257 048E                                      i1l2269 0474  
                                    u128_27 0317                                      _OSCCON 0099  
                                    _WDTCON 0097                           ??_MRF89XA_SetMode 002E  
                            __CFG_PWRTE$OFF 0000          __end_ofi1_MRF89XA_SPI_ExchangeByte 04EB  
                i1_MRF89XA_SPI_ExchangeByte 04E3                 __end_of_MRF89XA_IsFifoEmpty 049E  
                      ?_MRF89XA_WriteConfig 002B                              __CFG_STVREN$ON 0000  
                     ??i1_spi1_exchangeByte 0071                            __end_of_spi1_isr 051A  
       __size_of_IOCBF5_SetInterruptHandler 0006                _TMR4_INTERRUPT_TICKER_FACTOR 0049  
                           ?_WDT_Initialize 0070  IOCBF5_SetInterruptHandler@InterruptHandler 0023  
IOCBF3_SetInterruptHandler@InterruptHandler 0023  IOCBF0_SetInterruptHandler@InterruptHandler 0023  
  TMR2_SetInterruptHandler@InterruptHandler 0023                            ?_PIN_MANAGER_IOC 0070  
                       MRF89XA_SetMode@Mode 0030                                ??_IOCBF0_ISR 007D  
                              ??_IOCBF3_ISR 0070                        __size_of_MASTER_open 0004  
                              ??_IOCBF5_ISR 0070                         MRF89XA_SetMode@mask 002F  
                     __end_of_POWER_LED_OFF 0515                           _SYSTEM_Initialize 0362  
                         __end_of_Delay_Xms 02F8                     __end_of__initialization 004E  
                     __end_of_TMR2_CallBack 04B5                                   ?_IRQ0_ISR 0070  
                        ?_SYSTEM_Initialize 0070                           ?_POWER_LED_TOGGLE 0070  
                        ??_POWER_LED_TOGGLE 0023                                _BlinkCounter 0043  
                            _TurnOffTimeout 052C                      MRF89XA_GetAddress@Read 0023  
                            __pcstackCOMMON 0070                       ??_MRF89XA_WriteConfig 002C  
                              __pidataBANK0 0526                         ??_SYSTEM_Initialize 0028  
                  _MRF89XA_ExchangeConfig_A 037B                                   ?_TMR2_ISR 0070  
    __end_of_IOCBF0_DefaultInterruptHandler 0531     __size_of_IOCBF0_DefaultInterruptHandler 0001  
            _IOCBF0_DefaultInterruptHandler 0530                            ?_TMR2_Initialize 0070  
                        __end_of_IOCBF0_ISR 0491                          __end_of_IOCBF3_ISR 0484  
                        __end_of_IOCBF5_ISR 0477                          _spi1_configuration 04DB  
                            _OPTION_REGbits 0095                      ??i1_MRF89XA_GetAddress 0071  
             __size_of_MRF89XA_ExchangeFifo 000E      __end_of_IOCBF3_DefaultInterruptHandler 0530  
   __size_of_IOCBF3_DefaultInterruptHandler 0001              _IOCBF3_DefaultInterruptHandler 052F  
                 __end_of_SYSTEM_Initialize 037B                                  __pbssBANK0 003F  
                                 ?_ReadFifo 0070          __end_ofi1_MRF89XA_ExchangeConfig_A 0404  
                i1_MRF89XA_ExchangeConfig_A 03F2                                  ??_IRQ0_ISR 007C  
                  __size_of_spi_master_open 000E                      __end_of_TurnOffTimeout 052D  
                                __pmaintext 0052                          __size_of_spi1_open 0057  
                                ??_TMR2_ISR 0070                                  __pintentry 0004  
                   ??_MRF89XA_SetModulation 002E                                     _ADC_ISR 0529  
                                   _APFCON0 011D                                     _APFCON1 011E  
                   __size_of_ADC_Initialize 0009                              Delay_Xms@delay 0023  
                         ?_MRF89XA_ReadFifo 0070          __end_of_IOCBF5_SetInterruptHandler 04FE  
                _IOCBF5_SetInterruptHandler 04F8                                     _OSCTUNE 0098  
                                   _SSP1ADD 0212                                     _SSP1BUF 0211  
                MRF89XA_WriteConfig@Address 002D                          ??_MRF89XA_ReadFifo 0076  
                        _MRF89XA_GetAddress 0404                                  ??_ReadFifo 0076  
                      __size_ofi1_Delay_Xms 002D                         ?_MRF89XA_GetAddress 0023  
                             ?_POWER_LED_ON 0070                                   ?_spi1_isr 0070  
                ??_MRF89XA_SPI_ExchangeByte 0024                  ??_TMR2_SetInterruptHandler 0025  
                      i1spi1_exchangeByte@b 0070                                     __ptext1 0362  
                                   __ptext2 0432                                     __ptext3 051A  
                                   __ptext4 01FA                                     __ptext5 051E  
                                   __ptext6 03CE                                     __ptext7 04F2  
                                   __ptext8 0291                                     __ptext9 04F8  
                      ??_MRF89XA_GetAddress 0024                       _OSCILLATOR_Initialize 04EB  
                                 _T2CONbits 001C                    ??_PIN_MANAGER_Initialize 0025  
                                 _IOCBFbits 0396                                   _IOCBNbits 0395  
                                 _IOCBPbits 0394                                  _spi1_close 0000  
                           _MRF89XA_SetMode 0325                           __end_of_spi1_open 0251  
                __size_of_SYSTEM_Initialize 0019                                     clrloop0 049F  
                      end_of_initialization 004E                               IRQ0_ISR@Data1 0022  
                        _MRF89XA_ReadConfig 045C                              ??_POWER_LED_ON 0023  
                         __end_of_spiMaster 03BB                                  ??_spi1_isr 0070  
                        _MRF89XA_Initialize 0131                         ?_MRF89XA_ReadConfig 0070  
               ?i1_MRF89XA_SPI_ExchangeByte 0070                           ??_spi_master_open 0027  
                       ?_MRF89XA_Initialize 0031                            ??_WDT_Initialize 0023  
                            _TimeoutCounter 0044                                   _PORTAbits 000C  
                                 _PORTBbits 000D                               _spi1_readByte 0000  
                          __CFG_FOSC$INTOSC 0000                        ??_MRF89XA_ReadConfig 0078  
                                 _TRISBbits 008D                ??_IOCBF0_SetInterruptHandler 0025  
              ??_IOCBF3_SetInterruptHandler 0025                        ??_MRF89XA_Initialize 0033  
                        _spi1_exchangeBlock 0000                       _spi1_interruptHandler 003F  
                ??_MRF89XA_ExchangeConfig_A 0028                                   _Delay_Xms 02C8  
                         __size_of_IRQ0_ISR 0040                 __end_ofi1_spi1_exchangeByte 04C9  
      __end_of_TMR2_DefaultInterruptHandler 052E       __size_of_TMR2_DefaultInterruptHandler 0001  
              _TMR2_DefaultInterruptHandler 052D                           __size_of_TMR2_ISR 0013  
                            _ADC_Initialize 04C9         __size_of_IOCBF0_SetInterruptHandler 0006  
       __size_of_IOCBF3_SetInterruptHandler 0006                      ?_OSCILLATOR_Initialize 0070  
                   __end_of_MRF89XA_SetMode 0344                   __size_of_POWER_LED_TOGGLE 000A  
              __size_of_MRF89XA_IsFifoEmpty 000D                         start_initialization 002F  
                             ??_MASTER_open 0027             __size_of_PIN_MANAGER_Initialize 0037  
           MRF89XA_SetModulation@Modulation 002F                 __end_of_MRF89XA_WriteConfig 044E  
               ?i1_MRF89XA_ExchangeConfig_A 0074                           __size_of_ReadFifo 001E  
                  __size_of_PIN_MANAGER_IOC 0012                                  ?_Delay_Xms 0023  
              __end_of_MRF89XA_ExchangeFifo 045C                      __end_of_ADC_Initialize 04D2  
                               __pdataBANK0 0047                                    ?_ADC_ISR 0070  
             ?_TMR2_DefaultInterruptHandler 0070              __size_of_MRF89XA_SetModulation 0015  
                    __size_of_POWER_LED_OFF 0005               __end_of_MRF89XA_SetModulation 03A7  
                      __end_of_POWER_LED_ON 0510                      __size_of_TMR2_CallBack 000B  
                               __pbssBIGRAM 2070                                 __pbssCOMMON 007D  
                                 ___latbits 0001                               __pcstackBANK0 0020  
                  __size_of_TMR2_Initialize 0012                 ?_IOCBF5_SetInterruptHandler 0023  
             __size_ofi1_MRF89XA_GetAddress 000F                         __end_of_MASTER_open 051E  
                          i1Delay_Xms@delay 0070                    MRF89XA_ExchangeFifo@Data 0074  
                                 __pnvBANK0 0037                   MRF89XA_SetModulation@mask 0030  
                   _IOCBF3_InterruptHandler 0039                   __size_of_MRF89XA_ReadFifo 0004  
                    _PIN_MANAGER_Initialize 0291                                i1Delay_Xms@i 0075  
                        spi1_exchangeByte@b 0023                           __size_of_spi1_isr 0005  
           spi1_open@spiUniqueConfiguration 0026                             ?_ADC_Initialize 0070  
              ??_INTERRUPT_InterruptManager 007D                            ?_MRF89XA_SetMode 0070  
          ??_IOCBF5_DefaultInterruptHandler 0070             ?_IOCBF5_DefaultInterruptHandler 0070  
        __end_of_IOCBF0_SetInterruptHandler 050A                  _IOCBF0_SetInterruptHandler 0504  
        __end_of_IOCBF3_SetInterruptHandler 0504                  _IOCBF3_SetInterruptHandler 04FE  
              MRF89XA_Initialize@Modulation 0032                               ??i1_Delay_Xms 0074  
                             _TMR4_INT_FLAG 0046                   MRF89XA_GetAddress@Address 0025  
                                 _spi1_open 01FA                               _POWER_LED_OFF 0510  
                           _spi_master_open 0432                                    _LATAbits 010C  
                                  _IRQ0_ISR 0251                                   clear_ram0 049E  
                             _TMR2_CallBack 04AA                                    _PIE1bits 0091  
               MRF89XA_ExchangeConfig_A@ret 002A                                 ??_Delay_Xms 0027  
       __size_of_INTERRUPT_InterruptManager 0029                                    _PIR1bits 0011  
                                 _spiMaster 03A7                                    _SSP1CON1 0215  
                                  _SSP1CON2 0216                                    _TMR2_ISR 03BB  
                                  _SSP1STAT 0214                           ??_PIN_MANAGER_IOC 007D  
                          __size_of_ADC_ISR 0003                                  _ADCON0bits 009D  
                          _POWER_LED_TOGGLE 04B5                           _spi1_exchangeByte 0414  
               __size_of_MRF89XA_GetAddress 0010           __size_of_MRF89XA_SPI_ExchangeByte 0009  
                 ?_MRF89XA_SPI_ExchangeByte 0070                   MRF89XA_ReadConfig@Address 0079  
            ??_TMR2_DefaultInterruptHandler 0070           __size_of_TMR2_SetInterruptHandler 0006  
                        ?_spi1_exchangeByte 0023                   ?_TMR2_SetInterruptHandler 0023  
                      _MRF89XA_ExchangeFifo 044E                                 _MASTER_open 051A  
                                  _LedState 0045                         ??_spi1_exchangeByte 0024  
                            ?_POWER_LED_OFF 0070                                    _ReadFifo 0344  
                         ??_TMR2_Initialize 0025                                  ?_spi1_open 0070  
                            ?_TMR2_CallBack 0070                         _MRF89XA_IsFifoEmpty 0491  
                                _EECON1bits 0195                         __end_ofi1_Delay_Xms 0325  
                   ??_OSCILLATOR_Initialize 0023                       __size_of_POWER_LED_ON 0006  
                 __end_of_spi1_exchangeByte 0423                 i1MRF89XA_GetAddress@Address 0072  
            i1MRF89XA_ExchangeConfig_A@Data 0074                        ?_MRF89XA_IsFifoEmpty 0070  
                                _ANSELBbits 018D                     MRF89XA_ExchangeFifo@ret 0075  
                     ?_MRF89XA_ExchangeFifo 0070                 __size_of_MRF89XA_ReadConfig 000E  
                   __end_of_spi_master_open 0440                                    __ptext10 04FE  
                                  __ptext11 0504                                    __ptext20 0440  
                                  __ptext12 04EB                                    __ptext21 0404  
                                  __ptext13 04C9                                    __ptext30 052D  
                                  __ptext22 037B                                    __ptext14 04B5  
                                  __ptext31 03E0                                    __ptext23 04D2  
                                  __ptext15 050A                                    __ptext40 0344  
                                  __ptext32 046A                                    __ptext24 0414  
                                  __ptext16 0510                                    __ptext41 0522  
                                  __ptext33 052E                                    __ptext25 02C8  
                                  __ptext17 0131                                    __ptext42 044E  
                                  __ptext34 0477                                    __ptext18 0392  
                                  __ptext43 0491                                    __ptext35 052F  
                                  __ptext27 0515                                    __ptext19 0325  
                                  __ptext44 045C                                    __ptext36 0484  
                                  __ptext28 03BB                                    __ptext45 0423  
                                  __ptext37 0530                                    __ptext29 04AA  
                                  __ptext46 03F2                                    __ptext38 0251  
                                  __ptext47 04E3                                    __ptext39 02F8  
                                  __ptext48 04BF                                    __ptext49 0529  
                              _SSP1CON1bits 0215              i1MRF89XA_SPI_ExchangeByte@byte 0072  
               _spi1_exchangeByte$intlevel0 0418                                  _IOCBF0_ISR 0484  
               __size_of_MRF89XA_Initialize 00C9                                  _IOCBF3_ISR 0477  
                                _IOCBF5_ISR 046A                               __size_of_main 00DF  
                                  _spi1_isr 0515                                _POWER_LED_ON 050A  
                          _MRF89XA_ReadFifo 0522                                    int$flags 007E  
        __end_of_INTERRUPT_InterruptManager 002D                  _INTERRUPT_InterruptManager 0004  
         __size_of_MRF89XA_ExchangeConfig_A 0017                   ?_MRF89XA_ExchangeConfig_A 0027  
                     ??_MRF89XA_IsFifoEmpty 007A                __size_ofi1_spi1_exchangeByte 000A  
                                _INTCONbits 000B                                  Delay_Xms@i 0028  
                           ??_POWER_LED_OFF 0023                     __size_of_WDT_Initialize 0004  
                    MRF89XA_IsFifoEmpty@reg 007B                                    intlevel1 0000  
                               i1_Delay_Xms 02F8                             ??_TMR2_CallBack 0070  
                               ??_spi1_open 0023                     ?_PIN_MANAGER_Initialize 0070  
                         __CFG_CLKOUTEN$OFF 0000                            ??_ADC_Initialize 0023  
              __end_ofi1_MRF89XA_GetAddress 0432                __size_of_MRF89XA_WriteConfig 000E  
                __size_of_spi1_exchangeByte 000F                               __pstringtext1 03A7  
                             __pstringtext2 04DB                               __pstringtext3 052C  
                    ??_MRF89XA_ExchangeFifo 0073                       TMR2_ISR@CountCallBack 0041  
                     _MRF89XA_SetModulation 0392                 ?_IOCBF0_SetInterruptHandler 0023  
               ?_IOCBF3_SetInterruptHandler 0023                            ?_spi_master_open 0070  
                            _spi1_readBlock 0000                                 ?_IOCBF0_ISR 0070  
                               ?_IOCBF3_ISR 0070                                 ?_IOCBF5_ISR 0070  
            __end_of_PIN_MANAGER_Initialize 02C8            ??_IOCBF0_DefaultInterruptHandler 0070  
           ?_IOCBF0_DefaultInterruptHandler 0070                    i1MRF89XA_GetAddress@Read 0070  
    __end_of_IOCBF5_DefaultInterruptHandler 052F     __size_of_IOCBF5_DefaultInterruptHandler 0001  
            _IOCBF5_DefaultInterruptHandler 052E                    __end_of_POWER_LED_TOGGLE 04BF  
                           _PIN_MANAGER_IOC 03E0                       _TMR2_InterruptHandler 003D  
                   i1MRF89XA_GetAddress@ret 0073                     _IOCBF5_InterruptHandler 0037  
                 MRF89XA_Initialize@Address 0034                              _spi1_setSpiISR 0000  
                __end_of_spi1_configuration 04E3            __end_of_MRF89XA_SPI_ExchangeByte 04DB  
